[{"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\index.js":"1","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\App.js":"2","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Create.js":"3","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\DashBoard.js":"4","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Manage.js":"5","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\ViewItem.js":"6","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Modify.js":"7","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Settings.js":"8","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Layout.js":"9","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\ARCard.js":"10","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\RightNav.js":"11","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Manage\\ListSSA.js":"12","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Dashboard\\DashboardCard.js":"13","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\WebAction.js":"14","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Link.js":"15","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\ARScript.js":"16","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Database.js":"17","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Process.js":"18","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Service.js":"19","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Context\\ActionContext.js":"20","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\OptionMenu.js":"21","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\isconnectialog.js":"22","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\FormDialog.js":"23","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\OptionDialog.js":"24","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\ConnectionDialog.js":"25","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\ClickDialog.js":"26","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Command.js":"27","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\TestSSA.js":"28"},{"size":449,"mtime":1618580424144,"results":"29","hashOfConfig":"30"},{"size":1506,"mtime":1623950191227,"results":"31","hashOfConfig":"30"},{"size":12823,"mtime":1624523135607,"results":"32","hashOfConfig":"30"},{"size":1484,"mtime":1622925716169,"results":"33","hashOfConfig":"30"},{"size":5698,"mtime":1624365219396,"results":"34","hashOfConfig":"30"},{"size":2385,"mtime":1622941954330,"results":"35","hashOfConfig":"30"},{"size":1547,"mtime":1623225871088,"results":"36","hashOfConfig":"30"},{"size":135,"mtime":1618569284110,"results":"37","hashOfConfig":"30"},{"size":6560,"mtime":1624364735699,"results":"38","hashOfConfig":"30"},{"size":8209,"mtime":1624884199489,"results":"39","hashOfConfig":"30"},{"size":5516,"mtime":1623421976995,"results":"40","hashOfConfig":"30"},{"size":4259,"mtime":1624366985886,"results":"41","hashOfConfig":"30"},{"size":1062,"mtime":1622925659308,"results":"42","hashOfConfig":"30"},{"size":9848,"mtime":1624522710387,"results":"43","hashOfConfig":"30"},{"size":6076,"mtime":1623190215651,"results":"44","hashOfConfig":"30"},{"size":4988,"mtime":1624522727680,"results":"45","hashOfConfig":"30"},{"size":7453,"mtime":1624522700905,"results":"46","hashOfConfig":"30"},{"size":5662,"mtime":1624885508382,"results":"47","hashOfConfig":"30"},{"size":7382,"mtime":1624885466990,"results":"48","hashOfConfig":"30"},{"size":71,"mtime":1618846144628,"results":"49","hashOfConfig":"30"},{"size":1877,"mtime":1624488149123,"results":"50","hashOfConfig":"30"},{"size":3541,"mtime":1624019316418,"results":"51","hashOfConfig":"30"},{"size":3194,"mtime":1624019306400,"results":"52","hashOfConfig":"30"},{"size":7631,"mtime":1624522503835,"results":"53","hashOfConfig":"30"},{"size":7582,"mtime":1624615765712,"results":"54","hashOfConfig":"30"},{"size":4152,"mtime":1624019311765,"results":"55","hashOfConfig":"30"},{"size":8234,"mtime":1624522698319,"results":"56","hashOfConfig":"30"},{"size":10975,"mtime":1624871776257,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"175tmnb",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\index.js",[],["125","126"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\App.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Create.js",["127","128","129","130","131","132","133"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\DashBoard.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Manage.js",["134"],"import { Button, Grid, IconButton, InputBase, makeStyles, Paper, Typography } from '@material-ui/core'\r\nimport { useEffect, useState } from 'react';\r\nimport { Add, ArrowBack, ArrowForward, SearchSharp } from '@material-ui/icons';\r\nimport ListSSA from '../Components/Manage/ListSSA';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n    fields: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    head: {\r\n        marginLeft: theme.spacing(1),\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(3)\r\n\r\n    }\r\n}))\r\n\r\n\r\nconst Manage = () => {\r\n    const url = \"http://localhost:5000/api\"\r\n    const [POS, SetPOS] = useState([])\r\n    const [ExcelTab, SetExcelTab] = useState(false)\r\n    const [allExcel, setAllExcel] = useState([])\r\n\r\n    useEffect(() => {\r\n        document.title = \"Modify\"        \r\n        getAllPos()\r\n        GetAllExcel()\r\n        \r\n    }, [])\r\n\r\n\r\n    const GetAllExcel =() =>{\r\n            \r\n        axios.post(`http://localhost:5000/api/ConvertAll-Excel`)\r\n            .then(res =>  {setAllExcel(res.data); console.log(\"data \",res.data)})\r\n            \r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    const getAllPos = async () => {\r\n        await fetch(`${url}/AllPOS`)\r\n            .then(Response => Response.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n                SetPOS(result)\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.head}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={4}>\r\n                        <Button\r\n                            startIcon={\r\n                                ExcelTab ? <ArrowBack /> : <ArrowForward />\r\n                            }\r\n                            variant=\"contained\"\r\n                            elevation={0}\r\n                            onClick={() => SetExcelTab(!ExcelTab)}\r\n\r\n                        > {!ExcelTab\r\n                            ? `Importés depuis Excel ( ${allExcel.length} )`\r\n                            : `Enregistrés ( ${POS.length} )`\r\n\r\n                            }\r\n\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Paper component=\"form\" elevation={1} >\r\n                            <IconButton aria-label=\"menu\">\r\n                                <SearchSharp />\r\n                            </IconButton>\r\n                            <InputBase\r\n\r\n                                placeholder=\"Rechercher une SSA\"\r\n                            />\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n                    {/*\r\n                    <Grid item sm={3}>\r\n                        \r\n                        \r\n                        \r\n                       \r\n                        <FormControl size=\"medium\" variant=\"filled\">\r\n                            <InputLabel id=\"filter\">Filter par</InputLabel>\r\n                            <Select labelId=\"filter\" value=\"filtre\" >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value=\"nom\">Nom</MenuItem>\r\n                                <MenuItem value={20}>Type</MenuItem>\r\n                                <MenuItem value={30}>état</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        \r\n                    </Grid>\r\n                     */}\r\n                </Grid>\r\n            </div>\r\n\r\n            <div>\r\n                <Grid style={{ padding: 5 }} container direction=\"row\" className={classes.root}>\r\n                    <Grid item xs={3} md={1} sm={1} >\r\n                        <Typography>Code</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} md={3} sm={3}  >\r\n                        <Typography> Nom</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} md={1} sm={1}  >\r\n                        <Typography> Etapes</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} md={2} sm={2}  >\r\n                        <Typography> Auteur</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} md={2} sm={2}  >\r\n                        <Typography> Date de création </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} md={3} sm={3} spacing={1} container justify=\"center\">\r\n                        <Typography>Actions</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                {\r\n                    ExcelTab  ?\r\n                        (\r\n                            allExcel.length > 0 ?\r\n                            (\r\n                                allExcel.map(excel => (\r\n                                <ListSSA ssa={excel} fromExcel={true} key={excel._id} />\r\n                            ))  \r\n                            )  :\r\n                            (\r\n                                <Typography>Chargement</Typography>\r\n                            )                       \r\n\r\n                        )\r\n                        :\r\n                        (\r\n                            POS.map(pos => (\r\n                                <ListSSA ssa={pos} key={pos._id} fromExcel={false}/>\r\n                            ))\r\n                        )\r\n\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Manage;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\ViewItem.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Modify.js",["135","136","137"],"import { makeStyles } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory} from 'react-router'\r\n\r\nimport ARCard from \"../Components/ARCard\";\r\nimport RightNav from \"../Components/Creation/RightNav\";\r\n\r\nconst drawerWidthRight = 260\r\n\r\nconst useStyles = makeStyles((theme) =>{\r\n    return{\r\n        root:{\r\n            width:`calc(100% - ${drawerWidthRight}px)`   \r\n        }\r\n\r\n}})\r\nconst Modify = () => {\r\n    const url = \"http://localhost:5000/api\"\r\n    const [state, setState] = useState({})\r\n    const history = useHistory()\r\n    const classes = useStyles()\r\n\r\n    useEffect(()=>{\r\n        console.log(\"starting \",history.location.state)\r\n        document.title=history.location.state.name\r\n        setState(history.location.state)\r\n        console.log(\"state \",state)\r\n\r\n    },[])\r\n\r\n    const [servers, setServers] = useState([\r\n        { name: 'sw11203', hprod: 'sw11213', dev: \"sw11003\" },\r\n        { name: 'sw11203', hprod: 'sw11213', dev: \"sw11003\" },\r\n        { name: 'sw11203', hprod: 'sw11213', dev: \"sw11003\" }\r\n    ])\r\n\r\n\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <ARCard \r\n            name=\"Arrêt\" \r\n            type=\"stop\"  \r\n            actions={history.location.state.Arret}\r\n\r\n            />\r\n\r\n            <ARCard \r\n            name=\"Relance\" \r\n            type=\"start\" \r\n            actions={history.location.state.Relance} />\r\n            \r\n            <RightNav  ServerRow={servers}/>\r\n            \r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Modify;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Settings.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Layout.js",["138","139","140"],"import React from 'react'\r\n\r\nimport { AppBar, Box, Button,  List, ListItem, ListItemIcon, ListItemText,  Toolbar } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { AppsSharp, Code,  DashboardSharp, FindReplace, FolderOpenSharp, SettingsSharp, Timeline } from '@material-ui/icons'\r\nimport {makeStyles} from '@material-ui/core'\r\nimport { useHistory, useLocation } from 'react-router'\r\n\r\nconst drawerWidthRight = 260\r\n\r\nconst drawerWidth = 200\r\nconst useStyles = makeStyles((theme) =>{\r\n    return{\r\n        root:{\r\n            display:'flex',\r\n            background: '#F6F6FB',\r\n            minHeight:\"750px\"\r\n        },\r\n        nav:{\r\n            width: drawerWidth,\r\n        },\r\n        title:{\r\n            fontWeight:'bold',\r\n        },\r\n        list:{\r\n            padding: theme.spacing(1)\r\n        },\r\n        menuItem: {\r\n            display : 'flex'\r\n        },\r\n        button : {\r\n            margin: theme.spacing(2),\r\n            padding : theme.spacing(1)\r\n        },\r\n        logo : {\r\n            display : 'flex'\r\n        },\r\n        active:{\r\n            background:'#F2F2F2',\r\n            borderRightColor:'#3f51b5',\r\n            paddingInline:theme.spacing(2),\r\n            marginBottom:theme.spacing(2)\r\n\r\n        },\r\n        nonActive:{\r\n            paddingInline:theme.spacing(2),\r\n            marginBottom:theme.spacing(2)\r\n\r\n\r\n        },\r\n        appbar:{\r\n            width:`calc(100% - ${drawerWidth}px -${drawerWidthRight})`\r\n        },\r\n        toolbar:theme.mixins.toolbar,\r\n        page: {\r\n            background:'F9F9F9',\r\n            width:\"100%\",\r\n            padding: theme.spacing(2)\r\n        },\r\n        drawerPaper:{\r\n            width : drawerWidth,\r\n            backgroundColor:\"#FFFFF\",\r\n            borderRight:'0px'\r\n\r\n        },\r\n        drawerPaperLeft:{\r\n            width : drawerWidth,\r\n            backgroundColor:\"#FFFFF\",\r\n            borderLeft:'0px'\r\n\r\n        },\r\n        navRight:{\r\n            width: drawerWidthRight,\r\n            //display:'none'\r\n        },\r\n        drawerPaperRight:{\r\n            width : drawerWidthRight,\r\n            backgroundColor:\"#FFFFF\",\r\n            borderLeft:'0px'\r\n\r\n        },\r\n\r\n}})\r\n\r\nconst Layout = ({children}) => {\r\n    const menuItems = [\r\n        {\r\n            text: 'DashBoard',\r\n            icon:<DashboardSharp color=\"primary\" />,\r\n            path:'/'\r\n        },\r\n        {\r\n            text: 'Création',\r\n            icon:<AppsSharp color=\"primary\" />,\r\n            path:'/create'\r\n        },\r\n        {\r\n            text: 'Gestion',\r\n            icon:<FolderOpenSharp color=\"primary\" />,\r\n            path:'/manage'\r\n        },\r\n        {\r\n            text: 'Tests',\r\n            icon: <Timeline color=\"primary\"/>,\r\n            path:'/TestSSA'\r\n        },/*\r\n        {\r\n            text: 'Prod h-Prod',\r\n            icon: <FindReplace color=\"primary\"/>,\r\n            path:'#'\r\n        },*/\r\n        {\r\n            text: 'Parametres',\r\n            icon:<SettingsSharp color=\"primary\" />,\r\n            path:'/settings'\r\n        },\r\n    ]\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    \r\n    return ( \r\n\r\n        <div className={classes.root}>\r\n\r\n            {/** toolbar */}\r\n            <AppBar className={classes.appbar} elevation={0}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Typography></Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {/**menu droite */}\r\n            <Drawer\r\n            elevation={0}\r\n            variant = \"permanent\"\r\n            anchor = 'left'\r\n            className = {classes.nav}\r\n            classes = {{paper : classes.drawerPaper}}\r\n\r\n\r\n            >\r\n                <div>\r\n                    <div>\r\n                        <div className={classes.logo}>\r\n                            <Box m={4} mt={5} \r\n                            display='flex' \r\n                            fontWeight={800}\r\n                            \r\n                           >\r\n                                \r\n                                <Typography \r\n                                variant=\"h6\" \r\n                                className={classes.title}\r\n                                color=\"primary\"\r\n                                \r\n                                >\r\n                                    Transformers \r\n                                </Typography>\r\n                            </Box>\r\n\r\n\r\n                        </div>\r\n                        {/*\r\n                        <Button\r\n                         \r\n                        variant='contained' \r\n                        \r\n                        color='primary' \r\n                        className = {classes.button}\r\n                        >\r\n                            Charger un Excel\r\n                        </Button>\r\n                        */}\r\n                    </div>\r\n\r\n                    {/**Les liens du menu */}\r\n                    <List>\r\n                        <Box \r\n                        display='block'\r\n                        alignItems='center'\r\n                        justifyContent='space-around'>\r\n                        {menuItems.map(item => (\r\n                            <Box \r\n                            //Affiche une petite bordure sur la page courante\r\n                            borderRight={location.pathname === item.path ? 2 : 0 }\r\n                            >\r\n                            <ListItem \r\n                                key = {item.text}\r\n                                button\r\n                                onClick= { () => history.push(item.path)}\r\n                                className = {location.pathname === item.path ? classes.active : classes.nonActive}\r\n                            >\r\n                                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                                <ListItemText primary = {item.text} />\r\n                            </ListItem> \r\n                            </Box>   \r\n                        ))}\r\n                        </Box>\r\n                        \r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n\r\n            \r\n\r\n\r\n            {/**future page */}\r\n            <div className={classes.page} >\r\n                <div className={classes.toolbar}>\r\n\r\n                </div>\r\n                {children}\r\n\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Layout;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\ARCard.js",["141","142","143","144"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\RightNav.js",["145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import { Avatar, Box, Divider, Drawer, Grid, LinearProgress, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@material-ui/core\";\r\nimport { Computer, Rowing, Settings } from \"@material-ui/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {DataGrid} from '@material-ui/data-grid';\r\n\r\nconst drawerWidthRight = 280\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n\r\n    return {\r\n        root: {\r\n\r\n        },\r\n        navRight: {\r\n            width: drawerWidthRight,\r\n            //display:'none'\r\n        },\r\n        drawerPaperRight: {\r\n            width: drawerWidthRight,\r\n            backgroundColor: \"#FFFFF\",\r\n            borderLeft: '0px'\r\n\r\n        }\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\nconst RightNav = ({ ServerRow, saveRows }) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const columns = [\r\n        {field : 'prod', headerName: 'prod', width : 90, editable : true, sortable:false },\r\n        {field : 'hprod', headerName: 'hprod', width : 90, editable : true, sortable:false },\r\n        {field : 'dev', headerName: 'IPP2', width :90, editable : true, sortable:false }\r\n    ]\r\n\r\n    /*\r\n    useEffect(() => {\r\n      const timer = setInterval(() => {\r\n        setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 20));\r\n      }, 400);\r\n  \r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }, []);\r\n    */\r\n\r\n    const classes = useStyles()\r\n    \r\n    const handleCellchange = (cell) => {\r\n        console.log(\"Changing the \",cell)\r\n        \r\n\r\n        const editedServers = ServerRow.map(row => {\r\n            if(row.id === cell.id){\r\n                row = {...row, [cell.field] :cell.props.value  }\r\n                return row\r\n            }\r\n            return row\r\n        })\r\n        saveRows(editedServers)\r\n        console.log(\"edited \",editedServers)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Drawer\r\n                elevation={0}\r\n                variant=\"permanent\"\r\n                anchor='right'\r\n                classes={{ paper: classes.drawerPaperRight }}\r\n                className={classes.navRight}\r\n            >\r\n                <Box>\r\n                    <Box m={2} display=\"flex\" justifyContent=\"center\">\r\n                        <Typography gutterBottom>\r\n                            Variables\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                        \r\n                    <div style={{height : 300,width:\"100%\"}}>\r\n                        <DataGrid \r\n                        rows={ServerRow}\r\n                        columns={columns}\r\n                        hideFooter\r\n                        disableColumnMenu\r\n                        rowHeight={40}\r\n                        headerHeight={40}\r\n                        onEditCellChangeCommitted={cell => handleCellchange(cell)}\r\n                        \r\n                        />\r\n                    </div>\r\n                </Box>\r\n\r\n                <Box>\r\n                    {/**\r\n                    <Box m={2} display=\"flex\" justifyContent=\"center\">\r\n                        <Typography gutterBottom>\r\n                            Vérification Active\r\n                        </Typography>\r\n                    </Box>\r\n                    \r\n                    <Grid container spacing={1} alignItems=\"center\" >\r\n                        <Grid item md={2} >\r\n                            <Box display=\"flex\" justifyContent=\"center\">\r\n                                <Computer color=\"primary\" />\r\n                            </Box>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={10}>\r\n                            <Typography variant=\"subtitle1\" display=\"block\"> Ping : SW11203</Typography>\r\n                            <Grid container direction=\"row\" alignItems=\"center\" >\r\n                                <Grid item md={5}>\r\n                                    <Typography variant=\"caption\">En cours</Typography>\r\n                                </Grid>\r\n                                <Grid item md={7}>\r\n                                    <LinearProgress variant=\"determinate\" value={progress} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider style={{ margin: \"10px \" }} />\r\n                    <Grid container alignItems=\"center\" >\r\n                        <Grid item md={2} >\r\n                            <Box display=\"flex\" justifyContent=\"center\" >\r\n                                <Settings color=\"primary\" />\r\n\r\n                            </Box>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={10}>\r\n                            <Typography variant=\"subtitle1\" display=\"block\"> Service : BITS</Typography>\r\n                            <Grid container direction=\"row\" alignItems=\"center\" >\r\n                                <Grid item md={5}>\r\n                                    <Typography variant=\"caption\">En cours</Typography>\r\n                                </Grid>\r\n                                <Grid item md={7}>\r\n                                    <LinearProgress variant=\"determinate\" value={progress} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                     */}\r\n                </Box>\r\n            </Drawer>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RightNav\r\n","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Manage\\ListSSA.js",["161","162","163","164"],"import { Button, CardActionArea, CardActions, IconButton, makeStyles } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport { Avatar, Card, CardContent, Grid, Typography } from '@material-ui/core'\r\nimport { Delete } from '@material-ui/icons';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n        flexGrow: theme.spacing(1)\r\n\r\n    },\r\n    fields: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n\r\n}))\r\nconst ListSSA = ({ ssa, fromExcel }) => {\r\n    const url = \"http://localhost:5000/api\"\r\n    const history = useHistory()\r\n\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        //console.log(ssa)\r\n    })\r\n\r\n    const visitPOS = (ssa) => {\r\n        console.log(\"ssa \", ssa)\r\n        history.push({\r\n            pathname: '/create',\r\n            state: ssa,\r\n            fromExcel: fromExcel\r\n        })\r\n    }\r\n    const getAPOS = (id) => {\r\n        fetch(`${url}/getAPOS?id=${id}`)\r\n            .then(Response => Response.json())\r\n            .then(result => visitPOS(result))\r\n    }\r\n    const testSSA = (ssa) => {\r\n        history.push({\r\n            pathname: '/testSSA',\r\n            state: ssa\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root} elevation={0.5}>\r\n                <CardActionArea >\r\n\r\n                    <CardContent  >\r\n\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={1} md={1} sm={1} >\r\n                                <Avatar onClick={() => console.log(\"ssa clicked\")}>\r\n                                    {\r\n                                        ssa.name.split(\"_\").length > 1\r\n                                            ? ssa.name.split(\"_\")[1][0].toUpperCase()\r\n                                            : ssa.name[0].toUpperCase()\r\n                                    }\r\n\r\n\r\n                                </Avatar>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3} md={3} sm={3}  >\r\n                                <Typography> {ssa.name}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={1} sm={1}  >\r\n                                <Typography> {ssa.Arret.length} - {ssa.Relance.length}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={2} sm={2}  >\r\n                                <Typography> {ssa.auteur}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={2} sm={2}  >\r\n                                <Typography> {new Date(ssa.createdAt).toLocaleString()}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={3} sm={2} >\r\n                                <Grid spacing={1} container justify=\"space-around\" alignContent=\"center\">\r\n                                    <Grid item md={5}>\r\n                                        <Button variant=\"outlined\" color=\"default\" onClick={() => visitPOS(ssa)}>PARPRE/POS</Button>\r\n                                    </Grid>\r\n                                    <Grid item md={4}>\r\n                                        {!fromExcel\r\n                                            ? <Button variant=\"outlined\" color=\"primary\" onClick={() => testSSA(ssa)}>Tester</Button>\r\n                                            : <Button variant=\"outlined\" color=\"primary\" onClick={() => testSSA(ssa)}>Importer</Button>\r\n\r\n                                        }\r\n                                    </Grid>\r\n                                    <Grid item md={3}>\r\n                                        <Button >\r\n                                            <Delete color=\"secondary\" />\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </CardContent>\r\n                </CardActionArea>\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListSSA;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Dashboard\\DashboardCard.js",["165"],"import { Box, makeStyles, Paper, Typography} from '@material-ui/core'\r\nimport { SupervisedUserCircle } from '@material-ui/icons'\r\nimport { useEffect } from 'react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        padding:theme.spacing(1),\r\n        \r\n    }\r\n}))\r\n\r\nconst DashboardCard = ({name}) => {\r\n    const classes = useStyles()\r\n\r\n\r\n    return ( \r\n        <div>\r\n            <Paper className = {classes.root} elevation={1} >\r\n                <Box p={2} display='block' \r\n                justifyContent='center'>\r\n                    <Box mx={3}>\r\n                       <SupervisedUserCircle  /> \r\n                    </Box>\r\n                    <Box mx={3}>\r\n                       <Typography>\r\n                            {name}\r\n                        </Typography> \r\n                    </Box>\r\n                    <Box mx={3}>\r\n                        <Typography variant='h5'> 125</Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Paper>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default DashboardCard;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\WebAction.js",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Link.js",["188","189","190","191","192","193","194","195"],"import { Avatar, Box, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\"\r\nimport {makeStyles} from '@material-ui/core'\r\nimport { Comment, Delete, FileCopy, Http, MoreVert } from \"@material-ui/icons\"\r\nimport axios from \"axios\"\r\nimport { useContext,useEffect, useState } from \"react\"\r\nimport ActionContext from \"../../Context/ActionContext\"\r\nimport OptionMenu from \"../Creation/OptionMenu\"\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        background:'#F6F6FB',\r\n        padding: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n\r\n    },\r\n    fields:{\r\n        width:\"100%\"\r\n    },\r\n    dropDown:{\r\n        width:\"100%\"\r\n    },\r\n    smallAvatar: {\r\n      width: theme.spacing(2.5),\r\n      height: theme.spacing(2.5)\r\n    }\r\n}))\r\nconst Link = ({index,initialSTate}) => {\r\n    const classes = useStyles()\r\n    const { deleteAction, duplicateAction,saveData} = useContext(ActionContext)\r\n    const [state, setState] = useState({initialSTate})\r\n    const [urlState, setUrlState] = useState(\"UP\")\r\n    const [navigationMode, setnavigationMode] = useState(\"normal\")\r\n\r\n    useEffect(() =>{\r\n        setState(initialSTate)\r\n        setState(initialSTate)\r\n\r\n    },[]\r\n    )\r\n    const formatUrl = (url) =>{\r\n\r\n        if(url.startsWith(\"http\") || url.length < 4){\r\n\r\n            console.log('url est bonne')\r\n            return url\r\n        }else{\r\n            console.log('error url')    \r\n            return \"http://\"+url       \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const testConnection = async (e) =>{\r\n\r\n        const formatedUrl = formatUrl(e.target.value)\r\n        setState({...state,url:formatedUrl})\r\n\r\n        if(e.target.value !== ''){\r\n\r\n            console.log('accessing ',formatedUrl)\r\n\r\n            await fetch(`http://localhost:5000/api/PARPRE/link?url=${formatedUrl}`)\r\n                .then(res => res.json())\r\n                .then(result => console.log(result.result))\r\n                .then(()=>saveInformations())\r\n        }\r\n  \r\n    }\r\n\r\n    const saveInformations = () =>{\r\n\r\n        if(state.url ===undefined){return}\r\n        console.log(\"state before save : \",state)\r\n\r\n        saveData({\r\n            index:index,\r\n            type:\"link\",\r\n            url:state.url,                             \r\n            informations:\r\n            {\r\n                urlState : urlState,\r\n                navigationMode : navigationMode                                  \r\n            }})\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <Paper \r\n                elevation={0}\r\n                className= {classes.root}>\r\n                <Grid \r\n                    container\r\n                    spacing={2}\r\n                    alignItems=\"center\" >\r\n\r\n                    <Grid item md={1} xl={1} container alignContent=\"center\" direction=\"column\" >\r\n                        <Box  display=\"flex\" justifyContent=\"center\">\r\n                            <Http color=\"primary\" />\r\n                        </Box>                       \r\n                        \r\n                    </Grid>\r\n                    \r\n                    <Grid item md={6} xl={2}>\r\n                        <TextField\r\n                        \r\n                        className={classes.fields} \r\n                        id='url'\r\n                        value = {state.url}\r\n                        color='primary'\r\n                        label= 'Lien'\r\n\r\n                        onChange={(e) => setState({...state, url: formatUrl(e.target.value)})}\r\n                        onBlur={(e) => {\r\n                            testConnection(e)\r\n                        }}\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={2} xl={2} >\r\n                    <FormControl className={classes.dropDown}>\r\n                            <InputLabel>Etat du site</InputLabel>\r\n                            <Select value={urlState} onChange={(e) => (setUrlState(e.target.value))} onBlur={saveInformations}>\r\n                                <MenuItem value=\"Down\" >Down</MenuItem>\r\n                                <MenuItem value=\"UP\">UP</MenuItem>\r\n                                <MenuItem value=\"Null\">Page blanche</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item md={2} xl={2} >\r\n                    <FormControl className={classes.dropDown}>\r\n                            <InputLabel>Navigation</InputLabel>\r\n                            <Select value={navigationMode} onChange={(e) => (setnavigationMode(e.target.value))} onBlur={saveInformations}>\r\n                                <MenuItem value=\"Privée\" >Privée</MenuItem>\r\n                                <MenuItem value=\"normal\">Normal</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                   \r\n                    <Grid item md={1} xl={1}  >\r\n                        <Grid container spacing={3} alignItems=\"center\" >\r\n                            <Grid item md={6} >\r\n                                    <OptionMenu index={index} deleteAction={deleteAction} duplicateAction={duplicateAction} />\r\n                            </Grid>\r\n                        \r\n                            <Grid item md={6}>\r\n                                <Box my=\"auto\" >\r\n                                    <Avatar className={classes.smallAvatar} >\r\n                                    \r\n                                    <Typography>\r\n                                        {index + 1}\r\n                                    </Typography> \r\n                                    \r\n                                    \r\n                                    </Avatar>\r\n\r\n                                </Box>\r\n                            </Grid>\r\n                        \r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Link;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\ARScript.js",["196","197","198","199","200","201","202","203"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Database.js",["204","205","206","207","208","209","210"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Process.js",["211","212","213","214","215","216","217","218"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Service.js",["219","220","221","222","223"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Context\\ActionContext.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\OptionMenu.js",["224","225","226","227","228","229","230"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\isconnectialog.js",["231"],"import { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Link, TextField } from \"@material-ui/core\";\r\nimport { ArrowRight } from \"@material-ui/icons\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst DisconnectDialog = ({ informations, setInformations, saveInformations, openDialog, closeDialog }) => {\r\n    useEffect(()=>{\r\n        setInformations({...informations, type:\"logOut\"})\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={closeDialog}\r\n                fullWidth={200}\r\n                onBlur={saveInformations}\r\n            >\r\n                <DialogTitle id='dialog-title'>Déconnexion </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Le sélecteur est obtenu en faisant un click droit sur le champ à automatiser,\r\n                        Inspecter\" puis click droit sur l'élément html et \"copy selector\".\r\n                        Ici préciser le lien de déconnection ou le sélecteur\r\n                    </DialogContentText>\r\n                    <div>\r\n                        <Box display=\"flex\" justifyContent=\"space-around\">\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n                                <Grid item >\r\n                                    <Link />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        value={informations.logOut}\r\n                                        variant=\"outlined\"\r\n                                        autoFocus\r\n                                        margin=\"dense\"\r\n                                        id=\"logout\"\r\n                                        label=\"lien de déconnexion\"\r\n                                        autoComplete={false}\r\n\r\n                                        onChange={(e) => (setInformations({ ...informations, logOut: e.target.value }))}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n                                <Grid item >\r\n                                    <ArrowRight />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        value={informations.logOutSelector}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        id=\"logOut-selector\"\r\n                                        label=\"ou sélecteur\"\r\n                                        onChange={(e) => (setInformations({ ...informations, logOutSelector: e.target.value }))}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onclick={() => {closeDialog();saveInformations()}}>\r\n                    Confirmer\r\n                            </Button>\r\n                            \r\n                        </DialogActions>\r\n\r\n                    </Dialog>\r\n                    \r\n        </div >\r\n     );\r\n}\r\n\r\nexport default DisconnectDialog;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\FormDialog.js",["232"],"import { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst FormDialog = ({ informations, setInformations, saveInformations, openDialog, closeDialog }) => {\r\n\r\n    useEffect(()=>{\r\n        setInformations({...informations, type:\"form\"})\r\n    },[])\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={closeDialog}\r\n                fullWidth\r\n                onBlur={saveInformations}\r\n            >\r\n                <DialogTitle id='dialog-title'>Remplir un ou des champs </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Le sélecteur est obtenu en faisant un click droit sur le champ à automatiser,\r\n                        Inspecter\" puis click droit sur l'élément html et \"copy selector\".\r\n                        Ici préciser le lien de déconnection ou le sélecteur\r\n                    </DialogContentText>\r\n                    <div>\r\n                        <Box display=\"flex\" justifyContent=\"space-around\">\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        value={informations.fields}\r\n                                        variant=\"outlined\"\r\n                                        autoFocus\r\n                                        margin=\"dense\"\r\n                                        label=\"champ\"\r\n                                        autoComplete={false}\r\n\r\n                                        onChange={(e) => (setInformations({ ...informations, fields: e.target.value }))}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        value={informations.fieldSelector}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        label=\"sélecteur\"\r\n                                        onChange={(e) => (setInformations({ ...informations, fieldSelector: e.target.value }))}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <IconButton>\r\n                                <Add />\r\n                            </IconButton>\r\n\r\n                        </Box>\r\n\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onclick={() => { closeDialog(); saveInformations() }}>\r\n                        Confirmer\r\n                    </Button>\r\n\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormDialog;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\OptionDialog.js",["233"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\ConnectionDialog.js",["234","235"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\ClickDialog.js",["236"],"import { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, TextField } from \"@material-ui/core\";\r\nimport { ArrowRight } from \"@material-ui/icons\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ClickDialog = ({ informations, setInformations, saveInformations, openDialog, closeDialog }) => {\r\n\r\n    useEffect(()=>{\r\n        setInformations({...informations, type:\"click\"})\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={closeDialog}\r\n                fullWidth\r\n                onBlur={saveInformations}\r\n            >\r\n                <DialogTitle id='dialog-title'>Effectuer un Click </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Le sélecteur est obtenu en faisant un click droit sur le champ à automatiser,\r\n                        Inspecter\" puis click droit sur l'élément html et \"copy selector\".\r\n                        Ici préciser les coordonnées ou le sélecteur.\r\n                    </DialogContentText>\r\n                    <div>\r\n                        <Box display=\"flex\" justifyContent=\"space-around\">\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n\r\n                                <Grid container item spacing={2}>\r\n                                    <Box display=\"flex\" justifyContent=\"inline-block\">\r\n                                        <TextField\r\n                                            value={informations.x}\r\n                                            variant=\"outlined\"\r\n                                            autoFocus\r\n                                            margin=\"dense\"\r\n                                            id=\"coords-x\"\r\n                                            label=\"coordonnées X\"\r\n                                            autoComplete={false}\r\n                                            onChange={(e) => (setInformations({ ...informations, x: e.target.value }))}\r\n                                        />\r\n                                        <TextField\r\n                                            value={informations.y}\r\n                                            variant=\"outlined\"\r\n                                            autoFocus\r\n                                            margin=\"dense\"\r\n                                            id=\"coords-y\"\r\n                                            label=\"coordonnées Y\"\r\n                                            autoComplete={false}\r\n\r\n                                            onChange={(e) => (setInformations({ ...informations, y: e.target.value }))}\r\n                                        />\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n                                <Grid item >\r\n                                    <ArrowRight />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        value={informations.clickSelector}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        id=\"click-selector\"\r\n                                        label=\"Ou selecteur\"\r\n                                        onChange={(e) => (setInformations({ ...informations, clickSelector: e.target.value }))}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onclick={() => { closeDialog(); saveInformations() }}>\r\n                        Confirmer\r\n                    </Button>\r\n\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClickDialog;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Command.js",["237","238","239"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\TestSSA.js",["240","241","242","243"],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":1,"column":39,"nodeType":"250","messageId":"251","endLine":1,"endColumn":48},{"ruleId":"248","severity":1,"message":"252","line":34,"column":12,"nodeType":"250","messageId":"251","endLine":34,"endColumn":22},{"ruleId":"248","severity":1,"message":"253","line":34,"column":24,"nodeType":"250","messageId":"251","endLine":34,"endColumn":37},{"ruleId":"254","severity":1,"message":"255","line":82,"column":8,"nodeType":"256","endLine":82,"endColumn":10,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":94,"column":32,"nodeType":"260","messageId":"261","endLine":94,"endColumn":34},{"ruleId":"258","severity":1,"message":"262","line":95,"column":72,"nodeType":"263","messageId":"264","endLine":95,"endColumn":78},{"ruleId":"258","severity":1,"message":"262","line":130,"column":31,"nodeType":"260","messageId":"265","endLine":130,"endColumn":33},{"ruleId":"248","severity":1,"message":"266","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":13},{"ruleId":"248","severity":1,"message":"267","line":18,"column":11,"nodeType":"250","messageId":"251","endLine":18,"endColumn":14},{"ruleId":"254","severity":1,"message":"268","line":29,"column":7,"nodeType":"256","endLine":29,"endColumn":9,"suggestions":"269"},{"ruleId":"248","severity":1,"message":"270","line":31,"column":21,"nodeType":"250","messageId":"251","endLine":31,"endColumn":31},{"ruleId":"248","severity":1,"message":"271","line":3,"column":23,"nodeType":"250","messageId":"251","endLine":3,"endColumn":29},{"ruleId":"248","severity":1,"message":"272","line":6,"column":21,"nodeType":"250","messageId":"251","endLine":6,"endColumn":25},{"ruleId":"248","severity":1,"message":"273","line":6,"column":44,"nodeType":"250","messageId":"251","endLine":6,"endColumn":55},{"ruleId":"248","severity":1,"message":"274","line":2,"column":66,"nodeType":"250","messageId":"251","endLine":2,"endColumn":70},{"ruleId":"248","severity":1,"message":"275","line":11,"column":10,"nodeType":"250","messageId":"251","endLine":11,"endColumn":20},{"ruleId":"248","severity":1,"message":"276","line":16,"column":7,"nodeType":"250","messageId":"251","endLine":16,"endColumn":16},{"ruleId":"254","severity":1,"message":"277","line":33,"column":8,"nodeType":"256","endLine":33,"endColumn":10,"suggestions":"278"},{"ruleId":"248","severity":1,"message":"279","line":1,"column":10,"nodeType":"250","messageId":"251","endLine":1,"endColumn":16},{"ruleId":"248","severity":1,"message":"280","line":1,"column":23,"nodeType":"250","messageId":"251","endLine":1,"endColumn":30},{"ruleId":"248","severity":1,"message":"281","line":1,"column":40,"nodeType":"250","messageId":"251","endLine":1,"endColumn":44},{"ruleId":"248","severity":1,"message":"282","line":1,"column":46,"nodeType":"250","messageId":"251","endLine":1,"endColumn":60},{"ruleId":"248","severity":1,"message":"283","line":1,"column":74,"nodeType":"250","messageId":"251","endLine":1,"endColumn":79},{"ruleId":"248","severity":1,"message":"284","line":1,"column":81,"nodeType":"250","messageId":"251","endLine":1,"endColumn":90},{"ruleId":"248","severity":1,"message":"285","line":1,"column":92,"nodeType":"250","messageId":"251","endLine":1,"endColumn":101},{"ruleId":"248","severity":1,"message":"286","line":1,"column":103,"nodeType":"250","messageId":"251","endLine":1,"endColumn":117},{"ruleId":"248","severity":1,"message":"287","line":1,"column":119,"nodeType":"250","messageId":"251","endLine":1,"endColumn":128},{"ruleId":"248","severity":1,"message":"288","line":1,"column":130,"nodeType":"250","messageId":"251","endLine":1,"endColumn":138},{"ruleId":"248","severity":1,"message":"289","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":18},{"ruleId":"248","severity":1,"message":"290","line":2,"column":20,"nodeType":"250","messageId":"251","endLine":2,"endColumn":26},{"ruleId":"248","severity":1,"message":"291","line":2,"column":28,"nodeType":"250","messageId":"251","endLine":2,"endColumn":36},{"ruleId":"248","severity":1,"message":"292","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":19},{"ruleId":"248","severity":1,"message":"293","line":33,"column":12,"nodeType":"250","messageId":"251","endLine":33,"endColumn":20},{"ruleId":"248","severity":1,"message":"294","line":33,"column":22,"nodeType":"250","messageId":"251","endLine":33,"endColumn":33},{"ruleId":"248","severity":1,"message":"295","line":1,"column":34,"nodeType":"250","messageId":"251","endLine":1,"endColumn":45},{"ruleId":"248","severity":1,"message":"296","line":1,"column":47,"nodeType":"250","messageId":"251","endLine":1,"endColumn":57},{"ruleId":"248","severity":1,"message":"297","line":2,"column":21,"nodeType":"250","messageId":"251","endLine":2,"endColumn":29},{"ruleId":"248","severity":1,"message":"298","line":41,"column":11,"nodeType":"250","messageId":"251","endLine":41,"endColumn":18},{"ruleId":"248","severity":1,"message":"292","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":19},{"ruleId":"248","severity":1,"message":"299","line":1,"column":31,"nodeType":"250","messageId":"251","endLine":1,"endColumn":37},{"ruleId":"248","severity":1,"message":"300","line":1,"column":39,"nodeType":"250","messageId":"251","endLine":1,"endColumn":52},{"ruleId":"248","severity":1,"message":"301","line":1,"column":54,"nodeType":"250","messageId":"251","endLine":1,"endColumn":67},{"ruleId":"248","severity":1,"message":"302","line":1,"column":69,"nodeType":"250","messageId":"251","endLine":1,"endColumn":86},{"ruleId":"248","severity":1,"message":"303","line":1,"column":88,"nodeType":"250","messageId":"251","endLine":1,"endColumn":99},{"ruleId":"248","severity":1,"message":"296","line":1,"column":120,"nodeType":"250","messageId":"251","endLine":1,"endColumn":130},{"ruleId":"248","severity":1,"message":"304","line":1,"column":144,"nodeType":"250","messageId":"251","endLine":1,"endColumn":148},{"ruleId":"248","severity":1,"message":"305","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":23},{"ruleId":"248","severity":1,"message":"266","line":3,"column":25,"nodeType":"250","messageId":"251","endLine":3,"endColumn":28},{"ruleId":"248","severity":1,"message":"306","line":3,"column":30,"nodeType":"250","messageId":"251","endLine":3,"endColumn":40},{"ruleId":"248","severity":1,"message":"307","line":3,"column":42,"nodeType":"250","messageId":"251","endLine":3,"endColumn":49},{"ruleId":"248","severity":1,"message":"308","line":3,"column":51,"nodeType":"250","messageId":"251","endLine":3,"endColumn":57},{"ruleId":"248","severity":1,"message":"309","line":3,"column":59,"nodeType":"250","messageId":"251","endLine":3,"endColumn":67},{"ruleId":"248","severity":1,"message":"310","line":3,"column":69,"nodeType":"250","messageId":"251","endLine":3,"endColumn":73},{"ruleId":"248","severity":1,"message":"311","line":3,"column":75,"nodeType":"250","messageId":"251","endLine":3,"endColumn":79},{"ruleId":"248","severity":1,"message":"312","line":3,"column":81,"nodeType":"250","messageId":"251","endLine":3,"endColumn":89},{"ruleId":"248","severity":1,"message":"313","line":3,"column":91,"nodeType":"250","messageId":"251","endLine":3,"endColumn":96},{"ruleId":"248","severity":1,"message":"314","line":34,"column":12,"nodeType":"250","messageId":"251","endLine":34,"endColumn":20},{"ruleId":"248","severity":1,"message":"315","line":53,"column":11,"nodeType":"250","messageId":"251","endLine":53,"endColumn":22},{"ruleId":"248","severity":1,"message":"316","line":56,"column":11,"nodeType":"250","messageId":"251","endLine":56,"endColumn":22},{"ruleId":"248","severity":1,"message":"317","line":59,"column":11,"nodeType":"250","messageId":"251","endLine":59,"endColumn":18},{"ruleId":"254","severity":1,"message":"318","line":72,"column":8,"nodeType":"256","endLine":72,"endColumn":10,"suggestions":"319"},{"ruleId":"248","severity":1,"message":"296","line":1,"column":42,"nodeType":"250","messageId":"251","endLine":1,"endColumn":52},{"ruleId":"248","severity":1,"message":"304","line":1,"column":66,"nodeType":"250","messageId":"251","endLine":1,"endColumn":70},{"ruleId":"248","severity":1,"message":"307","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":17},{"ruleId":"248","severity":1,"message":"308","line":3,"column":19,"nodeType":"250","messageId":"251","endLine":3,"endColumn":25},{"ruleId":"248","severity":1,"message":"309","line":3,"column":27,"nodeType":"250","messageId":"251","endLine":3,"endColumn":35},{"ruleId":"248","severity":1,"message":"312","line":3,"column":43,"nodeType":"250","messageId":"251","endLine":3,"endColumn":51},{"ruleId":"248","severity":1,"message":"320","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":13},{"ruleId":"254","severity":1,"message":"318","line":38,"column":7,"nodeType":"256","endLine":38,"endColumn":9,"suggestions":"321"},{"ruleId":"248","severity":1,"message":"296","line":1,"column":29,"nodeType":"250","messageId":"251","endLine":1,"endColumn":39},{"ruleId":"248","severity":1,"message":"304","line":1,"column":41,"nodeType":"250","messageId":"251","endLine":1,"endColumn":45},{"ruleId":"248","severity":1,"message":"322","line":1,"column":47,"nodeType":"250","messageId":"251","endLine":1,"endColumn":55},{"ruleId":"248","severity":1,"message":"308","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":16},{"ruleId":"248","severity":1,"message":"309","line":3,"column":18,"nodeType":"250","messageId":"251","endLine":3,"endColumn":26},{"ruleId":"248","severity":1,"message":"312","line":3,"column":28,"nodeType":"250","messageId":"251","endLine":3,"endColumn":36},{"ruleId":"248","severity":1,"message":"323","line":26,"column":54,"nodeType":"250","messageId":"251","endLine":26,"endColumn":63},{"ruleId":"254","severity":1,"message":"318","line":45,"column":8,"nodeType":"256","endLine":45,"endColumn":10,"suggestions":"324"},{"ruleId":"248","severity":1,"message":"296","line":1,"column":42,"nodeType":"250","messageId":"251","endLine":1,"endColumn":52},{"ruleId":"248","severity":1,"message":"304","line":1,"column":66,"nodeType":"250","messageId":"251","endLine":1,"endColumn":70},{"ruleId":"248","severity":1,"message":"308","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":16},{"ruleId":"248","severity":1,"message":"309","line":3,"column":18,"nodeType":"250","messageId":"251","endLine":3,"endColumn":26},{"ruleId":"248","severity":1,"message":"312","line":3,"column":28,"nodeType":"250","messageId":"251","endLine":3,"endColumn":36},{"ruleId":"254","severity":1,"message":"318","line":56,"column":8,"nodeType":"256","endLine":56,"endColumn":10,"suggestions":"325"},{"ruleId":"248","severity":1,"message":"326","line":65,"column":52,"nodeType":"250","messageId":"251","endLine":65,"endColumn":58},{"ruleId":"248","severity":1,"message":"296","line":1,"column":42,"nodeType":"250","messageId":"251","endLine":1,"endColumn":52},{"ruleId":"248","severity":1,"message":"304","line":1,"column":66,"nodeType":"250","messageId":"251","endLine":1,"endColumn":70},{"ruleId":"248","severity":1,"message":"308","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":16},{"ruleId":"248","severity":1,"message":"309","line":3,"column":18,"nodeType":"250","messageId":"251","endLine":3,"endColumn":26},{"ruleId":"248","severity":1,"message":"312","line":3,"column":28,"nodeType":"250","messageId":"251","endLine":3,"endColumn":36},{"ruleId":"248","severity":1,"message":"272","line":3,"column":38,"nodeType":"250","messageId":"251","endLine":3,"endColumn":42},{"ruleId":"254","severity":1,"message":"318","line":47,"column":7,"nodeType":"256","endLine":47,"endColumn":9,"suggestions":"327"},{"ruleId":"248","severity":1,"message":"323","line":50,"column":54,"nodeType":"250","messageId":"251","endLine":50,"endColumn":63},{"ruleId":"248","severity":1,"message":"328","line":4,"column":10,"nodeType":"250","messageId":"251","endLine":4,"endColumn":23},{"ruleId":"248","severity":1,"message":"329","line":29,"column":12,"nodeType":"250","messageId":"251","endLine":29,"endColumn":18},{"ruleId":"248","severity":1,"message":"330","line":29,"column":20,"nodeType":"250","messageId":"251","endLine":29,"endColumn":29},{"ruleId":"254","severity":1,"message":"331","line":55,"column":7,"nodeType":"256","endLine":55,"endColumn":9,"suggestions":"332"},{"ruleId":"248","severity":1,"message":"333","line":78,"column":11,"nodeType":"250","messageId":"251","endLine":78,"endColumn":22},{"ruleId":"248","severity":1,"message":"271","line":1,"column":10,"nodeType":"250","messageId":"251","endLine":1,"endColumn":16},{"ruleId":"248","severity":1,"message":"299","line":1,"column":18,"nodeType":"250","messageId":"251","endLine":1,"endColumn":24},{"ruleId":"248","severity":1,"message":"300","line":1,"column":26,"nodeType":"250","messageId":"251","endLine":1,"endColumn":39},{"ruleId":"248","severity":1,"message":"301","line":1,"column":41,"nodeType":"250","messageId":"251","endLine":1,"endColumn":54},{"ruleId":"248","severity":1,"message":"302","line":1,"column":56,"nodeType":"250","messageId":"251","endLine":1,"endColumn":73},{"ruleId":"248","severity":1,"message":"303","line":1,"column":75,"nodeType":"250","messageId":"251","endLine":1,"endColumn":86},{"ruleId":"248","severity":1,"message":"334","line":21,"column":11,"nodeType":"250","messageId":"251","endLine":21,"endColumn":22},{"ruleId":"254","severity":1,"message":"335","line":8,"column":7,"nodeType":"256","endLine":8,"endColumn":9,"suggestions":"336"},{"ruleId":"254","severity":1,"message":"335","line":10,"column":7,"nodeType":"256","endLine":10,"endColumn":9,"suggestions":"337"},{"ruleId":"248","severity":1,"message":"292","line":4,"column":10,"nodeType":"250","messageId":"251","endLine":4,"endColumn":19},{"ruleId":"248","severity":1,"message":"297","line":3,"column":21,"nodeType":"250","messageId":"251","endLine":3,"endColumn":29},{"ruleId":"254","severity":1,"message":"335","line":11,"column":7,"nodeType":"256","endLine":11,"endColumn":9,"suggestions":"338"},{"ruleId":"254","severity":1,"message":"335","line":9,"column":7,"nodeType":"256","endLine":9,"endColumn":9,"suggestions":"339"},{"ruleId":"254","severity":1,"message":"318","line":50,"column":8,"nodeType":"256","endLine":50,"endColumn":10,"suggestions":"340"},{"ruleId":"248","severity":1,"message":"333","line":76,"column":11,"nodeType":"250","messageId":"251","endLine":76,"endColumn":22},{"ruleId":"248","severity":1,"message":"341","line":86,"column":11,"nodeType":"250","messageId":"251","endLine":86,"endColumn":19},{"ruleId":"248","severity":1,"message":"342","line":1,"column":78,"nodeType":"250","messageId":"251","endLine":1,"endColumn":83},{"ruleId":"254","severity":1,"message":"343","line":21,"column":8,"nodeType":"256","endLine":21,"endColumn":10,"suggestions":"344"},{"ruleId":"258","severity":1,"message":"262","line":26,"column":49,"nodeType":"260","messageId":"265","endLine":26,"endColumn":51},{"ruleId":"258","severity":1,"message":"262","line":33,"column":49,"nodeType":"260","messageId":"265","endLine":33,"endColumn":51},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],"no-unused-vars","'FormLabel' is defined but never used.","Identifier","unusedVar","'autoCreate' is assigned a value but never used.","'setAutoCreate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history.location'. Either include it or remove the dependency array.","ArrayExpression",["347"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","expectedInside","'Add' is defined but never used.","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history.location.state' and 'state'. Either include them or remove the dependency array.",["348"],"'setServers' is assigned a value but never used.","'Button' is defined but never used.","'Code' is defined but never used.","'FindReplace' is defined but never used.","'Save' is defined but never used.","'useHistory' is defined but never used.","'cardWidth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'actions'. Either include it or remove the dependency array.",["349"],"'Avatar' is defined but never used.","'Divider' is defined but never used.","'Grid' is defined but never used.","'LinearProgress' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Computer' is defined but never used.","'Rowing' is defined but never used.","'Settings' is defined but never used.","'useEffect' is defined but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'CardActions' is defined but never used.","'IconButton' is defined but never used.","'useState' is defined but never used.","'getAPOS' is assigned a value but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Menu' is defined but never used.","'AccountCircle' is defined but never used.","'ArrowRight' is defined but never used.","'Comment' is defined but never used.","'Delete' is defined but never used.","'FileCopy' is defined but never used.","'Link' is defined but never used.","'Lock' is defined but never used.","'MoreVert' is defined but never used.","'Mouse' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'reduire' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initialSTate'. Either include it or remove the dependency array. If 'setState' needs the current value of 'initialSTate', you can also switch to useReducer instead of useState and read 'initialSTate' in the reducer.",["350"],"'axios' is defined but never used.",["351"],"'MenuItem' is defined but never used.","'AddServer' is assigned a value but never used.",["352"],["353"],"'result' is assigned a value but never used.",["354"],"'createContext' is defined but never used.","'action' is assigned a value but never used.","'setAction' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'index' and 'initialSTate'. Either include them or remove the dependency array. If 'setState' needs the current value of 'initialSTate', you can also switch to useReducer instead of useState and read 'initialSTate' in the reducer.",["355"],"'testService' is assigned a value but never used.","'closeDialog' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'informations' and 'setInformations'. Either include them or remove the dependency array. If 'setInformations' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["356"],["357"],["358"],["359"],["360"],"'testPing' is assigned a value but never used.","'Paper' is defined but never used.","React Hook useEffect has missing dependencies: 'getDatabases', 'getServices', 'history.location', and 'state'. Either include them or remove the dependency array.",["361"],"no-global-assign","no-unsafe-negation",{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"368","fix":"370"},{"desc":"368","fix":"371"},{"desc":"368","fix":"372"},{"desc":"368","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"376","fix":"378"},{"desc":"376","fix":"379"},{"desc":"376","fix":"380"},{"desc":"368","fix":"381"},{"desc":"382","fix":"383"},"Update the dependencies array to be: [history.location]",{"range":"384","text":"385"},"Update the dependencies array to be: [history.location.state, state]",{"range":"386","text":"387"},"Update the dependencies array to be: [actions]",{"range":"388","text":"389"},"Update the dependencies array to be: [initialSTate]",{"range":"390","text":"391"},{"range":"392","text":"391"},{"range":"393","text":"391"},{"range":"394","text":"391"},{"range":"395","text":"391"},"Update the dependencies array to be: [index, initialSTate]",{"range":"396","text":"397"},"Update the dependencies array to be: [informations, setInformations]",{"range":"398","text":"399"},{"range":"400","text":"399"},{"range":"401","text":"399"},{"range":"402","text":"399"},{"range":"403","text":"391"},"Update the dependencies array to be: [getDatabases, getServices, history.location, state]",{"range":"404","text":"405"},[3053,3055],"[history.location]",[821,823],"[history.location.state, state]",[1385,1387],"[actions]",[2437,2439],"[initialSTate]",[1252,1254],[1349,1351],[1760,1762],[1405,1407],[1713,1715],"[index, initialSTate]",[427,429],"[informations, setInformations]",[422,424],[504,506],[417,419],[1325,1327],[723,725],"[getDatabases, getServices, history.location, state]"]