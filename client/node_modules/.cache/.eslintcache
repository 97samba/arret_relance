[{"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\index.js":"1","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\App.js":"2","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Create.js":"3","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\DashBoard.js":"4","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Manage.js":"5","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\ViewItem.js":"6","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Modify.js":"7","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Settings.js":"8","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Layout.js":"9","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\ARCard.js":"10","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\RightNav.js":"11","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Manage\\ListSSA.js":"12","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Dashboard\\DashboardCard.js":"13","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\WebAction.js":"14","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Link.js":"15","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\ARScript.js":"16","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Database.js":"17","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Process.js":"18","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Service.js":"19","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Context\\ActionContext.js":"20","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\OptionMenu.js":"21","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\isconnectialog.js":"22","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\FormDialog.js":"23","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\OptionDialog.js":"24","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\ConnectionDialog.js":"25","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\ClickDialog.js":"26","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Command.js":"27","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Checker.js":"28","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Log.js":"29","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\IIS.js":"30","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Rename.js":"31","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Disk.js":"32","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Fields\\ServerField.js":"33","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Fields\\PathField.js":"34","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\ValidationsDialog.js":"35","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Condition.js":"36","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Automator.js":"37","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Env.js":"38","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Dashboard\\SSAViewer.js":"39"},{"size":449,"mtime":1618580424144,"results":"40","hashOfConfig":"41"},{"size":1873,"mtime":1628068664908,"results":"42","hashOfConfig":"41"},{"size":19990,"mtime":1628069532357,"results":"43","hashOfConfig":"41"},{"size":5386,"mtime":1628186035238,"results":"44","hashOfConfig":"41"},{"size":8098,"mtime":1628188247302,"results":"45","hashOfConfig":"41"},{"size":2385,"mtime":1624892602131,"results":"46","hashOfConfig":"41"},{"size":79,"mtime":1627482281369,"results":"47","hashOfConfig":"41"},{"size":135,"mtime":1618569284110,"results":"48","hashOfConfig":"41"},{"size":6312,"mtime":1628068234327,"results":"49","hashOfConfig":"41"},{"size":15185,"mtime":1628001481061,"results":"50","hashOfConfig":"41"},{"size":7215,"mtime":1628172846937,"results":"51","hashOfConfig":"41"},{"size":5420,"mtime":1626864095417,"results":"52","hashOfConfig":"41"},{"size":990,"mtime":1626857509947,"results":"53","hashOfConfig":"41"},{"size":10991,"mtime":1628170344910,"results":"54","hashOfConfig":"41"},{"size":6229,"mtime":1628151230223,"results":"55","hashOfConfig":"41"},{"size":6367,"mtime":1627997923894,"results":"56","hashOfConfig":"41"},{"size":11201,"mtime":1628172622716,"results":"57","hashOfConfig":"41"},{"size":6909,"mtime":1627997878255,"results":"58","hashOfConfig":"41"},{"size":9437,"mtime":1628188299381,"results":"59","hashOfConfig":"41"},{"size":71,"mtime":1618846144628,"results":"60","hashOfConfig":"41"},{"size":1799,"mtime":1624892303391,"results":"61","hashOfConfig":"41"},{"size":3450,"mtime":1624909157700,"results":"62","hashOfConfig":"41"},{"size":3298,"mtime":1624898525760,"results":"63","hashOfConfig":"41"},{"size":10118,"mtime":1628083187169,"results":"64","hashOfConfig":"41"},{"size":6820,"mtime":1624897275857,"results":"65","hashOfConfig":"41"},{"size":4994,"mtime":1628157800926,"results":"66","hashOfConfig":"41"},{"size":8747,"mtime":1628063030136,"results":"67","hashOfConfig":"41"},{"size":3190,"mtime":1627894510273,"results":"68","hashOfConfig":"41"},{"size":8775,"mtime":1627997916229,"results":"69","hashOfConfig":"41"},{"size":8845,"mtime":1627997970917,"results":"70","hashOfConfig":"41"},{"size":8591,"mtime":1627997898601,"results":"71","hashOfConfig":"41"},{"size":8490,"mtime":1627997931856,"results":"72","hashOfConfig":"41"},{"size":1164,"mtime":1626429358383,"results":"73","hashOfConfig":"41"},{"size":1481,"mtime":1627913427725,"results":"74","hashOfConfig":"41"},{"size":5313,"mtime":1628082148027,"results":"75","hashOfConfig":"41"},{"size":8884,"mtime":1627482610723,"results":"76","hashOfConfig":"41"},{"size":304,"mtime":1626982521069,"results":"77","hashOfConfig":"41"},{"size":132,"mtime":1627984661895,"results":"78","hashOfConfig":"41"},{"size":5201,"mtime":1628186037536,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"175tmnb",{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\index.js",[],["168","169"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\App.js",["170"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Create.js",["171","172","173","174"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\DashBoard.js",["175","176","177","178","179","180"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Manage.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\ViewItem.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Modify.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Settings.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Layout.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\ARCard.js",["181","182","183"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\RightNav.js",["184","185","186","187","188"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Manage\\ListSSA.js",["189"],"import { Button, CardActionArea, makeStyles } from \"@material-ui/core\";\r\nimport { useEffect } from \"react\";\r\nimport { Avatar, Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n        flexGrow: theme.spacing(1),\r\n    },\r\n    fields: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}));\r\nconst ListSSA = ({ ssa, fromExcel, setLoading }) => {\r\n    const url = \"http://localhost:5000/api\";\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        //console.log(ssa)\r\n    });\r\n\r\n    const visitPOS = (ssa) => {\r\n        const futureState = fromExcel ? ssa : { name: ssa.name, id: ssa._id };\r\n        history.push({\r\n            pathname: \"/create\",\r\n            state: futureState,\r\n            fromExcel: fromExcel,\r\n        });\r\n    };\r\n\r\n    const testSSA = (ssa) => {};\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root} elevation={0.5}>\r\n                <CardActionArea\r\n                    onClick={() => {\r\n                        setLoading(true);\r\n                        visitPOS(ssa);\r\n                    }}\r\n                >\r\n                    <CardContent>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={1} md={1} sm={1}>\r\n                                <Avatar>\r\n                                    {ssa.name.split(\"_\").length > 1\r\n                                        ? ssa.name\r\n                                              .split(\"_\")[1][0]\r\n                                              .toUpperCase()\r\n                                        : ssa.name[0].toUpperCase()}\r\n                                </Avatar>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3} md={3} sm={3}>\r\n                                <Typography> {ssa.name}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={1} sm={1}>\r\n                                <Typography>\r\n                                    {\" \"}\r\n                                    {ssa.Arret.length} - {ssa.Relance.length}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={2} sm={2}>\r\n                                <Typography> {ssa.auteur}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={2} sm={2}>\r\n                                <Typography>\r\n                                    {\" \"}\r\n                                    {new Date(ssa.createdAt).toLocaleString()}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={3} sm={2}>\r\n                                <Grid\r\n                                    spacing={1}\r\n                                    container\r\n                                    justify=\"space-around\"\r\n                                    alignContent=\"center\"\r\n                                >\r\n                                    <Grid item md={5}>\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            color=\"default\"\r\n                                            onClick={() => visitPOS(ssa)}\r\n                                        >\r\n                                            PARPRE/POS\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item md={4}>\r\n                                        {!fromExcel ? (\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                onClick={() => testSSA(ssa)}\r\n                                            >\r\n                                                Tester\r\n                                            </Button>\r\n                                        ) : (\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                onClick={() => testSSA(ssa)}\r\n                                            >\r\n                                                Importer\r\n                                            </Button>\r\n                                        )}\r\n                                    </Grid>\r\n                                    <Grid item md={3}>\r\n                                        <Button>\r\n                                            <Delete color=\"secondary\" />\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListSSA;\r\n","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Dashboard\\DashboardCard.js",["190"],"import { Box, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport { SupervisedUserCircle } from \"@material-ui/icons\";\r\n\r\n//Le nombre de ssa dans Céphée\r\nconst totalDocument = 728;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(5),\r\n    },\r\n}));\r\n\r\nconst DashboardCard = ({ name, icon, documentNumber }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.root} elevation={1}>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <Box mr={1}>{icon}</Box>\r\n                    <Typography>{name}</Typography>\r\n                </Box>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <Typography variant=\"h5\">\r\n                        {documentNumber} / {totalDocument}\r\n                    </Typography>\r\n                </Box>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardCard;\r\n","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\WebAction.js",["191","192","193","194","195","196"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Link.js",["197","198","199","200"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\ARScript.js",["201","202","203","204","205"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Database.js",["206","207","208","209"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Process.js",["210","211"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Service.js",["212","213"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Context\\ActionContext.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\OptionMenu.js",["214"],"import { IconButton, Menu, MenuItem } from \"@material-ui/core\";\r\nimport {  Comment, Delete, FileCopy, MoreVert } from \"@material-ui/icons\";\r\nimport {  useState } from \"react\";\r\n\r\nconst OptionMenu = ({index,deleteAction,duplicateAction, setOpenDialog}) => {\r\n\r\n    const [anchorEl, setAnchor] = useState(null)\r\n\r\n    const handleClick = (event) =>{\r\n        setAnchor(event.currentTarget)\r\n    }\r\n\r\n    const handleClose= () => {\r\n        setAnchor(null)\r\n    }\r\n\r\n    const showDialog = () =>{\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    const closeDialog = () =>{\r\n        setOpenDialog(false);\r\n    }\r\n    \r\n\r\n    return ( \r\n        <div>\r\n            <IconButton onClick={handleClick}>\r\n                <MoreVert />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n\r\n                <MenuItem onClick={() => {\r\n\r\n                    deleteAction(index)\r\n                    setAnchor(null)\r\n                    \r\n                    }} >\r\n                    \r\n                    <Delete />Supprimer\r\n                \r\n                </MenuItem>\r\n                <MenuItem onClick={() => {\r\n                        \r\n                        handleClose()\r\n                        duplicateAction(index)\r\n                    }\r\n                } \r\n                >\r\n                    <FileCopy /> Dupliquer\r\n                        \r\n                </MenuItem>\r\n                <MenuItem onClick={() => {showDialog(); handleClose()}} >\r\n                    <Comment /> Options\r\n\r\n                </MenuItem>\r\n            </Menu>\r\n            \r\n\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default OptionMenu;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\isconnectialog.js",["215"],"import { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Link, TextField } from \"@material-ui/core\";\r\nimport { ArrowRight } from \"@material-ui/icons\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst DisconnectDialog = ({ informations, setInformations, saveInformations, openDialog, closeDialog }) => {\r\n    useEffect(() => {\r\n        setInformations({ ...informations, type: \"logOut\" })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={closeDialog}\r\n\r\n                onBlur={saveInformations}\r\n            >\r\n                <DialogTitle id='dialog-title'>Déconnexion </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Le sélecteur est obtenu en faisant un click droit sur le champ à automatiser,\r\n                        Inspecter\" puis click droit sur l'élément html et \"copy selector\".\r\n                        Ici préciser le lien de déconnection ou le sélecteur\r\n                    </DialogContentText>\r\n                    <div>\r\n                        <Box display=\"flex\" justifyContent=\"space-around\">\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n                                <Grid item >\r\n                                    <Link />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        value={informations.logOut}\r\n                                        variant=\"outlined\"\r\n                                        autoFocus\r\n                                        margin=\"dense\"\r\n                                        id=\"logout\"\r\n                                        label=\"lien de déconnexion\"\r\n                                        autoComplete={false}\r\n\r\n                                        onChange={(e) => (setInformations({ ...informations, logOut: e.target.value }))}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n                                <Grid item >\r\n                                    <ArrowRight />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        value={informations.logOutSelector}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        id=\"logOut-selector\"\r\n                                        label=\"ou sélecteur\"\r\n                                        onChange={(e) => (setInformations({ ...informations, logOutSelector: e.target.value }))}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onclick={() => { closeDialog(); saveInformations() }}>\r\n                        Confirmer\r\n                    </Button>\r\n\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default DisconnectDialog;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\FormDialog.js",["216"],"import { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst FormDialog = ({ informations, setInformations, saveInformations, openDialog, closeDialog }) => {\r\n\r\n    useEffect(() => {\r\n        setInformations({...informations, type:\"form\"})\r\n        console.log(\"updated de dialog form\")\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={closeDialog}\r\n                fullWidth\r\n                onBlur={saveInformations}\r\n            >\r\n                <DialogTitle id='dialog-title'>Remplir un ou des champs </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Le sélecteur est obtenu en faisant un click droit sur le champ à automatiser,\r\n                        Inspecter\" puis click droit sur l'élément html et \"copy selector\".\r\n                        Ici préciser le lien de déconnection ou le sélecteur\r\n                    </DialogContentText>\r\n                    <div>\r\n                        <Box display=\"flex\" justifyContent=\"space-around\">\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        value={informations.field}\r\n                                        variant=\"outlined\"\r\n                                        autoFocus\r\n                                        margin=\"dense\"\r\n                                        label=\"Valeur\"\r\n                                        autoComplete={true}\r\n\r\n                                        onChange={(e) => (setInformations({ ...informations, field: e.target.value }))}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        value={informations.fieldSelector}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        label=\"sélecteur\"\r\n                                        autoComplete\r\n                                        onChange={(e) => (setInformations({ ...informations, fieldSelector: e.target.value }))}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <IconButton>\r\n                                <Add />\r\n                            </IconButton>\r\n\r\n                        </Box>\r\n\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onclick={() => { closeDialog(); saveInformations() }}>\r\n                        Confirmer\r\n                    </Button>\r\n\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormDialog;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\OptionDialog.js",["217","218","219"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\ConnectionDialog.js",["220"],"import { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Grid, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport { AccountCircle, ArrowRight, Lock } from \"@material-ui/icons\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\nconst ConnectionDialog = ({ informations, setInformations, saveInformations, openDialog, closeDialog }) => {\r\n\r\n    useEffect(() => {\r\n        setInformations({ ...informations, type: \"connection\" })\r\n        console.log(\"updated de dialog\")\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={closeDialog}\r\n                fullWidth\r\n                onBlur={saveInformations}\r\n            >\r\n                <DialogTitle id='dialog-title' >Connexion </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Le sélecteur est obtenu en faisant un click droit sur le champ à automatiser,\r\n                        Inspecter\" puis click droit sur l'élément html et \"copy selector\"\r\n                    </DialogContentText>\r\n                    <div>\r\n                        <Box display=\"flex\" justifyContent=\"space-around\">\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n                                <Grid item >\r\n                                    <AccountCircle />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        value={informations.login}\r\n                                        variant=\"outlined\"\r\n                                        autoFocus\r\n                                        margin=\"dense\"\r\n                                        id=\"login\"\r\n                                        label=\"Login\"\r\n                                        onChange={(e) => (setInformations({ ...informations, login: e.target.value }))}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n                                <Grid item >\r\n                                    <ArrowRight />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        value={informations.loginSelector}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        id=\"login-selector\"\r\n                                        label=\"sélecteur\"\r\n                                        onChange={(e) => (setInformations({ ...informations, loginSelector: e.target.value }))}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\" justifyContent=\"space-around\">\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n                                <Grid item >\r\n                                    <Lock />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        value={informations.password}\r\n                                        margin=\"dense\"\r\n                                        id=\"password\"\r\n                                        label=\"Mot de passe\"\r\n                                        type=\"password\"\r\n                                        onChange={(e) => (setInformations({ ...informations, password: e.target.value }))}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container spacing={1} alignItems=\"center\">\r\n                                <Grid item >\r\n                                    <ArrowRight />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        value={informations.passwordSelector}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        id=\"password-selector\"\r\n                                        label=\"sélecteur\"\r\n                                        onChange={(e) => (setInformations({ ...informations, passwordSelector: e.target.value }))}\r\n\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Box>\r\n\r\n                        <Grid container spacing={2}>\r\n                            <Grid item md={6}>\r\n                                <FormControl fullWidth >\r\n                                    <InputLabel>Navigateur</InputLabel>\r\n                                    <Select value={informations.navigator || \"Chrome\"} onChange={(e) => setInformations({ ...informations, navigator: e.target.value })}>\r\n                                        <MenuItem value=\"Chrome\" >Chrome</MenuItem>\r\n                                        <MenuItem value=\"Firefox\">Firefox</MenuItem>\r\n                                        <MenuItem value=\"Edge\">Edge</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item md={6}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Mode de Navigation</InputLabel>\r\n                                    <Select value={informations.navigatorMode || \"normal\"} onChange={(e) => (setInformations({ ...informations, navigatorMode: e.target.value }))}>\r\n                                        <MenuItem value=\"normal\" >Normal</MenuItem>\r\n                                        <MenuItem value=\"private\">privé</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onclick={() => { closeDialog(); saveInformations() }}>\r\n                        Confirmer\r\n                    </Button>\r\n\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConnectionDialog;","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\ClickDialog.js",["221"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Command.js",["222","223","224","225"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Checker.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Log.js",["226","227","228","229","230","231"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\IIS.js",["232","233","234"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Rename.js",["235","236","237","238","239","240","241"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Disk.js",["242","243","244","245","246","247","248","249","250"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Fields\\ServerField.js",["251"],"import { useEffect } from \"react\";\r\nimport { TextField } from \"@material-ui/core\"\r\nimport checker from \"../Checker\";\r\n\r\n\r\nconst ServerField = ({ NameClass, server, setServer, index, saveInformations, initialServer, serverError, setServerError,verification }) => {\r\n\r\n\r\n    useEffect(() => {\r\n        if (initialServer && (server === \"\" || server === undefined)&& verification) {\r\n            checker.ping(initialServer, setServerError)\r\n        }\r\n        if (server) {\r\n            //checker.ping(server, setServerError)\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                className={NameClass}\r\n                color=\"primary\"\r\n                value={server}\r\n                id={`server-${index}`}\r\n                error={serverError}\r\n                label={serverError ? 'Injoignable' : 'Serveur'}\r\n                onChange={(e) => setServer(e.target.value)}\r\n\r\n                onBlur={(e) => {\r\n                    saveInformations()\r\n                    checker.ping(e.target.value, setServerError)\r\n\r\n                }\r\n                }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServerField;",["252","253"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Fields\\PathField.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Creation\\ValidationsDialog.js",["254"],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Actions\\Condition.js",["255","256","257","258","259","260","261","262"],"import {\r\n    Avatar,\r\n    Box,\r\n    FormControl,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Paper,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { CallSplit } from \"@material-ui/icons\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport ActionContext from \"../../Context/ActionContext\";\r\nimport OptionMenu from \"../Creation/OptionMenu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: \"#F6F6FB\",\r\n        padding: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    fields: {\r\n        width: \"100%\",\r\n    },\r\n    smallAvatar: {\r\n        width: theme.spacing(2.5),\r\n        height: theme.spacing(2.5),\r\n    },\r\n}));\r\nconst Condition = ({ index, initialSTate, verified }) => {\r\n    const classes = useStyles();\r\n    const { deleteAction, duplicateAction, saveData } = useContext(ActionContext);\r\n\r\n    const [state, setState] = useState({ initialSTate });\r\n    //const [recieved, setRecieved] = useState({ ...verified });\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const [type, setType] = useState(\"If\");\r\n    const [action, setAction] = useState(\"\");\r\n    const [sortie, setSortie] = useState(\"\");\r\n\r\n    const [options, setOptions] = useState({\r\n        block: true,\r\n        prod: true,\r\n        hprod: true,\r\n        inte: true,\r\n        dev: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        verified ? setAction(verified.type) : setAction(\"\");\r\n    }, []);\r\n\r\n    const saveInformations = () => {\r\n        if (state.out) {\r\n            saveData({\r\n                index: index,\r\n                type: \"condition\",\r\n                out: state.out,\r\n                type: type,\r\n            });\r\n        }\r\n    };\r\n\r\n    const ActionType = [\r\n        {\r\n            name: \"Vérifier Url\",\r\n            type: \"link\",\r\n            console: [\"ok\", \"ko\", \"PAGE_BLANCHE\"],\r\n        },\r\n        {\r\n            name: \"Action Web\",\r\n            type: \"webAction\",\r\n            console: [\"ok\", \"erreur\"],\r\n        },\r\n        {\r\n            name: \"Service\",\r\n            type: \"service\",\r\n            console: [\"running\", \"stopped\"],\r\n        },\r\n        {\r\n            name: \"Processus\",\r\n            type: \"process\",\r\n            console: [\"running\", \"stopped\"],\r\n        },\r\n        {\r\n            name: \"Script\",\r\n            type: \"script\",\r\n        },\r\n        {\r\n            name: \"Base de données\",\r\n            type: \"database\",\r\n            console: [\"ok\", \"ko\", \"autre erreur\"],\r\n        },\r\n        {\r\n            name: \"Commande\",\r\n            type: \"command\",\r\n        },\r\n        {\r\n            name: \"Log\",\r\n            type: \"log\",\r\n            console: [\"ok\", \"ko\"],\r\n        },\r\n        {\r\n            name: \"Disque\",\r\n            type: \"disk\",\r\n            console: [\"ok\", \"ko\"],\r\n        },\r\n        {\r\n            name: \"Pool ou Site IIS\",\r\n            type: \"IIS\",\r\n            console: [\"running\", \"stopped\"],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div id={\"condition-\" + index} style={{ marginLeft: -15 }}>\r\n            <Paper elevation={0} className={classes.root}>\r\n                <Grid container alignItems=\"center\" spacing={2}>\r\n                    <Grid item sm={1} md={1} xl={1}>\r\n                        <Box my=\"auto\" display=\"flex\" justifyContent=\"center\">\r\n                            <CallSplit color=\"primary\" />\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item sm={2} md={2} xl={2}>\r\n                        <FormControl className={classes.fields}>\r\n                            <InputLabel>Type</InputLabel>\r\n                            <Select\r\n                                value={type}\r\n                                onChange={(e) => setType(e.target.value)}\r\n                                fullWidth\r\n                                onBlur={saveInformations}\r\n                            >\r\n                                <MenuItem value=\"If\">If</MenuItem>\r\n                                <MenuItem value=\"Else\">Else</MenuItem>\r\n                                <MenuItem value=\"fi\">End If</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item sm={3} md={3} xl={3}>\r\n                        <FormControl className={classes.fields}>\r\n                            <InputLabel>Action Précedente</InputLabel>\r\n                            <Select\r\n                                value={action}\r\n                                onChange={(e) => setAction(e.target.value)}\r\n                                fullWidth\r\n                                onBlur={saveInformations}\r\n                            >\r\n                                {ActionType.map((action) => (\r\n                                    <MenuItem value={action.type}>{action.name}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item sm={3} md={3} xl={3}>\r\n                        <TextField\r\n                            onChange={(e) => setState({ ...state, out: e.target.value })}\r\n                            onBlur={(e) => {\r\n                                saveInformations();\r\n                            }}\r\n                            value={verified.name || verified.path}\r\n                            className={classes.fields}\r\n                            id=\"sortie\"\r\n                            color=\"primary\"\r\n                            label={\"Nom \" + action}\r\n                        />\r\n                    </Grid>\r\n                    {verified.type === \"script\" || verified.type === \"command\" ? (\r\n                        <Grid item sm={2} md={2} xl={2}>\r\n                            <TextField\r\n                                onChange={(e) => setState({ ...state, out: e.target.value })}\r\n                                onBlur={(e) => {\r\n                                    saveInformations();\r\n                                }}\r\n                                value={state.out}\r\n                                className={classes.fields}\r\n                                id={\"sortie \" + index + \"-\" + type}\r\n                                color=\"primary\"\r\n                                label={\"Sortie \" + action}\r\n                            />\r\n                        </Grid>\r\n                    ) : (\r\n                        <Grid item sm={2} md={2} xl={2}>\r\n                            <FormControl className={classes.fields}>\r\n                                <InputLabel>Sortie attendue</InputLabel>\r\n                                <Select\r\n                                    value={sortie}\r\n                                    onChange={(e) => setSortie(e.target.value)}\r\n                                    fullWidth\r\n                                    onBlur={saveInformations}\r\n                                >\r\n                                    {ActionType.filter(\r\n                                        (element) =>\r\n                                            element.type != \"script\" && element.type != \"command\"\r\n                                    ).map(\r\n                                        (item) =>\r\n                                            item.type == action &&\r\n                                            item.console.map((out) => (\r\n                                                <MenuItem value={out}>{out}</MenuItem>\r\n                                            ))\r\n                                    )}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    )}\r\n\r\n                    <Grid item md={1} xl={1}>\r\n                        <Grid container spacing={3} alignItems=\"center\">\r\n                            <Grid item md={6}>\r\n                                <OptionMenu\r\n                                    index={index}\r\n                                    deleteAction={deleteAction}\r\n                                    duplicateAction={duplicateAction}\r\n                                    setOpenDialog={setOpenDialog}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item md={6}>\r\n                                <Box my=\"auto\">\r\n                                    <Avatar className={classes.smallAvatar}>\r\n                                        <Typography>{index + 1}</Typography>\r\n                                    </Avatar>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Condition;\r\n","C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Pages\\Automator.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Env.js",[],"C:\\Users\\samba\\Desktop\\projetSFR\\AR\\client\\src\\Components\\Dashboard\\SSAViewer.js",["263","264","265"],{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":7,"column":41,"nodeType":"272","messageId":"273","endLine":7,"endColumn":51},{"ruleId":"274","severity":1,"message":"275","line":94,"column":8,"nodeType":"276","endLine":94,"endColumn":10,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":108,"column":34,"nodeType":"280","messageId":"281","endLine":108,"endColumn":36},{"ruleId":"278","severity":1,"message":"282","line":110,"column":17,"nodeType":"283","messageId":"284","endLine":110,"endColumn":24},{"ruleId":"278","severity":1,"message":"282","line":160,"column":33,"nodeType":"280","messageId":"285","endLine":160,"endColumn":35},{"ruleId":"270","severity":1,"message":"286","line":11,"column":5,"nodeType":"272","messageId":"273","endLine":11,"endColumn":9},{"ruleId":"270","severity":1,"message":"287","line":12,"column":5,"nodeType":"272","messageId":"273","endLine":12,"endColumn":16},{"ruleId":"270","severity":1,"message":"288","line":13,"column":5,"nodeType":"272","messageId":"273","endLine":13,"endColumn":15},{"ruleId":"270","severity":1,"message":"289","line":14,"column":5,"nodeType":"272","messageId":"273","endLine":14,"endColumn":11},{"ruleId":"270","severity":1,"message":"290","line":17,"column":5,"nodeType":"272","messageId":"273","endLine":17,"endColumn":20},{"ruleId":"270","severity":1,"message":"291","line":47,"column":11,"nodeType":"272","messageId":"273","endLine":47,"endColumn":18},{"ruleId":"270","severity":1,"message":"292","line":43,"column":7,"nodeType":"272","messageId":"273","endLine":43,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":371,"column":73,"nodeType":"295","messageId":"296","endLine":371,"endColumn":75},{"ruleId":"293","severity":1,"message":"294","line":372,"column":73,"nodeType":"295","messageId":"296","endLine":372,"endColumn":75},{"ruleId":"270","severity":1,"message":"297","line":3,"column":20,"nodeType":"272","messageId":"273","endLine":3,"endColumn":31},{"ruleId":"270","severity":1,"message":"298","line":24,"column":12,"nodeType":"272","messageId":"273","endLine":24,"endColumn":20},{"ruleId":"270","severity":1,"message":"299","line":24,"column":22,"nodeType":"272","messageId":"273","endLine":24,"endColumn":33},{"ruleId":"293","severity":1,"message":"294","line":95,"column":21,"nodeType":"295","messageId":"296","endLine":95,"endColumn":23},{"ruleId":"293","severity":1,"message":"300","line":142,"column":51,"nodeType":"295","messageId":"296","endLine":142,"endColumn":53},{"ruleId":"270","severity":1,"message":"301","line":19,"column":11,"nodeType":"272","messageId":"273","endLine":19,"endColumn":14},{"ruleId":"270","severity":1,"message":"302","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":30},{"ruleId":"270","severity":1,"message":"303","line":46,"column":12,"nodeType":"272","messageId":"273","endLine":46,"endColumn":20},{"ruleId":"270","severity":1,"message":"304","line":62,"column":11,"nodeType":"272","messageId":"273","endLine":62,"endColumn":22},{"ruleId":"270","severity":1,"message":"305","line":65,"column":11,"nodeType":"272","messageId":"273","endLine":65,"endColumn":22},{"ruleId":"270","severity":1,"message":"306","line":68,"column":11,"nodeType":"272","messageId":"273","endLine":68,"endColumn":18},{"ruleId":"274","severity":1,"message":"307","line":77,"column":8,"nodeType":"276","endLine":77,"endColumn":10,"suggestions":"308"},{"ruleId":"270","severity":1,"message":"309","line":78,"column":11,"nodeType":"272","messageId":"273","endLine":78,"endColumn":20},{"ruleId":"270","severity":1,"message":"310","line":42,"column":12,"nodeType":"272","messageId":"273","endLine":42,"endColumn":22},{"ruleId":"270","severity":1,"message":"311","line":43,"column":21,"nodeType":"272","messageId":"273","endLine":43,"endColumn":31},{"ruleId":"274","severity":1,"message":"307","line":47,"column":8,"nodeType":"276","endLine":47,"endColumn":10,"suggestions":"312"},{"ruleId":"270","severity":1,"message":"313","line":58,"column":11,"nodeType":"272","messageId":"273","endLine":58,"endColumn":25},{"ruleId":"274","severity":1,"message":"314","line":44,"column":15,"nodeType":"280","endLine":49,"endColumn":6},{"ruleId":"274","severity":1,"message":"315","line":49,"column":8,"nodeType":"276","endLine":49,"endColumn":10,"suggestions":"316"},{"ruleId":"274","severity":1,"message":"317","line":61,"column":8,"nodeType":"276","endLine":61,"endColumn":22,"suggestions":"318"},{"ruleId":"293","severity":1,"message":"294","line":81,"column":20,"nodeType":"295","messageId":"296","endLine":81,"endColumn":22},{"ruleId":"319","severity":1,"message":"320","line":87,"column":9,"nodeType":"321","messageId":"296","endLine":87,"endColumn":23},{"ruleId":"270","severity":1,"message":"322","line":46,"column":27,"nodeType":"272","messageId":"273","endLine":46,"endColumn":43},{"ruleId":"274","severity":1,"message":"307","line":67,"column":8,"nodeType":"276","endLine":67,"endColumn":10,"suggestions":"323"},{"ruleId":"274","severity":1,"message":"324","line":80,"column":8,"nodeType":"276","endLine":80,"endColumn":22,"suggestions":"325"},{"ruleId":"270","severity":1,"message":"326","line":89,"column":55,"nodeType":"272","messageId":"273","endLine":89,"endColumn":61},{"ruleId":"274","severity":1,"message":"315","line":58,"column":8,"nodeType":"276","endLine":58,"endColumn":10,"suggestions":"327"},{"ruleId":"274","severity":1,"message":"324","line":70,"column":8,"nodeType":"276","endLine":70,"endColumn":22,"suggestions":"328"},{"ruleId":"274","severity":1,"message":"307","line":61,"column":8,"nodeType":"276","endLine":61,"endColumn":10,"suggestions":"329"},{"ruleId":"274","severity":1,"message":"330","line":74,"column":8,"nodeType":"276","endLine":74,"endColumn":22,"suggestions":"331"},{"ruleId":"270","severity":1,"message":"332","line":21,"column":11,"nodeType":"272","messageId":"273","endLine":21,"endColumn":22},{"ruleId":"274","severity":1,"message":"333","line":8,"column":8,"nodeType":"276","endLine":8,"endColumn":10,"suggestions":"334"},{"ruleId":"274","severity":1,"message":"333","line":11,"column":8,"nodeType":"276","endLine":11,"endColumn":10,"suggestions":"335"},{"ruleId":"274","severity":1,"message":"336","line":27,"column":8,"nodeType":"276","endLine":27,"endColumn":10,"suggestions":"337"},{"ruleId":"270","severity":1,"message":"338","line":29,"column":12,"nodeType":"272","messageId":"273","endLine":29,"endColumn":17},{"ruleId":"270","severity":1,"message":"339","line":29,"column":19,"nodeType":"272","messageId":"273","endLine":29,"endColumn":27},{"ruleId":"274","severity":1,"message":"333","line":13,"column":8,"nodeType":"276","endLine":13,"endColumn":10,"suggestions":"340"},{"ruleId":"274","severity":1,"message":"333","line":24,"column":8,"nodeType":"276","endLine":24,"endColumn":10,"suggestions":"341"},{"ruleId":"270","severity":1,"message":"342","line":32,"column":12,"nodeType":"272","messageId":"273","endLine":32,"endColumn":21},{"ruleId":"270","severity":1,"message":"343","line":32,"column":23,"nodeType":"272","messageId":"273","endLine":32,"endColumn":35},{"ruleId":"274","severity":1,"message":"307","line":49,"column":8,"nodeType":"276","endLine":49,"endColumn":10,"suggestions":"344"},{"ruleId":"274","severity":1,"message":"324","line":57,"column":8,"nodeType":"276","endLine":57,"endColumn":22,"suggestions":"345"},{"ruleId":"270","severity":1,"message":"346","line":5,"column":5,"nodeType":"272","messageId":"273","endLine":5,"endColumn":15},{"ruleId":"270","severity":1,"message":"347","line":6,"column":5,"nodeType":"272","messageId":"273","endLine":6,"endColumn":13},{"ruleId":"270","severity":1,"message":"348","line":8,"column":5,"nodeType":"272","messageId":"273","endLine":8,"endColumn":11},{"ruleId":"270","severity":1,"message":"349","line":40,"column":18,"nodeType":"272","messageId":"273","endLine":40,"endColumn":25},{"ruleId":"274","severity":1,"message":"350","line":56,"column":8,"nodeType":"276","endLine":56,"endColumn":10,"suggestions":"351"},{"ruleId":"274","severity":1,"message":"317","line":69,"column":8,"nodeType":"276","endLine":69,"endColumn":22,"suggestions":"352"},{"ruleId":"270","severity":1,"message":"353","line":46,"column":26,"nodeType":"272","messageId":"273","endLine":46,"endColumn":41},{"ruleId":"274","severity":1,"message":"315","line":65,"column":8,"nodeType":"276","endLine":65,"endColumn":10,"suggestions":"354"},{"ruleId":"274","severity":1,"message":"324","line":77,"column":8,"nodeType":"276","endLine":77,"endColumn":22,"suggestions":"355"},{"ruleId":"270","severity":1,"message":"356","line":5,"column":5,"nodeType":"272","messageId":"273","endLine":5,"endColumn":12},{"ruleId":"270","severity":1,"message":"347","line":6,"column":5,"nodeType":"272","messageId":"273","endLine":6,"endColumn":13},{"ruleId":"270","severity":1,"message":"348","line":8,"column":5,"nodeType":"272","messageId":"273","endLine":8,"endColumn":11},{"ruleId":"270","severity":1,"message":"357","line":18,"column":8,"nodeType":"272","messageId":"273","endLine":18,"endColumn":17},{"ruleId":"270","severity":1,"message":"349","line":41,"column":18,"nodeType":"272","messageId":"273","endLine":41,"endColumn":25},{"ruleId":"274","severity":1,"message":"307","line":56,"column":8,"nodeType":"276","endLine":56,"endColumn":10,"suggestions":"358"},{"ruleId":"274","severity":1,"message":"324","line":66,"column":8,"nodeType":"276","endLine":66,"endColumn":22,"suggestions":"359"},{"ruleId":"270","severity":1,"message":"360","line":4,"column":5,"nodeType":"272","messageId":"273","endLine":4,"endColumn":9},{"ruleId":"270","severity":1,"message":"361","line":5,"column":5,"nodeType":"272","messageId":"273","endLine":5,"endColumn":16},{"ruleId":"270","severity":1,"message":"346","line":7,"column":5,"nodeType":"272","messageId":"273","endLine":7,"endColumn":15},{"ruleId":"270","severity":1,"message":"348","line":10,"column":5,"nodeType":"272","messageId":"273","endLine":10,"endColumn":11},{"ruleId":"270","severity":1,"message":"362","line":17,"column":10,"nodeType":"272","messageId":"273","endLine":17,"endColumn":19},{"ruleId":"270","severity":1,"message":"363","line":17,"column":27,"nodeType":"272","messageId":"273","endLine":17,"endColumn":33},{"ruleId":"270","severity":1,"message":"364","line":22,"column":8,"nodeType":"272","messageId":"273","endLine":22,"endColumn":15},{"ruleId":"274","severity":1,"message":"315","line":62,"column":8,"nodeType":"276","endLine":62,"endColumn":10,"suggestions":"365"},{"ruleId":"274","severity":1,"message":"324","line":75,"column":8,"nodeType":"276","endLine":75,"endColumn":22,"suggestions":"366"},{"ruleId":"274","severity":1,"message":"367","line":17,"column":8,"nodeType":"276","endLine":17,"endColumn":10,"suggestions":"368"},{"ruleId":"266","replacedBy":"369"},{"ruleId":"268","replacedBy":"370"},{"ruleId":"270","severity":1,"message":"371","line":24,"column":17,"nodeType":"272","messageId":"273","endLine":24,"endColumn":22},{"ruleId":"270","severity":1,"message":"310","line":39,"column":12,"nodeType":"272","messageId":"273","endLine":39,"endColumn":22},{"ruleId":"270","severity":1,"message":"372","line":45,"column":12,"nodeType":"272","messageId":"273","endLine":45,"endColumn":19},{"ruleId":"270","severity":1,"message":"311","line":45,"column":21,"nodeType":"272","messageId":"273","endLine":45,"endColumn":31},{"ruleId":"274","severity":1,"message":"373","line":55,"column":8,"nodeType":"276","endLine":55,"endColumn":10,"suggestions":"374"},{"ruleId":"319","severity":1,"message":"375","line":63,"column":17,"nodeType":"321","messageId":"296","endLine":63,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":199,"column":58,"nodeType":"295","messageId":"296","endLine":199,"endColumn":60},{"ruleId":"293","severity":1,"message":"294","line":199,"column":86,"nodeType":"295","messageId":"296","endLine":199,"endColumn":88},{"ruleId":"293","severity":1,"message":"300","line":202,"column":55,"nodeType":"295","messageId":"296","endLine":202,"endColumn":57},{"ruleId":"270","severity":1,"message":"376","line":13,"column":10,"nodeType":"272","messageId":"273","endLine":13,"endColumn":19},{"ruleId":"270","severity":1,"message":"377","line":13,"column":21,"nodeType":"272","messageId":"273","endLine":13,"endColumn":29},{"ruleId":"270","severity":1,"message":"378","line":19,"column":9,"nodeType":"272","messageId":"273","endLine":19,"endColumn":24},"no-native-reassign",["379"],"no-negated-in-lhs",["380"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getADocumentFromBase', 'getADocumentFromExcel', 'history.location.fromExcel', and 'history.location.state'. Either include them or remove the dependency array.","ArrayExpression",["381"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","expectedInside","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Button' is defined but never used.","'ArrowForwardIos' is defined but never used.","'history' is assigned a value but never used.","'cardWidth' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'GridOverlay' is defined but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","Expected '===' and instead saw '=='.","'url' is assigned a value but never used.","'SupervisedUserCircle' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'reduire' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initialSTate'. Either include it or remove the dependency array. If 'setState' needs the current value of 'initialSTate', you can also switch to useReducer instead of useState and read 'initialSTate' in the reducer.",["382"],"'formatUrl' is assigned a value but never used.","'openDialog' is assigned a value but never used.","'setOptions' is assigned a value but never used.",["383"],"'testConnection' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'initialSTate' and 'options'. Either include them or remove the dependency array. If 'setState' needs the current value of 'initialSTate', you can also switch to useReducer instead of useState and read 'initialSTate' in the reducer.",["384"],"React Hook useEffect has missing dependencies: 'initialSTate.path', 'initialSTate.server', 'state.path', and 'state.server'. Either include them or remove the dependency array.",["385"],"no-dupe-keys","Duplicate key 'setScriptError'.","ObjectExpression","'setDatabaseError' is assigned a value but never used.",["386"],"React Hook useEffect has missing dependencies: 'initialSTate.server' and 'state.server'. Either include them or remove the dependency array.",["387"],"'result' is assigned a value but never used.",["388"],["389"],["390"],"React Hook useEffect has missing dependencies: 'initialSTate.name', 'initialSTate.server', 'state.name', and 'state.server'. Either include them or remove the dependency array.",["391"],"'closeDialog' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'informations' and 'setInformations'. Either include them or remove the dependency array. If 'setInformations' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["392"],["393"],"React Hook useEffect has missing dependencies: 'options', 'setOptions', and 'timeOut'. Either include them or remove the dependency array. If 'setOptions' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["394"],"'block' is assigned a value but never used.","'setBlock' is assigned a value but never used.",["395"],["396"],"'pingState' is assigned a value but never used.","'setPingState' is assigned a value but never used.",["397"],["398"],"'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'setPath' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initialSTate' and 'options'. Either include them or remove the dependency array. You can also do a functional update 'setOptions(o => ...)' if you only need 'options' in the 'setOptions' call.",["399"],["400"],"'setElementError' is assigned a value but never used.",["401"],["402"],"'Inpabel' is defined but never used.","'PathField' is defined but never used.",["403"],["404"],"'Chip' is defined but never used.","'FormControl' is defined but never used.","'Autorenew' is defined but never used.","'Search' is defined but never used.","'checker' is defined but never used.",["405"],["406"],"React Hook useEffect has missing dependencies: 'initialServer', 'server', 'setServerError', and 'verification'. Either include them or remove the dependency array.",["407"],["379"],["380"],"'state' is assigned a value but never used.","'options' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'verified'. Either include it or remove the dependency array.",["408"],"Duplicate key 'type'.","'useEffect' is defined but never used.","'useState' is defined but never used.","'docInformations' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"411","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"411","fix":"418"},{"desc":"419","fix":"420"},{"desc":"414","fix":"421"},{"desc":"419","fix":"422"},{"desc":"411","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"426","fix":"428"},{"desc":"429","fix":"430"},{"desc":"426","fix":"431"},{"desc":"426","fix":"432"},{"desc":"411","fix":"433"},{"desc":"419","fix":"434"},{"desc":"414","fix":"435"},{"desc":"416","fix":"436"},{"desc":"414","fix":"437"},{"desc":"419","fix":"438"},{"desc":"411","fix":"439"},{"desc":"419","fix":"440"},{"desc":"414","fix":"441"},{"desc":"419","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},"Update the dependencies array to be: [getADocumentFromBase, getADocumentFromExcel, history.location.fromExcel, history.location.state]",{"range":"447","text":"448"},"Update the dependencies array to be: [initialSTate]",{"range":"449","text":"450"},{"range":"451","text":"450"},"Update the dependencies array to be: [initialSTate, options]",{"range":"452","text":"453"},"Update the dependencies array to be: [initialSTate.path, initialSTate.server, state.path, state.server, verification]",{"range":"454","text":"455"},{"range":"456","text":"450"},"Update the dependencies array to be: [initialSTate.server, state.server, verification]",{"range":"457","text":"458"},{"range":"459","text":"453"},{"range":"460","text":"458"},{"range":"461","text":"450"},"Update the dependencies array to be: [initialSTate.name, initialSTate.server, state.name, state.server, verification]",{"range":"462","text":"463"},"Update the dependencies array to be: [informations, setInformations]",{"range":"464","text":"465"},{"range":"466","text":"465"},"Update the dependencies array to be: [options, setOptions, timeOut]",{"range":"467","text":"468"},{"range":"469","text":"465"},{"range":"470","text":"465"},{"range":"471","text":"450"},{"range":"472","text":"458"},{"range":"473","text":"453"},{"range":"474","text":"455"},{"range":"475","text":"453"},{"range":"476","text":"458"},{"range":"477","text":"450"},{"range":"478","text":"458"},{"range":"479","text":"453"},{"range":"480","text":"458"},"Update the dependencies array to be: [initialServer, server, setServerError, verification]",{"range":"481","text":"482"},"Update the dependencies array to be: [verified]",{"range":"483","text":"484"},[3119,3121],"[getADocumentFromBase, getADocumentFromExcel, history.location.fromExcel, history.location.state]",[2366,2368],"[initialSTate]",[1353,1355],[1663,1665],"[initialSTate, options]",[2183,2197],"[initialSTate.path, initialSTate.server, state.path, state.server, verification]",[1980,1982],[2514,2528],"[initialSTate.server, state.server, verification]",[1660,1662],[2192,2206],[1927,1929],[2457,2471],"[initialSTate.name, initialSTate.server, state.name, state.server, verification]",[433,435],"[informations, setInformations]",[472,474],[593,595],"[options, setOptions, timeOut]",[545,547],[496,498],[1534,1536],[1832,1846],[1643,1645],[2172,2186],[1882,1884],[2414,2428],[1639,1641],[1983,1997],[1855,1857],[2367,2381],[543,545],"[initialServer, server, setServerError, verification]",[1536,1538],"[verified]"]