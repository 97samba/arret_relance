{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\client\\\\src\\\\Components\\\\ARCard.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Box, Container, makeStyles, Paper, Card, CardHeader, CardContent } from '@material-ui/core';\nimport { Autorenew, Code, Description, Http, KeyboardArrowRight, SettingsSharp, Storage, Web } from '@material-ui/icons';\nimport Service from './Actions/Service';\nimport Database from './Actions/Database';\nimport Process from './Actions/Process';\nimport ARScript from './Actions/ARScript';\nimport { useEffect, useState } from 'react';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\nimport ActionContext from '../Context/ActionContext';\nimport { v4 as uuid } from \"uuid\";\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport Link from './Actions/Link';\nimport WebAction from './Actions/WebAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardWidth = 850;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // width : cardWidth,\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst ARCard = ({\n  name,\n  actions,\n  SetActions,\n  autoRelance,\n  type,\n  AddServer,\n  generateJson\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  const [index, setIndex] = useState(0);\n\n  const testPing = server => {\n    fetch(`http://localhost:5000/api/PARPRE?server=${server}`).then(res => res.json()).then(result => {\n      console.log(\"error\");\n      return result;\n    });\n  };\n\n  const addAction = type => {\n    const newState = [...actions, {\n      index: index,\n      type: type\n    }];\n    SetActions(newState);\n    setIndex(index + 1);\n  };\n\n  const deleteAction = actionID => {\n    const newState = actions.filter(action => action.index !== actionID);\n    var i;\n\n    for (i = 0; i < newState.length; i++) {\n      newState[i].index = i;\n    }\n\n    setIndex(newState.length);\n    newState.map(action => console.log(action));\n    SetActions(newState);\n    console.log(\"index \", index);\n  };\n\n  const duplicateAction = actionID => {\n    var actionToDuplicateIndex = actions.findIndex(e => e.index === actionID);\n    const clone = actions[actionToDuplicateIndex];\n    console.log(\"action to duplicate\", clone, \"index \", actionToDuplicateIndex);\n    const newClone = { ...clone,\n      index: actionToDuplicateIndex + 1\n    };\n    actionToDuplicateIndex = actionToDuplicateIndex + 1;\n    actions.splice(actionToDuplicateIndex, 0, newClone);\n    SetActions(actions);\n  };\n\n  const saveData = object => {\n    const result = actions.filter(e => e.index === object.index);\n\n    if (result.length > 0) {\n      actions.map(action => console.log(\"id action\", action.index));\n      const index = actions.findIndex(e => e.index === object.index);\n      console.log('Changement', actions[index]);\n      actions.splice(index, 1, object);\n      SetActions(actions);\n    } else {\n      console.log(\"Nouvelle entrée\");\n      const newState = [...actions, object];\n      SetActions(newState);\n    }\n  };\n\n  const iconsAction = [{\n    icon: /*#__PURE__*/_jsxDEV(Http, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this),\n    name: 'Url',\n    action: () => addAction(\"link\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Web, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this),\n    name: 'Action Web',\n    action: () => addAction(\"webAction\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(SettingsSharp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this),\n    name: 'Service',\n    action: () => addAction(\"service\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Autorenew, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this),\n    name: 'Processus',\n    action: () => addAction(\"process\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this),\n    name: 'Script',\n    action: () => addAction(\"script\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Storage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this),\n    name: 'Base de données',\n    action: () => addAction(\"database\")\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: name,\n        subheader: \"hybride\",\n        action: /*#__PURE__*/_jsxDEV(SpeedDial, {\n          ariaLabel: \"SpeedDial\",\n          icon: /*#__PURE__*/_jsxDEV(SpeedDialIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 31\n          }, this),\n          open: open,\n          direction: \"left\",\n          onOpen: () => setOpen(true),\n          onMouseLeave: () => setOpen(false),\n          children: iconsAction.map(action => /*#__PURE__*/_jsxDEV(SpeedDialAction, {\n            icon: action.icon,\n            tooltipTitle: action.name,\n            tooltipPlacement: \"top\",\n            onClick: action.action\n          }, action.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(ActionContext.Provider, {\n          value: {\n            actions,\n            deleteAction,\n            duplicateAction,\n            saveData,\n            testPing,\n            AddServer\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"on\",\n            children: [actions.map(item => item.type === \"service\" ? /*#__PURE__*/_jsxDEV(Service, {\n              index: item.index,\n              type: type\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 65\n            }, this) : item.type === \"script\" ? /*#__PURE__*/_jsxDEV(ARScript, {\n              index: item.index\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 65\n            }, this) : item.type === \"database\" ? /*#__PURE__*/_jsxDEV(Database, {\n              index: item.index,\n              type: type\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 65\n            }, this) : item.type === \"process\" ? /*#__PURE__*/_jsxDEV(Process, {\n              index: item.index,\n              type: type\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 65\n            }, this) : item.type === \"link\" ? /*#__PURE__*/_jsxDEV(Link, {\n              index: item.index\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 65\n            }, this) : item.type === \"webAction\" ? /*#__PURE__*/_jsxDEV(WebAction, {\n              index: item.index\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 65\n            }, this) : null), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\" //onClick={generateJson}\n              ,\n              onClick: generateJson,\n              endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 42\n              }, this),\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ARCard, \"U9AwnnqspVdYBuRJLY7OY0KEBac=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = ARCard;\nexport default ARCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ARCard\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/client/src/Components/ARCard.js"],"names":["Button","Box","Container","makeStyles","Paper","Card","CardHeader","CardContent","Autorenew","Code","Description","Http","KeyboardArrowRight","SettingsSharp","Storage","Web","Service","Database","Process","ARScript","useEffect","useState","SpeedDial","SpeedDialAction","SpeedDialIcon","ActionContext","v4","uuid","useHistory","axios","Link","WebAction","cardWidth","useStyles","theme","root","marginBottom","spacing","ARCard","name","actions","SetActions","autoRelance","type","AddServer","generateJson","classes","history","open","setOpen","index","setIndex","testPing","server","fetch","then","res","json","result","console","log","addAction","newState","deleteAction","actionID","filter","action","i","length","map","duplicateAction","actionToDuplicateIndex","findIndex","e","clone","newClone","splice","saveData","object","iconsAction","icon","item"],"mappings":";;;AAAA,SAASA,MAAT,EAAgBC,GAAhB,EAAsBC,SAAtB,EAAkCC,UAAlC,EAA8CC,KAA9C,EAAqDC,IAArD,EAA2DC,UAA3D,EAAuEC,WAAvE,QAAyF,mBAAzF;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,WAA1B,EAAuCC,IAAvC,EAA6CC,kBAA7C,EAAiEC,aAAjE,EAAgFC,OAAhF,EAAyFC,GAAzF,QAAoG,oBAApG;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,kBAA/C;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,SAAS,GAAG,GAAlB;AACA,MAAMC,SAAS,GAAG9B,UAAU,CAAC+B,KAAK,KAAI;AAClCC,EAAAA,IAAI,EAAC;AACD;AACAC,IAAAA,YAAY,EAAGF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFd;AAD6B,CAAJ,CAAN,CAA5B;;AAMA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAeC,EAAAA,UAAf;AAA0BC,EAAAA,WAA1B;AAAsCC,EAAAA,IAAtC;AAA2CC,EAAAA,SAA3C;AAAqDC,EAAAA;AAArD,CAAD,KAAwE;AAAA;;AACnF,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAMc,OAAO,GAAGnB,UAAU,EAA1B;AACA,QAAM,CAACoB,IAAD,EAAMC,OAAN,IAAiB5B,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAAC6B,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,CAAD,CAAlC;;AAGA,QAAM+B,QAAQ,GAAIC,MAAD,IAAW;AACxBC,IAAAA,KAAK,CAAE,2CAA0CD,MAAO,EAAnD,CAAL,CACKE,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAsB,aAAOF,MAAP;AAAc,KAFzD;AAGH,GAJD;;AAMA,QAAMG,SAAS,GAAIlB,IAAD,IAAS;AACvB,UAAMmB,QAAQ,GAAG,CACb,GAAGtB,OADU,EACF;AACPU,MAAAA,KAAK,EAAGA,KADD;AAEPP,MAAAA,IAAI,EAAGA;AAFA,KADE,CAAjB;AAMAF,IAAAA,UAAU,CAACqB,QAAD,CAAV;AACAX,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACH,GATD;;AAWA,QAAMa,YAAY,GAAEC,QAAD,IAAY;AAE3B,UAAMF,QAAQ,GAAGtB,OAAO,CAACyB,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAAChB,KAAP,KAAiBc,QAA1C,CAAjB;AAEA,QAAIG,CAAJ;;AAEA,SAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGL,QAAQ,CAACM,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAChCL,MAAAA,QAAQ,CAACK,CAAD,CAAR,CAAYjB,KAAZ,GAAoBiB,CAApB;AACH;;AAEDhB,IAAAA,QAAQ,CAACW,QAAQ,CAACM,MAAV,CAAR;AAEAN,IAAAA,QAAQ,CAACO,GAAT,CAAaH,MAAM,IAAIP,OAAO,CAACC,GAAR,CAAYM,MAAZ,CAAvB;AAEAzB,IAAAA,UAAU,CAACqB,QAAD,CAAV;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,KAAtB;AAEH,GAlBD;;AAoBA,QAAMoB,eAAe,GAAEN,QAAD,IAAY;AAE9B,QAAIO,sBAAsB,GAAG/B,OAAO,CAACgC,SAAR,CAAkBC,CAAC,IAAEA,CAAC,CAACvB,KAAF,KAAYc,QAAjC,CAA7B;AACA,UAAMU,KAAK,GAAGlC,OAAO,CAAC+B,sBAAD,CAArB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCc,KAAlC,EAAwC,QAAxC,EAAkDH,sBAAlD;AAEA,UAAMI,QAAQ,GAAG,EAAC,GAAGD,KAAJ;AAAUxB,MAAAA,KAAK,EAACqB,sBAAsB,GAAC;AAAvC,KAAjB;AACAA,IAAAA,sBAAsB,GAACA,sBAAsB,GAAC,CAA9C;AAEA/B,IAAAA,OAAO,CAACoC,MAAR,CAAeL,sBAAf,EAAsC,CAAtC,EAAwCI,QAAxC;AACAlC,IAAAA,UAAU,CAACD,OAAD,CAAV;AAEH,GAZD;;AAcA,QAAMqC,QAAQ,GAAIC,MAAD,IAAW;AAExB,UAAMpB,MAAM,GAAGlB,OAAO,CAACyB,MAAR,CAAeQ,CAAC,IAAIA,CAAC,CAACvB,KAAF,KAAY4B,MAAM,CAAC5B,KAAvC,CAAf;;AAEA,QAAIQ,MAAM,CAACU,MAAP,GAAgB,CAApB,EAAsB;AAElB5B,MAAAA,OAAO,CAAC6B,GAAR,CAAYH,MAAM,IAAIP,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBM,MAAM,CAAChB,KAA/B,CAAtB;AACA,YAAMA,KAAK,GAAGV,OAAO,CAACgC,SAAR,CAAkBC,CAAC,IAAIA,CAAC,CAACvB,KAAF,KAAY4B,MAAM,CAAC5B,KAA1C,CAAd;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBpB,OAAO,CAACU,KAAD,CAAhC;AAEAV,MAAAA,OAAO,CAACoC,MAAR,CAAe1B,KAAf,EAAqB,CAArB,EAAuB4B,MAAvB;AAEArC,MAAAA,UAAU,CAACD,OAAD,CAAV;AAEH,KAXD,MAaA;AACImB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,YAAME,QAAQ,GAAG,CACb,GAAGtB,OADU,EACDsC,MADC,CAAjB;AAGArC,MAAAA,UAAU,CAACqB,QAAD,CAAV;AACH;AAEJ,GAzBD;;AA8BA,QAAMiB,WAAW,GAAG,CAChB;AAACC,IAAAA,IAAI,eAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAkBzC,IAAAA,IAAI,EAAE,KAAxB;AAA+B2B,IAAAA,MAAM,EAAE,MAAML,SAAS,CAAC,MAAD;AAAtD,GADgB,EAEhB;AAACmB,IAAAA,IAAI,eAAG,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAiBzC,IAAAA,IAAI,EAAE,YAAvB;AAAqC2B,IAAAA,MAAM,EAAE,MAAML,SAAS,CAAC,WAAD;AAA5D,GAFgB,EAGhB;AAACmB,IAAAA,IAAI,eAAG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAA2BzC,IAAAA,IAAI,EAAE,SAAjC;AAA4C2B,IAAAA,MAAM,EAAE,MAAML,SAAS,CAAC,SAAD;AAAnE,GAHgB,EAIhB;AAACmB,IAAAA,IAAI,eAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAuBzC,IAAAA,IAAI,EAAE,WAA7B;AAA0C2B,IAAAA,MAAM,EAAE,MAAML,SAAS,CAAC,SAAD;AAAjE,GAJgB,EAKhB;AAACmB,IAAAA,IAAI,eAAG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAyBzC,IAAAA,IAAI,EAAE,QAA/B;AAAyC2B,IAAAA,MAAM,EAAE,MAAML,SAAS,CAAC,QAAD;AAAhE,GALgB,EAMhB;AAACmB,IAAAA,IAAI,eAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAqBzC,IAAAA,IAAI,EAAE,iBAA3B;AAA8C2B,IAAAA,MAAM,EAAE,MAAML,SAAS,CAAC,UAAD;AAArE,GANgB,CAApB;AAUA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAGf,OAAO,CAACX,IAA1B;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,KAAK,EAAEI,IADX;AAEI,QAAA,SAAS,EAAC,SAFd;AAGI,QAAA,MAAM,eACF,QAAC,SAAD;AACA,UAAA,SAAS,EAAC,WADV;AAEA,UAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAFN;AAGA,UAAA,IAAI,EAAGS,IAHP;AAIA,UAAA,SAAS,EAAG,MAJZ;AAKA,UAAA,MAAM,EAAE,MAAMC,OAAO,CAAC,IAAD,CALrB;AAMA,UAAA,YAAY,EAAE,MAAMA,OAAO,CAAC,KAAD,CAN3B;AAAA,oBAQC8B,WAAW,CAACV,GAAZ,CAAiBH,MAAD,iBACb,QAAC,eAAD;AAEI,YAAA,IAAI,EAAIA,MAAM,CAACc,IAFnB;AAGI,YAAA,YAAY,EAAEd,MAAM,CAAC3B,IAHzB;AAII,YAAA,gBAAgB,EAAG,KAJvB;AAKI,YAAA,OAAO,EAAG2B,MAAM,CAACA;AALrB,aACSA,MAAM,CAAC3B,IADhB;AAAA;AAAA;AAAA;AAAA,kBADH;AARD;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cADJ,eA0BI,QAAC,WAAD;AAAA,+BACI,QAAC,aAAD,CAAe,QAAf;AAAwB,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAD;AAAUuB,YAAAA,YAAV;AAAwBO,YAAAA,eAAxB;AAAyCO,YAAAA,QAAzC;AAAmDzB,YAAAA,QAAnD;AAA4DR,YAAAA;AAA5D,WAA/B;AAAA,iCACI;AAAM,YAAA,UAAU,MAAhB;AAAiB,YAAA,YAAY,EAAC,IAA9B;AAAA,uBACKJ,OAAO,CAAC6B,GAAR,CAAYY,IAAI,IAETA,IAAI,CAACtC,IAAL,KAAc,SAAd,gBAA4B,QAAC,OAAD;AAA0B,cAAA,KAAK,EAAEsC,IAAI,CAAC/B,KAAtC;AAA6C,cAAA,IAAI,EAAEP;AAAnD,eAAcsC,IAAI,CAAC/B,KAAnB;AAAA;AAAA;AAAA;AAAA,oBAA5B,GACA+B,IAAI,CAACtC,IAAL,KAAc,QAAd,gBAA4B,QAAC,QAAD;AAA2B,cAAA,KAAK,EAAEsC,IAAI,CAAC/B;AAAvC,eAAe+B,IAAI,CAAC/B,KAApB;AAAA;AAAA;AAAA;AAAA,oBAA5B,GACA+B,IAAI,CAACtC,IAAL,KAAc,UAAd,gBAA4B,QAAC,QAAD;AAA2B,cAAA,KAAK,EAAEsC,IAAI,CAAC/B,KAAvC;AAA8C,cAAA,IAAI,EAAEP;AAApD,eAAesC,IAAI,CAAC/B,KAApB;AAAA;AAAA;AAAA;AAAA,oBAA5B,GACA+B,IAAI,CAACtC,IAAL,KAAc,SAAd,gBAA4B,QAAC,OAAD;AAA2B,cAAA,KAAK,EAAEsC,IAAI,CAAC/B,KAAvC;AAA8C,cAAA,IAAI,EAAEP;AAApD,eAAcsC,IAAI,CAAC/B,KAAnB;AAAA;AAAA;AAAA;AAAA,oBAA5B,GACA+B,IAAI,CAACtC,IAAL,KAAc,MAAd,gBAA4B,QAAC,IAAD;AAAwB,cAAA,KAAK,EAAEsC,IAAI,CAAC/B;AAApC,eAAW+B,IAAI,CAAC/B,KAAhB;AAAA;AAAA;AAAA;AAAA,oBAA5B,GACA+B,IAAI,CAACtC,IAAL,KAAc,WAAd,gBAA4B,QAAC,SAAD;AAA6B,cAAA,KAAK,EAAEsC,IAAI,CAAC/B;AAAzC,eAAgB+B,IAAI,CAAC/B,KAArB;AAAA;AAAA;AAAA;AAAA,oBAA5B,GACA,IARP,CADL,eAYI,QAAC,MAAD;AAEI,cAAA,KAAK,EAAC,WAFV;AAGI,cAAA,OAAO,EAAC,WAHZ,CAII;AAJJ;AAKI,cAAA,OAAO,EAAEL,YALb;AAOI,cAAA,OAAO,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,sBAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0DH,CA5JD;;GAAMP,M;UACcL,S,EACAL,U;;;KAFdU,M;AA8JN,eAAeA,MAAf","sourcesContent":["import { Button,Box,  Container,  makeStyles, Paper, Card, CardHeader, CardContent} from '@material-ui/core'\r\nimport { Autorenew, Code, Description, Http, KeyboardArrowRight, SettingsSharp, Storage, Web } from '@material-ui/icons';\r\nimport Service from './Actions/Service';\r\nimport Database from './Actions/Database';\r\nimport Process from './Actions/Process';\r\nimport ARScript from './Actions/ARScript';\r\nimport { useEffect, useState } from 'react';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial'\r\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\r\nimport ActionContext from '../Context/ActionContext';\r\nimport {v4 as uuid} from \"uuid\";\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\nimport Link from './Actions/Link'\r\nimport WebAction from './Actions/WebAction';\r\n\r\nconst cardWidth = 850\r\nconst useStyles = makeStyles(theme =>({\r\n    root:{\r\n        // width : cardWidth,\r\n        marginBottom : theme.spacing(2) \r\n    }\r\n}))\r\nconst ARCard = ({name, actions,SetActions,autoRelance,type,AddServer,generateJson}) => {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const [open,setOpen] = useState(false)\r\n    const [index, setIndex] = useState(0)\r\n\r\n\r\n    const testPing = (server) =>{\r\n        fetch(`http://localhost:5000/api/PARPRE?server=${server}`)\r\n            .then(res => res.json())\r\n            .then(result => {console.log(\"error\"); return result})\r\n    }\r\n\r\n    const addAction = (type) =>{\r\n        const newState = [\r\n            ...actions,{\r\n                index : index,\r\n                type : type\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        setIndex(index+1)\r\n    }\r\n    \r\n    const deleteAction=(actionID)=>{\r\n\r\n        const newState = actions.filter(action => action.index !== actionID)\r\n        \r\n        var i ;\r\n\r\n        for(i = 0; i < newState.length; i++){\r\n            newState[i].index = i;\r\n        }\r\n\r\n        setIndex(newState.length )\r\n\r\n        newState.map(action => console.log(action))\r\n\r\n        SetActions(newState)\r\n\r\n        console.log(\"index \", index)\r\n\r\n    }\r\n\r\n    const duplicateAction=(actionID)=>{\r\n\r\n        var actionToDuplicateIndex = actions.findIndex(e=>e.index === actionID)\r\n        const clone = actions[actionToDuplicateIndex]\r\n        console.log(\"action to duplicate\",clone,\"index \", actionToDuplicateIndex)\r\n\r\n        const newClone = {...clone,index:actionToDuplicateIndex+1}\r\n        actionToDuplicateIndex=actionToDuplicateIndex+1\r\n        \r\n        actions.splice(actionToDuplicateIndex,0,newClone)\r\n        SetActions(actions)\r\n\r\n    }\r\n\r\n    const saveData = (object) =>{\r\n        \r\n        const result = actions.filter(e => e.index === object.index)\r\n\r\n        if (result.length > 0){\r\n\r\n            actions.map(action => console.log(\"id action\",action.index))\r\n            const index = actions.findIndex(e => e.index === object.index )\r\n            \r\n            console.log('Changement',actions[index])\r\n\r\n            actions.splice(index,1,object)\r\n\r\n            SetActions(actions)  \r\n          \r\n        }\r\n        else\r\n        {\r\n            console.log(\"Nouvelle entrée\")\r\n            const newState = [\r\n                ...actions, object\r\n            ]\r\n            SetActions(newState) \r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    const iconsAction = [\r\n        {icon : <Http />, name: 'Url', action: () => addAction(\"link\")}, \r\n        {icon : <Web />, name: 'Action Web', action: () => addAction(\"webAction\")}, \r\n        {icon : <SettingsSharp />, name: 'Service', action: () => addAction(\"service\")},\r\n        {icon : <Autorenew />, name: 'Processus', action: () => addAction(\"process\")},\r\n        {icon : <Description />, name: 'Script', action: () => addAction(\"script\")},\r\n        {icon : <Storage />, name: 'Base de données', action: () => addAction(\"database\")}\r\n        \r\n    ]\r\n\r\n    return ( \r\n        <Container>\r\n            <Card className= {classes.root}>\r\n                <CardHeader \r\n                    title={name}\r\n                    subheader=\"hybride\"\r\n                    action={\r\n                        <SpeedDial\r\n                        ariaLabel=\"SpeedDial\"\r\n                        icon={<SpeedDialIcon />}\r\n                        open={ open }\r\n                        direction = 'left'\r\n                        onOpen={() => setOpen(true)}\r\n                        onMouseLeave={() => setOpen(false)}\r\n                        >\r\n                        {iconsAction.map((action) => (\r\n                            <SpeedDialAction \r\n                                key={action.name}\r\n                                icon = {action.icon}\r\n                                tooltipTitle={action.name}\r\n                                tooltipPlacement = 'top'\r\n                                onClick= {action.action}\r\n                            />\r\n                        ))}\r\n                    </SpeedDial>\r\n                    }\r\n                />\r\n\r\n                <CardContent>\r\n                    <ActionContext.Provider value={{actions, deleteAction, duplicateAction, saveData, testPing,AddServer}}>\r\n                        <form noValidate autoComplete='on'>\r\n                            {actions.map(item => (\r\n                                (\r\n                                    item.type === \"service\" ?   <Service key={item.index} index={item.index} type={type} /> :\r\n                                    item.type === \"script\"  ?   <ARScript key={item.index} index={item.index} /> :\r\n                                    item.type === \"database\"?   <Database key={item.index} index={item.index} type={type}/> :\r\n                                    item.type === \"process\" ?   <Process key={item.index}  index={item.index} type={type} /> :\r\n                                    item.type === \"link\" ?      <Link key={item.index}  index={item.index} /> :\r\n                                    item.type === \"webAction\" ? <WebAction key={item.index}  index={item.index} /> :\r\n                                    null\r\n                                )\r\n                            ))}\r\n                            <Button\r\n                                \r\n                                color=\"secondary\" \r\n                                variant=\"contained\"\r\n                                //onClick={generateJson}\r\n                                onClick={generateJson}\r\n                                \r\n                                endIcon={<KeyboardArrowRight />}>\r\n                                Generate\r\n                            </Button>\r\n                        </form>\r\n                    </ActionContext.Provider>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n     ); \r\n}\r\n \r\nexport default ARCard;\r\n"]},"metadata":{},"sourceType":"module"}