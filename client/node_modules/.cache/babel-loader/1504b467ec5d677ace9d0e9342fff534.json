{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\src\\\\Components\\\\ARCard.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, CardContent, CardHeader, makeStyles, Typography } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport Service from './Actions/Service';\nimport ARScript from './Actions/ARScript';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardWidth = 950;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: cardWidth,\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst ARCard = ({\n  name\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [actions, SetAction] = useState();\n  const datas = [{\n    type: \"service\",\n    action: \"stop\"\n  }, {\n    type: \"script\",\n    path: \"c:/temp/test.bat\"\n  }];\n\n  const handleSubmit = action => {\n    datas.Add(action);\n    SetAction(datas);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: name,\n        subheader: \"sequence\",\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          disableElevation: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \" Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: datas.map(item => {\n          if (item.type === \"service\") {\n            /*#__PURE__*/\n            _jsxDEV(Service, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this);\n          }\n\n          if (item.type === \"script\") {\n            /*#__PURE__*/\n            _jsxDEV(ARScript, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ARCard, \"IhpnZhy9T34Zab3W5v4lDDuJ7rI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ARCard;\nexport default ARCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ARCard\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/src/Components/ARCard.js"],"names":["Button","Card","CardContent","CardHeader","makeStyles","Typography","Add","Service","ARScript","useState","cardWidth","useStyles","theme","root","width","marginBottom","spacing","ARCard","name","classes","actions","SetAction","datas","type","action","path","handleSubmit","map","item"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,EAAoCC,UAApC,EAAiDC,UAAjD,EAA6DC,UAA7D,QAA8E,mBAA9E;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,SAAS,GAAG,GAAlB;AACA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,KAAK,KAAI;AAClCC,EAAAA,IAAI,EAAC;AACDC,IAAAA,KAAK,EAAGJ,SADP;AAEDK,IAAAA,YAAY,EAAGH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFd;AAD6B,CAAJ,CAAN,CAA5B;;AAMA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACvB,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,OAAD,EAAUC,SAAV,IAAuBZ,QAAQ,EAArC;AACA,QAAMa,KAAK,GAAG,CACV;AACIC,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,MAAM,EAAE;AAFZ,GADU,EAKV;AACID,IAAAA,IAAI,EAAE,QADV;AAEIE,IAAAA,IAAI,EAAG;AAFX,GALU,CAAd;;AAUA,QAAMC,YAAY,GAAIF,MAAD,IAAW;AAC5BF,IAAAA,KAAK,CAAChB,GAAN,CAAUkB,MAAV;AACAH,IAAAA,SAAS,CAACC,KAAD,CAAT;AACH,GAHD;;AAIA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAGH,OAAO,CAACN,IAA1B;AAAA,8BACI,QAAC,UAAD;AACA,QAAA,KAAK,EAAIK,IADT;AAEA,QAAA,SAAS,EAAG,UAFZ;AAGA,QAAA,MAAM,eACF,QAAC,MAAD;AACA,UAAA,KAAK,EAAC,SADN;AAEA,UAAA,OAAO,EAAC,WAFR;AAGA,UAAA,gBAAgB,MAHhB;AAIA,UAAA,QAAQ,EAAEQ,YAJV;AAAA,kCAMI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI,QAAC,WAAD;AAAA,kBACSJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACf,cAAGA,IAAI,CAACL,IAAL,KAAc,SAAjB,EAA2B;AACvB;AAAA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AACH;;AACD,cAAGK,IAAI,CAACL,IAAL,KAAc,QAAjB,EAA0B;AACtB;AAAA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AACH;AACJ,SAPA;AADT;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAjDD;;GAAMN,M;UACcN,S;;;KADdM,M;AAmDN,eAAeA,MAAf","sourcesContent":["import { Button, Card, CardContent, CardHeader,  makeStyles, Typography} from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons';\r\nimport Service from './Actions/Service';\r\nimport ARScript from './Actions/ARScript';\r\nimport { useState } from 'react';\r\n\r\nconst cardWidth = 950\r\nconst useStyles = makeStyles(theme =>({\r\n    root:{\r\n        width : cardWidth,\r\n        marginBottom : theme.spacing(2) \r\n    }\r\n}))\r\nconst ARCard = ({name}) => {\r\n    const classes = useStyles();\r\n    const [actions, SetAction] = useState()\r\n    const datas = [\r\n        {\r\n            type: \"service\",\r\n            action: \"stop\" \r\n        },\r\n        {\r\n            type: \"script\",\r\n            path : \"c:/temp/test.bat\"\r\n        }\r\n    ]\r\n    const handleSubmit = (action) =>{\r\n        datas.Add(action)\r\n        SetAction(datas)\r\n    }\r\n    return ( \r\n        <div>\r\n            <Card className= {classes.root}>\r\n                <CardHeader \r\n                title = {name}\r\n                subheader = 'sequence'\r\n                action = {\r\n                    <Button \r\n                    color='primary' \r\n                    variant='contained'\r\n                    disableElevation\r\n                    onSubmit={handleSubmit}\r\n                    >\r\n                        <Add />\r\n                        <Typography> Action</Typography>\r\n                    </Button>\r\n                }\r\n                />\r\n                <CardContent>\r\n                        {datas.map(item => {\r\n                            if(item.type === \"service\"){\r\n                                <Service />\r\n                            }\r\n                            if(item.type === \"script\"){\r\n                                <ARScript />\r\n                            }\r\n                        })}\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ARCard;"]},"metadata":{},"sourceType":"module"}