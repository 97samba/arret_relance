{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\client\\\\src\\\\Components\\\\ARCard.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Box, Container, makeStyles, Paper, Card, CardHeader, CardContent } from '@material-ui/core';\nimport { Code, Description, Http, KeyboardArrowRight, SettingsSharp, Storage, Web } from '@material-ui/icons';\nimport Service from './Actions/Service';\nimport Database from './Actions/Database';\nimport Command from './Actions/Command';\nimport ARScript from './Actions/ARScript';\nimport { useEffect, useState } from 'react';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\nimport ActionContext from '../Context/ActionContext';\nimport { v4 as uuid } from \"uuid\";\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport Link from './Actions/Link';\nimport WebAction from './Actions/WebAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardWidth = 850;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: cardWidth,\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst ARCard = ({\n  name\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [actions, SetActions] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [StopActions, setStopActions] = useState([]);\n  const [StartActions, setStartActions] = useState([]);\n  useEffect(() => {//fetch(\"http://localhost:8000/Actions\")\n    //.then(res => res.json())\n    //.then(data => SetActions(data))\n  }, []);\n\n  const testPing = server => {\n    fetch(`http://localhost:5000/api/PARPRE?server=${server}`).then(res => res.json()).then(result => {\n      console.log(\"error\");\n      return result;\n    });\n  };\n\n  const addAction = type => {\n    const newState = [...actions, {\n      index: index,\n      type: type\n    }];\n    SetActions(newState);\n    setIndex(index + 1);\n  };\n\n  const AddScript = () => {\n    const newState = [...actions, {\n      index: index,\n      id: uuid(),\n      type: 'script'\n    }];\n    SetActions(newState);\n    setIndex(index + 1);\n  };\n\n  const AddDB = () => {\n    const newState = [...actions, {\n      index: index,\n      id: uuid(),\n      type: 'database'\n    }];\n    SetActions(newState);\n    setIndex(index + 1);\n  };\n\n  const AddCommand = () => {\n    console.log(\"cmd\");\n    const newState = [...actions, {\n      index: index,\n      id: uuid(),\n      type: 'command'\n    }];\n    SetActions(newState);\n    setIndex(index + 1);\n  };\n\n  const AddService = () => {\n    const newState = [...actions, {\n      index: index,\n      id: uuid(),\n      type: 'service'\n    }];\n    SetActions(newState);\n    setIndex(index + 1); //console.log(actions)\n\n    {\n      /* \r\n         fetch('http://localhost:8000/Actions',{\r\n         method: 'POST',\r\n         headers:{\"Content-type\": \"application/json\"},\r\n         body: JSON.stringify(action)\r\n      })\r\n      */\n    }\n  };\n\n  const AddUrl = () => {\n    const newState = [...actions, {\n      index: index,\n      id: uuid(),\n      type: 'link'\n    }];\n    SetActions(newState);\n    setIndex(index + 1);\n  };\n\n  const AddWebAction = () => {\n    const newState = [...actions, {\n      index: index,\n      id: uuid(),\n      type: 'webAction'\n    }];\n    SetActions(newState);\n    setIndex(index + 1);\n  };\n\n  const deleteAction = actionID => {\n    const newState = actions.filter(action => action.id !== actionID);\n    console.log(actionID, actions, newState);\n    SetActions(newState);\n  };\n\n  const duplicateAction = actionID => {\n    var actionToDuplicateIndex = actions.findIndex(e => e.id === actionID);\n    const clone = actions[actionToDuplicateIndex];\n    const newClone = { ...clone,\n      id: uuid()\n    };\n    actionToDuplicateIndex = actionToDuplicateIndex + 1;\n    actions.splice(actionToDuplicateIndex, 0, newClone);\n    SetActions(actions);\n  };\n\n  const saveData = object => {\n    const result = Object.values(StopActions).filter(e => e.index === object.index);\n\n    if (result.length > 0) {\n      const index = StopActions.findIndex(e => e.id === object.index);\n      console.log('Changement', StopActions[index]);\n      StopActions.splice(index, 1, object); //console.log(\"datas : \", StopActions)\n\n      setStopActions(StopActions);\n    } else {\n      console.log(\"Nouvelle entrée\");\n      const newState = [...StopActions, object];\n      setStopActions(newState);\n    }\n  };\n\n  const saveServiceState = object => {};\n\n  const saveWebAction = object => {};\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const generateJson = async () => {\n    var currentDate = new Date();\n    const parpre = {\n      name: \"ARES\",\n      auteur: \"Samba NDIAYE\",\n      date_de_creation: new Date().toLocaleString(),\n      Arret: StopActions\n    };\n    axios.post(`http://localhost:5000/api/PARPRE/test`, parpre).then(res => console.log(res));\n    console.log(JSON.stringify(parpre));\n  };\n\n  const iconsAction = [{\n    icon: /*#__PURE__*/_jsxDEV(Http, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }, this),\n    name: 'Url',\n    action: () => addAction(\"url\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Web, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }, this),\n    name: 'Action Web',\n    action: AddWebAction\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(SettingsSharp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this),\n    name: 'Service',\n    action: AddService\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Code, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this),\n    name: 'Commande',\n    action: AddCommand\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }, this),\n    name: 'Script',\n    action: AddScript\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Storage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }, this),\n    name: 'Base de données',\n    action: AddDB\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"Arr\\xEAt\",\n        subheader: \"hybride\",\n        action: /*#__PURE__*/_jsxDEV(SpeedDial, {\n          ariaLabel: \"SpeedDial\",\n          icon: /*#__PURE__*/_jsxDEV(SpeedDialIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 31\n          }, this),\n          open: open,\n          direction: \"left\",\n          onOpen: handleOpen,\n          onMouseLeave: handleClose,\n          children: iconsAction.map(action => /*#__PURE__*/_jsxDEV(SpeedDialAction, {\n            icon: action.icon,\n            tooltipTitle: action.name,\n            tooltipPlacement: \"top\",\n            onClick: action.action\n          }, action.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(ActionContext.Provider, {\n          value: {\n            actions,\n            deleteAction,\n            duplicateAction,\n            saveData,\n            testPing\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"on\",\n            children: [actions.map(item => item.type === \"service\" ? /*#__PURE__*/_jsxDEV(Service, {\n              actionID: item.id,\n              index: item.index\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 65\n            }, this) : item.type === \"script\" ? /*#__PURE__*/_jsxDEV(ARScript, {\n              actionID: item.id,\n              index: item.index\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 66\n            }, this) : item.type === \"database\" ? /*#__PURE__*/_jsxDEV(Database, {\n              actionID: item.id,\n              index: item.index\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 64\n            }, this) : item.type === \"command\" ? /*#__PURE__*/_jsxDEV(Command, {\n              actionID: item.id,\n              index: item.index\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 65\n            }, this) : item.type === \"link\" ? /*#__PURE__*/_jsxDEV(Link, {\n              actionID: item.id,\n              index: item.index\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 65\n            }, this) : item.type === \"webAction\" ? /*#__PURE__*/_jsxDEV(WebAction, {\n              actionID: item.id,\n              index: item.index\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 70\n            }, this) : null), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\" //onClick={generateJson}\n              ,\n              onClick: generateJson,\n              endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 42\n              }, this),\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ARCard, \"SQLsh9sjCwbDEXaPLApk/PaVfCE=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = ARCard;\nexport default ARCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ARCard\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/client/src/Components/ARCard.js"],"names":["Button","Box","Container","makeStyles","Paper","Card","CardHeader","CardContent","Code","Description","Http","KeyboardArrowRight","SettingsSharp","Storage","Web","Service","Database","Command","ARScript","useEffect","useState","SpeedDial","SpeedDialAction","SpeedDialIcon","ActionContext","v4","uuid","useHistory","axios","Link","WebAction","cardWidth","useStyles","theme","root","width","marginBottom","spacing","ARCard","name","classes","history","actions","SetActions","open","setOpen","index","setIndex","StopActions","setStopActions","StartActions","setStartActions","testPing","server","fetch","then","res","json","result","console","log","addAction","type","newState","AddScript","id","AddDB","AddCommand","AddService","AddUrl","AddWebAction","deleteAction","actionID","filter","action","duplicateAction","actionToDuplicateIndex","findIndex","e","clone","newClone","splice","saveData","object","Object","values","length","saveServiceState","saveWebAction","handleClose","handleOpen","generateJson","currentDate","Date","parpre","auteur","date_de_creation","toLocaleString","Arret","post","JSON","stringify","iconsAction","icon","map","item"],"mappings":"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","sourcesContent":["import { Button,Box,  Container,  makeStyles, Paper, Card, CardHeader, CardContent} from '@material-ui/core'\r\nimport { Code, Description, Http, KeyboardArrowRight, SettingsSharp, Storage, Web } from '@material-ui/icons';\r\nimport Service from './Actions/Service';\r\nimport Database from './Actions/Database';\r\nimport Command from './Actions/Command';\r\nimport ARScript from './Actions/ARScript';\r\nimport { useEffect, useState } from 'react';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial'\r\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\r\nimport ActionContext from '../Context/ActionContext';\r\nimport {v4 as uuid} from \"uuid\";\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\nimport Link from './Actions/Link'\r\nimport WebAction from './Actions/WebAction';\r\n\r\nconst cardWidth = 850\r\nconst useStyles = makeStyles(theme =>({\r\n    root:{\r\n        width : cardWidth,\r\n        marginBottom : theme.spacing(2) \r\n    }\r\n}))\r\nconst ARCard = ({name}) => {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const [actions, SetActions] = useState([])\r\n    const [open,setOpen] = useState(false)\r\n    const [index, setIndex] = useState(0)\r\n    const [StopActions, setStopActions] = useState([])\r\n    const [StartActions, setStartActions] = useState([])\r\n\r\n\r\n    useEffect(() =>{\r\n        //fetch(\"http://localhost:8000/Actions\")\r\n        //.then(res => res.json())\r\n        //.then(data => SetActions(data))\r\n    },[])\r\n\r\n    const testPing = (server) =>{\r\n        fetch(`http://localhost:5000/api/PARPRE?server=${server}`)\r\n            .then(res => res.json())\r\n            .then(result => {console.log(\"error\"); return result})\r\n    }\r\n\r\n    const addAction = (type) =>{\r\n        const newState = [\r\n            ...actions,{\r\n                index : index,\r\n                type : type\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        setIndex(index+1)\r\n    }\r\n    const AddScript = () =>{\r\n        const newState = [\r\n            ...actions,{\r\n                index:index,\r\n                id: uuid(),\r\n                type:'script'\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        setIndex(index+1)\r\n    }\r\n    const AddDB = () =>{\r\n        const newState = [\r\n            ...actions,{\r\n                index:index,\r\n                id: uuid(),\r\n                type:'database'\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        setIndex(index+1)\r\n    }\r\n    const AddCommand = () =>{\r\n        console.log(\"cmd\")\r\n        const newState = [\r\n            ...actions,{\r\n                index:index,\r\n                id: uuid(),\r\n                type:'command'\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        setIndex(index+1)\r\n\r\n\r\n    }\r\n    const AddService = () =>{\r\n        \r\n        const newState = [\r\n            ...actions,{\r\n                index:index,\r\n                id: uuid(),\r\n                type:'service'\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        setIndex(index+1)\r\n        //console.log(actions)\r\n\r\n        {/* \r\n            fetch('http://localhost:8000/Actions',{\r\n            method: 'POST',\r\n            headers:{\"Content-type\": \"application/json\"},\r\n            body: JSON.stringify(action)\r\n        })\r\n        */}\r\n    }\r\nconst AddUrl = () =>{\r\n    const newState = [\r\n        ...actions,{\r\n            index:index,\r\n            id: uuid(),\r\n            type:'link'\r\n        }\r\n    ]\r\n    SetActions(newState)\r\n    setIndex(index+1)\r\n}\r\n\r\nconst AddWebAction = () =>{\r\n    const newState = [\r\n        ...actions,{\r\n            index:index,\r\n            id: uuid(),\r\n            type:'webAction'\r\n        }\r\n    ]\r\n    SetActions(newState)\r\n    setIndex(index+1)\r\n}\r\n\r\n    const deleteAction=(actionID)=>{\r\n\r\n        const newState = actions.filter(action => action.id !== actionID)\r\n\r\n        console.log(actionID, actions, newState)\r\n\r\n        SetActions(newState)\r\n    }\r\n    const duplicateAction=(actionID)=>{\r\n        var actionToDuplicateIndex = actions.findIndex(e=>e.id === actionID)\r\n        const clone = actions[actionToDuplicateIndex]\r\n        const newClone = {...clone,id:uuid()}\r\n        actionToDuplicateIndex=actionToDuplicateIndex+1\r\n        \r\n        actions.splice(actionToDuplicateIndex,0,newClone)\r\n        SetActions(actions)\r\n\r\n    }\r\n    const saveData = (object) =>{\r\n        const result = Object.values(StopActions).filter(e => e.index === object.index)\r\n\r\n        if (result.length > 0){\r\n\r\n            const index = StopActions.findIndex(e => e.id === object.index )\r\n\r\n            console.log('Changement',StopActions[index])\r\n\r\n            StopActions.splice(index,1,object)\r\n            //console.log(\"datas : \", StopActions)\r\n\r\n            setStopActions(StopActions)            \r\n        }\r\n        else\r\n        {\r\n            console.log(\"Nouvelle entrée\")\r\n            const newState = [\r\n                ...StopActions, object\r\n            ]\r\n            setStopActions(newState) \r\n\r\n        }\r\n        \r\n    }\r\n    const saveServiceState= (object) =>{\r\n        \r\n    }\r\n\r\n    const saveWebAction = (object) =>{\r\n\r\n    }\r\n\r\n\r\n    const handleClose=() =>{\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleOpen=() =>{\r\n        setOpen(true)\r\n    }\r\n\r\n    const generateJson = async () => {\r\n        var currentDate = new Date()\r\n        const parpre = {name : \"ARES\",auteur: \"Samba NDIAYE\", date_de_creation : new Date().toLocaleString(), Arret : StopActions}\r\n\r\n        axios.post(`http://localhost:5000/api/PARPRE/test`, parpre)\r\n            .then(res => console.log(res))\r\n            \r\n        console.log(JSON.stringify(parpre))\r\n    }\r\n    const iconsAction = [\r\n        {icon : <Http />, name: 'Url', action: () => addAction(\"url\")}, \r\n        {icon : <Web />, name: 'Action Web', action: AddWebAction}, \r\n        {icon : <SettingsSharp />, name: 'Service', action: AddService},\r\n        {icon : <Code />, name: 'Commande', action: AddCommand},\r\n        {icon : <Description />, name: 'Script', action: AddScript},\r\n        {icon : <Storage />, name: 'Base de données', action: AddDB}\r\n        \r\n    ]\r\n    return ( \r\n        <Container>\r\n            <Card className= {classes.root}>\r\n                <CardHeader \r\n                    title=\"Arrêt\"\r\n                    subheader=\"hybride\"\r\n                    action={\r\n                        <SpeedDial\r\n                        ariaLabel=\"SpeedDial\"\r\n                        icon={<SpeedDialIcon />}\r\n                        open={ open }\r\n                        direction = 'left'\r\n                        onOpen={handleOpen}\r\n                        onMouseLeave={handleClose}\r\n                        >\r\n                        {iconsAction.map((action) => (\r\n                            <SpeedDialAction \r\n                                key={action.name}\r\n                                icon = {action.icon}\r\n                                tooltipTitle={action.name}\r\n                                tooltipPlacement = 'top'\r\n                                onClick= {action.action}\r\n                            />\r\n                        ))}\r\n                    </SpeedDial>\r\n                    }\r\n                />\r\n\r\n                <CardContent>\r\n                    <ActionContext.Provider value={{actions, deleteAction, duplicateAction, saveData, testPing}}>\r\n                        <form noValidate autoComplete='on'>\r\n                            {actions.map(item => (\r\n                                (\r\n                                    item.type === \"service\" ?   <Service key={item.id} actionID={item.id} index={item.index}/> :\r\n                                    item.type === \"script\"  ?    <ARScript key={item.id} actionID={item.id} index={item.index} /> :\r\n                                    item.type === \"database\"?  <Database key={item.id} actionID={item.id} index={item.index}/> :\r\n                                    item.type === \"command\" ?   <Command key={item.id} actionID={item.id} index={item.index} /> :\r\n                                    item.type === \"link\" ?      <Link key={item.id} actionID={item.id} index={item.index} /> :\r\n                                    item.type === \"webAction\" ?      <WebAction key={item.id} actionID={item.id} index={item.index} /> :\r\n                                    null\r\n                                )\r\n                            ))}\r\n                            <Button\r\n                                \r\n                                color=\"secondary\" \r\n                                variant=\"contained\"\r\n                                //onClick={generateJson}\r\n                                onClick={generateJson}\r\n                                \r\n                                endIcon={<KeyboardArrowRight />}>\r\n                                Generate\r\n                            </Button>\r\n                        </form>\r\n                    </ActionContext.Provider>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n     ); \r\n}\r\n \r\nexport default ARCard;\r\n"]},"metadata":{},"sourceType":"module"}