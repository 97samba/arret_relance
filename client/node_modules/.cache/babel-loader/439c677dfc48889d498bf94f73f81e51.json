{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\client\\\\src\\\\Components\\\\Actions\\\\Service.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Chip, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core';\nimport { Comment, Delete, FileCopy, MoreVert, SettingsSharp } from \"@material-ui/icons\";\nimport { useContext, useState } from \"react\";\nimport ActionContext from \"../../Context/ActionContext\";\nimport OptionMenu from \"../Creation/OptionMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#F6F6FB',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  fields: {\n    //marginRight:theme.spacing(2),\n    width: \"100%\"\n  },\n  smallAvatar: {\n    width: theme.spacing(2.5),\n    height: theme.spacing(2.5)\n  }\n}));\n\nconst Service = ({\n  index,\n  type\n}) => {\n  _s();\n\n  //css\n  const classes = useStyles();\n  const [action, setAction] = useState('STOP'); //létat du composant\n\n  const [state, setState] = useState({}); //l'état du server\n\n  const [pingState, setPingState] = useState(\"ko\");\n  const [status, setStatus] = useState(type);\n  const [OS, SetOS] = useState(\"\"); //context pour sauvegarder l'état dans le parent\n\n  const {\n    deleteAction,\n    duplicateAction,\n    saveData,\n    test,\n    AddServer\n  } = useContext(ActionContext);\n\n  const handleClick = event => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchor(null);\n  };\n\n  const saveInformations = () => {\n    if (state.service === undefined || state.server === undefined) {\n      return;\n    }\n\n    saveData({\n      index: index,\n      type: \"service\",\n      server: state.server,\n      name: state.service,\n      action: status\n    });\n  }; //test si le service existe\n\n\n  const testService = async service => {\n    if (state.server === null || pingState === \"ko\") {\n      return;\n    }\n\n    console.log(\"Testing service : \", service, \"server \", state.server);\n    fetch(`http://localhost:5000/api/PARPRE/service?name=${service}&server=${state.server}`).then(res => res.json()).then(result => console.log(result)); //.then(() => saveInformations())\n  }; //Fait un ping\n\n\n  const testPing = async server => {\n    await fetch(`http://localhost:5000/api/PARPRE?server=${server}`).then(res => res.json()).then(result => {\n      setPingState(result);\n      console.log(result.state); //saveInformations()\n\n      if (result.state === \"ok\") {}\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          container: true,\n          alignContent: \"center\",\n          direction: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(SettingsSharp, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            id: \"server\",\n            color: \"primary\",\n            label: \"Serveur\",\n            onChange: e => setState({ ...state,\n              server: e.target.value\n            }),\n            onBlur: e => {\n              testPing(e.target.value);\n              saveInformations();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.fields,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              value: status,\n              onChange: e => setStatus(e.target.value),\n              onBlur: () => saveInformations(),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"stop\",\n                children: \"Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"start\",\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"status\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xl: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"false\",\n            className: classes.fields,\n            id: \"serviceName\",\n            color: \"primary\",\n            label: \"Service\",\n            onChange: e => setState({ ...state,\n              service: e.target.value\n            }),\n            onBlur: e => saveInformations() //testService(e.target.value)\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(OptionMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleClick,\n                children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                my: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: classes.smallAvatar,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Service, \"vWoHfqrNto0EW6vbPsKmz1gVS+Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = Service;\nexport default Service;\n\nvar _c;\n\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/client/src/Components/Actions/Service.js"],"names":["Avatar","Box","Chip","FormControl","Grid","IconButton","InputLabel","Menu","MenuItem","Paper","Select","TextField","Typography","makeStyles","Comment","Delete","FileCopy","MoreVert","SettingsSharp","useContext","useState","ActionContext","OptionMenu","useStyles","theme","root","background","padding","spacing","marginBottom","fields","width","smallAvatar","height","Service","index","type","classes","action","setAction","state","setState","pingState","setPingState","status","setStatus","OS","SetOS","deleteAction","duplicateAction","saveData","test","AddServer","handleClick","event","setAnchor","currentTarget","handleClose","saveInformations","service","undefined","server","name","testService","console","log","fetch","then","res","json","result","testPing","e","target","value"],"mappings":"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","sourcesContent":["import { Avatar, Box, Chip, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\"\r\nimport {makeStyles} from '@material-ui/core'\r\nimport { Comment, Delete, FileCopy, MoreVert, SettingsSharp } from \"@material-ui/icons\"\r\nimport { useContext, useState } from \"react\"\r\nimport ActionContext from \"../../Context/ActionContext\"\r\nimport OptionMenu from \"../Creation/OptionMenu\"\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        background:'#F6F6FB',\r\n        padding: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n\r\n    },\r\n    fields:{\r\n        //marginRight:theme.spacing(2),\r\n        width:\"100%\" \r\n    },\r\n    smallAvatar: {\r\n      width: theme.spacing(2.5),\r\n      height: theme.spacing(2.5)\r\n    }\r\n}))\r\nconst Service = ({index,type}) => {\r\n    //css\r\n    const classes = useStyles()\r\n\r\n    const [action, setAction] = useState('STOP')\r\n    //létat du composant\r\n    const [state, setState] = useState({})\r\n    //l'état du server\r\n    const [pingState, setPingState] = useState(\"ko\")\r\n    const [status, setStatus] = useState(type)\r\n    const [OS, SetOS] = useState(\"\")\r\n\r\n\r\n    //context pour sauvegarder l'état dans le parent\r\n    const { deleteAction, duplicateAction,saveData,test,AddServer} = useContext(ActionContext)\r\n\r\n    const handleClick = (event) =>{\r\n        setAnchor(event.currentTarget)\r\n    }\r\n    const handleClose= () => {\r\n        setAnchor(null)\r\n    }\r\n\r\n    const saveInformations = () =>{\r\n        if(state.service ===undefined || state.server === undefined){return}\r\n        saveData(\r\n            {\r\n                index:index, type:\"service\", server : state.server , name : state.service,action : status\r\n            }\r\n        )\r\n    }\r\n    //test si le service existe\r\n    const testService = async(service)=>{\r\n\r\n        if(state.server === null || pingState === \"ko\"){return}\r\n\r\n        console.log(\"Testing service : \",service,\"server \",state.server)\r\n        fetch(`http://localhost:5000/api/PARPRE/service?name=${service}&server=${state.server}`)\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            //.then(() => saveInformations())\r\n    }\r\n    //Fait un ping\r\n    const testPing = async (server) =>{\r\n        \r\n        \r\n        await fetch(`http://localhost:5000/api/PARPRE?server=${server}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setPingState(result)\r\n                console.log(result.state)\r\n                //saveInformations()\r\n\r\n                if(result.state === \"ok\"){\r\n                    \r\n                } \r\n            \r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    return ( \r\n        <div>\r\n            <Paper \r\n                elevation={0}\r\n                className= {classes.root}>\r\n                <Grid \r\n                    container\r\n                    spacing={2}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item md={1} xl={1} container alignContent=\"center\" direction=\"column\" >\r\n                        <Box  display=\"flex\" justifyContent=\"center\">\r\n                            <SettingsSharp color=\"primary\" />\r\n                        </Box>\r\n                        \r\n                        \r\n                    </Grid>\r\n                    <Grid item md={2} xl={2}>\r\n                        <TextField                        \r\n                        className={classes.fields} \r\n                        id='server'                        \r\n                        color='primary'\r\n                        label= 'Serveur'            \r\n                        onChange={(e) => setState({...state, server:e.target.value})}\r\n                        onBlur={(e) => {\r\n                            testPing(e.target.value)\r\n                            saveInformations()\r\n\r\n                            }\r\n                        }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={2} xl={2}>\r\n                    <FormControl className={classes.fields}>\r\n                        <InputLabel>Action</InputLabel>\r\n                        <Select \r\n                        fullWidth \r\n                        value={status} \r\n                        onChange={(e) => setStatus(e.target.value)} onBlur={() => saveInformations()}\r\n                        \r\n                        >\r\n\r\n                            <MenuItem value=\"stop\">Stop</MenuItem>\r\n                            <MenuItem value=\"start\">Start</MenuItem>\r\n                            <MenuItem value=\"status\" >Status</MenuItem>                            \r\n                        </Select>\r\n                    </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={6} xl={6}>\r\n                        <TextField \r\n                        autoComplete=\"false\"\r\n                        className={classes.fields} \r\n                        id='serviceName'\r\n                        color='primary'\r\n                        label= 'Service'\r\n                        onChange={(e) => setState({...state, service:e.target.value})}\r\n                        onBlur={(e) => saveInformations() }\r\n                         //testService(e.target.value)\r\n\r\n                        />\r\n                    </Grid>\r\n                    \r\n\r\n\r\n                    <OptionMenu />\r\n\r\n                    \r\n                    <Grid item md={1} xl={1}  >\r\n                        <Grid container spacing={3} alignItems=\"center\" >\r\n                            <Grid item md={6} >\r\n                                <IconButton onClick={handleClick}>\r\n                                    <MoreVert />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        \r\n                            <Grid item md={6}>\r\n                                <Box my=\"auto\" >\r\n                                    <Avatar className={classes.smallAvatar} >\r\n                                    \r\n                                    <Typography>\r\n                                        {index + 1}\r\n                                    </Typography> \r\n                                    \r\n                                    \r\n                                    </Avatar>\r\n\r\n                                </Box>\r\n                            </Grid>\r\n                        \r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Service;"]},"metadata":{},"sourceType":"module"}