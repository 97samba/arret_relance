{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\src\\\\Components\\\\ARCard.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, CardContent, CardHeader, makeStyles, Typography } from '@material-ui/core';\nimport { Add, Code, Description, SettingsSharp, Storage } from '@material-ui/icons';\nimport Service from './Actions/Service';\nimport ARScript from './Actions/ARScript';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardWidth = 950;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: cardWidth,\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst ARCard = ({\n  name\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [actions, SetActions] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    fetch(\"http://localhost:8000/Actions\").then(res => res.json()).then(data => SetActions(data));\n  }, []);\n\n  const handleClick = action => {\n    const newState = [...actions, action];\n    SetActions(newState);\n    {\n      /* \r\n         fetch('http://localhost:8000/Actions',{\r\n         method: 'POST',\r\n         headers:{\"Content-type\": \"application/json\"},\r\n         body: JSON.stringify(action)\r\n      })\r\n      */\n    }\n  };\n\n  const iconsAction = [{\n    icon: /*#__PURE__*/_jsxDEV(SettingsSharp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this),\n    name: 'Service'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Code, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this),\n    name: 'Commande'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this),\n    name: 'Script'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Storage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this),\n    name: 'Base de donnÃ©es'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: name,\n        subheader: \"sequence\",\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          disableElevation: true,\n          onClick: () => handleClick({\n            type: \"service\",\n            action: \"stop\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \" Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SpeedDial, {\n        ariaLabel: \"SpeedDial\",\n        icon: /*#__PURE__*/_jsxDEV(SpeedDialIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 27\n        }, this),\n        children: iconsAction.map(action => /*#__PURE__*/_jsxDEV(SpeedDialAction, {\n          icon: action.icon,\n          tooltipTitle: action.name\n        }, action.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: actions.map(item => item.type === \"service\" ? /*#__PURE__*/_jsxDEV(Service, {}, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 56\n        }, this) : /*#__PURE__*/_jsxDEV(ARScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 84\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ARCard, \"/7cxgE0hWPORzM4FSIeaZ/grdqo=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = ARCard;\nexport default ARCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ARCard\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/src/Components/ARCard.js"],"names":["Button","Card","CardContent","CardHeader","makeStyles","Typography","Add","Code","Description","SettingsSharp","Storage","Service","ARScript","useEffect","useState","useHistory","SpeedDial","SpeedDialAction","SpeedDialIcon","cardWidth","useStyles","theme","root","width","marginBottom","spacing","ARCard","name","classes","actions","SetActions","history","fetch","then","res","json","data","handleClick","action","newState","iconsAction","icon","type","map","item","id"],"mappings":"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","sourcesContent":["import { Button, Card, CardContent, CardHeader,  makeStyles, Typography} from '@material-ui/core'\r\nimport { Add, Code, Description, SettingsSharp, Storage } from '@material-ui/icons';\r\nimport Service from './Actions/Service';\r\nimport ARScript from './Actions/ARScript';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial'\r\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\r\n\r\nconst cardWidth = 950\r\nconst useStyles = makeStyles(theme =>({\r\n    root:{\r\n        width : cardWidth,\r\n        marginBottom : theme.spacing(2) \r\n    }\r\n}))\r\nconst ARCard = ({name}) => {\r\n    const classes = useStyles();\r\n    const [actions, SetActions] = useState([])\r\n    const history = useHistory()\r\n    useEffect(() =>{\r\n        fetch(\"http://localhost:8000/Actions\")\r\n        .then(res => res.json())\r\n        .then(data => SetActions(data))\r\n    },[])\r\n\r\n    const handleClick = (action) =>{\r\n\r\n        const newState = [\r\n            ...actions,action\r\n        ]\r\n        SetActions(newState)\r\n        {/* \r\n            fetch('http://localhost:8000/Actions',{\r\n            method: 'POST',\r\n            headers:{\"Content-type\": \"application/json\"},\r\n            body: JSON.stringify(action)\r\n        })\r\n    */}\r\n    }\r\n    const iconsAction = [\r\n        {icon : <SettingsSharp />, name: 'Service'},\r\n        {icon : <Code />, name: 'Commande'},\r\n        {icon : <Description />, name: 'Script'},\r\n        {icon : <Storage />, name: 'Base de donnÃ©es'}\r\n    ]\r\n    return ( \r\n        <div>\r\n            <Card className= {classes.root}>\r\n                <CardHeader \r\n                title = {name}\r\n                subheader = 'sequence'\r\n                action = {\r\n                    <Button \r\n                    color='primary' \r\n                    variant='contained'\r\n                    disableElevation\r\n                    onClick={() => (\r\n                        \r\n                        handleClick({type:\"service\",action:\"stop\"})\r\n                    )}\r\n                    >\r\n                        <Add />\r\n                        <Typography> Action</Typography>\r\n                    </Button>\r\n                }\r\n                />\r\n                <SpeedDial\r\n                    ariaLabel=\"SpeedDial\"\r\n                    icon={<SpeedDialIcon />}\r\n                >\r\n                    {iconsAction.map((action) => (\r\n                        <SpeedDialAction \r\n                            key={action.name}\r\n                            icon = {action.icon}\r\n                            tooltipTitle={action.name}\r\n                            \r\n                        \r\n                        />\r\n                    ))}\r\n\r\n                </SpeedDial>\r\n\r\n                <CardContent>\r\n                        {actions.map(item => (\r\n                            (item.type === \"service\" ? <Service key={item.id} /> : <ARScript />)\r\n                        ))}\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ARCard;"]},"metadata":{},"sourceType":"module"}