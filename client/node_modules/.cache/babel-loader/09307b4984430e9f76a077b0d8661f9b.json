{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\src\\\\Components\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport { AppsSharp, CodeRounded, DashboardSharp, FolderOpenSharp, SettingsSharp } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      background: \"#F4F4F4\"\n    },\n    nav: {\n      width: drawerWidth,\n      background: 'red'\n    },\n    title: {\n      padding: theme.spacing(2)\n    },\n    list: {\n      padding: theme.spacing(2)\n    },\n    menuItem: {\n      display: 'flex'\n    },\n    button: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(1)\n    },\n    logo: {\n      display: 'flex'\n    }\n  };\n});\n\nconst Layout = ({\n  children\n}) => {\n  _s();\n\n  const menuItems = [{\n    text: 'DashBoard',\n    icon: /*#__PURE__*/_jsxDEV(DashboardSharp, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this),\n    path: '/'\n  }, {\n    text: 'Create',\n    icon: /*#__PURE__*/_jsxDEV(AppsSharp, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this),\n    path: '/create'\n  }, {\n    text: 'Manage',\n    icon: /*#__PURE__*/_jsxDEV(FolderOpenSharp, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }, this),\n    path: '/manage'\n  }, {\n    text: 'Settings',\n    icon: /*#__PURE__*/_jsxDEV(SettingsSharp, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }, this),\n    path: '/settings'\n  }];\n  const classes = useStyles();\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      anchor: \"left\",\n      className: classes.nav,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.logo,\n            children: [/*#__PURE__*/_jsxDEV(CodeRounded, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.title,\n              color: \"primary\",\n              children: \"Transformers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            children: \"G\\xE9n\\xE9rer le script\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: menuItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => history.push(item.path),\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: item.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this)]\n          }, item.text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Layout, \"cXZz/rbrhPrjL6gJaTc75NCtuak=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/src/Components/Layout.js"],"names":["React","Button","List","ListItem","ListItemIcon","ListItemText","Drawer","Typography","AppsSharp","CodeRounded","DashboardSharp","FolderOpenSharp","SettingsSharp","makeStyles","useHistory","drawerWidth","useStyles","theme","root","background","nav","width","title","padding","spacing","list","menuItem","display","button","margin","logo","Layout","children","menuItems","text","icon","path","classes","history","map","item","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,YAAjC,EAA+CC,YAA/C,QAAmE,mBAAnE;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,cAAjC,EAAiDC,eAAjD,EAAkEC,aAAlE,QAAuF,oBAAvF;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,WAAW,GAAG,GAApB;AACA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,IAAU;AACnC,SAAM;AACFC,IAAAA,IAAI,EAAC;AACDC,MAAAA,UAAU,EAAC;AADV,KADH;AAIFC,IAAAA,GAAG,EAAC;AACAC,MAAAA,KAAK,EAAEN,WADP;AAEAI,MAAAA,UAAU,EAAE;AAFZ,KAJF;AAQFG,IAAAA,KAAK,EAAC;AACFC,MAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd;AADP,KARJ;AAWFC,IAAAA,IAAI,EAAC;AACDF,MAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd;AADR,KAXH;AAcFE,IAAAA,QAAQ,EAAE;AACNC,MAAAA,OAAO,EAAG;AADJ,KAdR;AAiBFC,IAAAA,MAAM,EAAG;AACLC,MAAAA,MAAM,EAAEZ,KAAK,CAACO,OAAN,CAAc,CAAd,CADH;AAELD,MAAAA,OAAO,EAAGN,KAAK,CAACO,OAAN,CAAc,CAAd;AAFL,KAjBP;AAqBFM,IAAAA,IAAI,EAAG;AACHH,MAAAA,OAAO,EAAG;AADP;AArBL,GAAN;AAwBF,CAzB0B,CAA5B;;AA2BA,MAAMI,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAC3B,QAAMC,SAAS,GAAG,CACd;AACIC,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,IAAI,eAAC,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFT;AAGIC,IAAAA,IAAI,EAAC;AAHT,GADc,EAMd;AACIF,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,IAAI,eAAC,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFT;AAGIC,IAAAA,IAAI,EAAC;AAHT,GANc,EAWd;AACIF,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,IAAI,eAAC,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFT;AAGIC,IAAAA,IAAI,EAAC;AAHT,GAXc,EAgBd;AACIF,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,IAAI,eAAC,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,YAFT;AAGIC,IAAAA,IAAI,EAAC;AAHT,GAhBc,CAAlB;AAsBA,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACA,QAAMsB,OAAO,GAAGxB,UAAU,EAA1B;AAEA,sBAEI;AAAK,IAAA,SAAS,EAAEuB,OAAO,CAACnB,IAAxB;AAAA,4BAMI,QAAC,MAAD;AACA,MAAA,OAAO,EAAG,WADV;AAEA,MAAA,MAAM,EAAG,MAFT;AAGA,MAAA,SAAS,EAAImB,OAAO,CAACjB,GAHrB;AAAA,6BAMI;AAAA,gCACI;AAAA,kCACI;AAAK,YAAA,SAAS,EAAEiB,OAAO,CAACP,IAAxB;AAAA,oCACI,QAAC,WAAD;AAAa,cAAA,KAAK,EAAG;AAArB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,UAAD;AACA,cAAA,OAAO,EAAC,IADR;AAEA,cAAA,SAAS,EAAEO,OAAO,CAACf,KAFnB;AAGA,cAAA,KAAK,EAAC,SAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAcI,QAAC,MAAD;AACA,YAAA,OAAO,EAAC,WADR;AAEA,YAAA,KAAK,EAAC,SAFN;AAGA,YAAA,SAAS,EAAIe,OAAO,CAACT,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAyBI,QAAC,IAAD;AAAA,oBACKK,SAAS,CAACM,GAAV,CAAcC,IAAI,iBACf,QAAC,QAAD;AAEI,YAAA,MAAM,MAFV;AAGI,YAAA,OAAO,EAAI,MAAMF,OAAO,CAACG,IAAR,CAAaD,IAAI,CAACJ,IAAlB,CAHrB;AAAA,oCAKI,QAAC,YAAD;AAAA,wBAAeI,IAAI,CAACL;AAApB;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI,QAAC,YAAD;AAAc,cAAA,OAAO,EAAIK,IAAI,CAACN;AAA9B;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA,aACWM,IAAI,CAACN,IADhB;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YANJ,EAsDKF,QAtDL;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA2DH,CArFD;;GAAMD,M;UAuBcf,S,EACAF,U;;;KAxBdiB,M;AAuFN,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\n\r\nimport { Button, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { AppsSharp, CodeRounded, DashboardSharp, FolderOpenSharp, SettingsSharp } from '@material-ui/icons'\r\nimport {makeStyles} from '@material-ui/core'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst drawerWidth = 240\r\nconst useStyles = makeStyles((theme) =>{\r\n    return{\r\n        root:{\r\n            background:\"#F4F4F4\"\r\n        },\r\n        nav:{\r\n            width: drawerWidth,\r\n            background: 'red'\r\n        },\r\n        title:{\r\n            padding: theme.spacing(2)\r\n        },\r\n        list:{\r\n            padding: theme.spacing(2)\r\n        },\r\n        menuItem: {\r\n            display : 'flex'\r\n        },\r\n        button : {\r\n            margin: theme.spacing(2),\r\n            padding : theme.spacing(1)\r\n        },\r\n        logo : {\r\n            display : 'flex'\r\n        }\r\n}})\r\n\r\nconst Layout = ({children}) => {\r\n    const menuItems = [\r\n        {\r\n            text: 'DashBoard',\r\n            icon:<DashboardSharp color=\"primary\" />,\r\n            path:'/'\r\n        },\r\n        {\r\n            text: 'Create',\r\n            icon:<AppsSharp color=\"primary\" />,\r\n            path:'/create'\r\n        },\r\n        {\r\n            text: 'Manage',\r\n            icon:<FolderOpenSharp color=\"primary\" />,\r\n            path:'/manage'\r\n        },\r\n        {\r\n            text: 'Settings',\r\n            icon:<SettingsSharp color=\"primary\" />,\r\n            path:'/settings'\r\n        },\r\n    ]\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    \r\n    return ( \r\n\r\n        <div className={classes.root}>\r\n\r\n            {/** toolbar */}\r\n\r\n\r\n            {/**menu droite */}\r\n            <Drawer\r\n            variant = \"permanent\"\r\n            anchor = 'left'\r\n            className = {classes.nav}\r\n\r\n            >\r\n                <div>\r\n                    <div>\r\n                        <div className={classes.logo}>\r\n                            <CodeRounded color = \"primary\" />\r\n                            <Typography \r\n                            variant=\"h5\" \r\n                            className={classes.title}\r\n                            color=\"primary\"\r\n                            >\r\n                                Transformers \r\n\r\n                            </Typography>\r\n\r\n                        </div>\r\n                        \r\n                        <Button \r\n                        variant='contained' \r\n                        color='primary' \r\n                        className = {classes.button}\r\n                        >\r\n                            Générer le script\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/**Les liens du menu */}\r\n                    <List>\r\n                        {menuItems.map(item => (\r\n                            <ListItem \r\n                                key = {item.text}\r\n                                button\r\n                                onClick= { () => history.push(item.path)}\r\n                            >\r\n                                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                                <ListItemText primary = {item.text} />\r\n                            </ListItem>    \r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n\r\n\r\n            {/**future page */}\r\n            {children}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Layout;"]},"metadata":{},"sourceType":"module"}