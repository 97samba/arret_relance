{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\client\\\\src\\\\Components\\\\Actions\\\\WebAction.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core';\nimport { AccountCircle, Add, ArrowRight, Comment, Delete, FileCopy, Link, Lock, MoreVert, Mouse, Web } from \"@material-ui/icons\";\nimport { useContext, useState } from \"react\";\nimport ActionContext from \"../../Context/ActionContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#F6F6FB',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  fields: {\n    width: \"100%\"\n  },\n  dropDown: {\n    width: \"100%\"\n  },\n  smallAvatar: {\n    width: theme.spacing(2.5),\n    height: theme.spacing(2.5)\n  }\n}));\n\nconst WebAction = ({\n  index,\n  initialSTate\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchor] = useState(null);\n  const {\n    deleteAction,\n    duplicateAction,\n    saveData\n  } = useContext(ActionContext);\n  const [state, setState] = useState([]);\n  const [actionType, setActionType] = useState(\"Connexion\");\n  const [openDialog, setOpenDialog] = useState(false);\n  const [navigator, setNavigator] = useState(\"Chrome\");\n  const [navigatorMode, setNavigatorMode] = useState(\"normal\");\n  const [logOut, setLogOut] = useState(\"\");\n  const [logOutSelector, setLogOutSelector] = useState(\"\");\n  const [clickElement, setclickElement] = useState(\"\");\n\n  const handleClick = event => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchor(null);\n  };\n\n  const reduire = () => {};\n\n  useEffect(() => {\n    setState(initialSTate);\n  }, []);\n\n  const formatUrl = url => {\n    if (url.startsWith(\"http\")) {\n      console.log('url est bonne');\n      return url;\n    } else {\n      console.log('error url');\n      return \"http://\" + url;\n    }\n  };\n\n  const testConnection = async e => {\n    const formatedUrl = formatUrl(e.target.value);\n    setState({ ...state,\n      link: formatedUrl\n    });\n\n    if (formatedUrl !== '') {\n      console.log('accessing ', formatedUrl);\n      setState({ ...state,\n        url: formatedUrl\n      });\n      fetch(`http://localhost:5000/api/PARPRE/link?url=${formatedUrl}`).then(res => res.json()).then(result => console.log(result.result));\n    }\n  };\n\n  const showDialog = () => {\n    setOpenDialog(true);\n  };\n\n  const closeDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          container: true,\n          alignContent: \"center\",\n          direction: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Web, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            id: \"url\",\n            color: \"primary\",\n            label: \"Lien\",\n            value: state.url,\n            onChange: e => setState({ ...state,\n              url: e.target.value\n            }),\n            onBlur: e => testConnection(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          xl: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.dropDown,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: actionType,\n              onChange: e => setActionType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Connexion\",\n                children: \"Connexion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"D\\xE9connexion\",\n                children: \"D\\xE9connexion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Click\",\n                children: \"Click\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Remplir\",\n                children: \"Remplir champ(s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Contenu\",\n                children: \"V\\xE9rifier un contenu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: showDialog,\n                children: \"options\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), actionType === \"Connexion\" ?\n        /*#__PURE__*/\n\n        /**Dialog connexion */\n        _jsxDEV(Dialog, {\n          open: openDialog,\n          onClose: closeDialog,\n          fullWidth: 200,\n          onBlur: () => {\n            saveData({\n              index: index,\n              type: \"webAction\",\n              url: state.url,\n              informations: {\n                type: \"connection\",\n                login: state.login,\n                loginSelector: state.loginSelector,\n                password: state.password,\n                passwordSelector: state.passwordSelector,\n                navigator: navigator,\n                navigatorMode: navigatorMode\n              }\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"dialog-title\",\n            children: \"Connexion \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"Le s\\xE9lecteur est obtenu en faisant un click droit sur le champ \\xE0 automatiser, Inspecter\\\" puis click droit sur l'\\xE9l\\xE9ment html et \\\"copy selector\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      value: state.login,\n                      variant: \"outlined\",\n                      autoFocus: true,\n                      margin: \"dense\",\n                      id: \"login\",\n                      label: \"Login\",\n                      onChange: e => setState({ ...state,\n                        login: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(ArrowRight, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      value: state.loginSelector,\n                      variant: \"outlined\",\n                      margin: \"dense\",\n                      id: \"login-selector\",\n                      label: \"s\\xE9lecteur\",\n                      onChange: e => setState({ ...state,\n                        loginSelector: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Lock, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      margin: \"dense\",\n                      id: \"password\",\n                      label: \"Mot de passe\",\n                      type: \"password\",\n                      onChange: e => setState({ ...state,\n                        password: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(ArrowRight, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      value: state.passwordSelector,\n                      variant: \"outlined\",\n                      margin: \"dense\",\n                      id: \"password-selector\",\n                      label: \"s\\xE9lecteur\",\n                      onChange: e => setState({ ...state,\n                        passwordSelector: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  className: classes.dropDown,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    children: \"Navigateur\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: navigator,\n                    onChange: e => setNavigator(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Chrome\",\n                      children: \"Chrome\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Firefox\",\n                      children: \"Firefox\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Edge\",\n                      children: \"Edge\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  className: classes.dropDown,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    children: \"Mode de Navigation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: navigatorMode,\n                    onChange: e => setNavigatorMode(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"normal\",\n                      children: \"Normal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"private\",\n                      children: \"priv\\xE9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onclick: closeDialog,\n              children: \"Confirmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 22\n        }, this) : actionType === \"Déconnexion\" ?\n        /*#__PURE__*/\n\n        /**Dialog deconnexion */\n        _jsxDEV(Dialog, {\n          open: openDialog,\n          onClose: closeDialog,\n          fullWidth: 200,\n          onBlur: () => {\n            saveData({\n              index: index,\n              type: \"webAction\",\n              url: state.url,\n              informations: {\n                type: \"logOut\",\n                logOut: state.logOut,\n                logOutSelector: state.logOutSelector\n              }\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"dialog-title\",\n            children: \"D\\xE9connexion \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"Le s\\xE9lecteur est obtenu en faisant un click droit sur le champ \\xE0 automatiser, Inspecter\\\" puis click droit sur l'\\xE9l\\xE9ment html et \\\"copy selector\\\". Ici pr\\xE9ciser le lien de d\\xE9connection ou le s\\xE9lecteur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Link, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      value: state.logOut,\n                      variant: \"outlined\",\n                      autoFocus: true,\n                      margin: \"dense\",\n                      id: \"logout\",\n                      label: \"lien de d\\xE9connexion\",\n                      autoComplete: false,\n                      onChange: e => setState({ ...state,\n                        logOut: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(ArrowRight, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      value: state.loginSelector,\n                      variant: \"outlined\",\n                      margin: \"dense\",\n                      id: \"logOut-selector\",\n                      label: \"ou s\\xE9lecteur\",\n                      onChange: e => setState({ ...state,\n                        logOutSelector: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onclick: closeDialog,\n              children: \"Confirmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 22\n        }, this) : actionType === \"Click\" ?\n        /*#__PURE__*/\n\n        /**Dialog clicke */\n        _jsxDEV(Dialog, {\n          open: openDialog,\n          onClose: closeDialog,\n          fullWidth: 200,\n          onBlur: () => {\n            saveData({\n              index: index,\n              type: \"webAction\",\n              url: state.url,\n              informations: {\n                type: \"click\",\n                x: state.x,\n                y: state.y,\n                clickSelector: state.clickSelector\n              }\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"dialog-title\",\n            children: \"Effectuer un Click \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"Le s\\xE9lecteur est obtenu en faisant un click droit sur le champ \\xE0 automatiser, Inspecter\\\" puis click droit sur l'\\xE9l\\xE9ment html et \\\"copy selector\\\". Ici pr\\xE9ciser les coordonn\\xE9es ou le s\\xE9lecteur.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    item: true,\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      display: \"flex\",\n                      justifyContent: \"inline-block\",\n                      children: [/*#__PURE__*/_jsxDEV(TextField, {\n                        value: state.x,\n                        variant: \"outlined\",\n                        autoFocus: true,\n                        margin: \"dense\",\n                        id: \"coords-x\",\n                        label: \"coordonn\\xE9es X\",\n                        autoComplete: false,\n                        onChange: e => setState({ ...state,\n                          x: e.target.value\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        value: state.y,\n                        variant: \"outlined\",\n                        autoFocus: true,\n                        margin: \"dense\",\n                        id: \"coords-y\",\n                        label: \"coordonn\\xE9es Y\",\n                        autoComplete: false,\n                        onChange: e => setState({ ...state,\n                          y: e.target.value\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 404,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(ArrowRight, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 421,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      value: state.clickSelector,\n                      variant: \"outlined\",\n                      margin: \"dense\",\n                      id: \"click-selector\",\n                      label: \"Ou selecteur\",\n                      onChange: e => setState({ ...state,\n                        clickSelector: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onclick: closeDialog,\n              children: \"Confirmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 22\n        }, this) :\n        /*#__PURE__*/\n\n        /**Dialog remplir */\n        _jsxDEV(Dialog, {\n          open: openDialog,\n          onClose: closeDialog,\n          fullWidth: 200,\n          onBlur: () => {\n            saveData({\n              index: index,\n              type: \"webAction\",\n              url: state.url,\n              informations: {\n                type: \"field\"\n              }\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"dialog-title\",\n            children: \"Remplir un ou des champs \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"Le s\\xE9lecteur est obtenu en faisant un click droit sur le champ \\xE0 automatiser, Inspecter\\\" puis click droit sur l'\\xE9l\\xE9ment html et \\\"copy selector\\\". Ici pr\\xE9ciser le lien de d\\xE9connection ou le s\\xE9lecteur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      value: state.fields,\n                      variant: \"outlined\",\n                      autoFocus: true,\n                      margin: \"dense\",\n                      label: \"champ\",\n                      autoComplete: false,\n                      onChange: e => setState({ ...state,\n                        fields: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      value: state.fieldSelector,\n                      variant: \"outlined\",\n                      margin: \"dense\",\n                      label: \"s\\xE9lecteur\",\n                      onChange: e => setState({ ...state,\n                        fieldSelector: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onclick: closeDialog,\n              children: \"Confirmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          id: \"menu\",\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: Boolean(anchorEl),\n          onClose: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => deleteAction(index),\n            children: [/*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 72\n            }, this), \"Supprimer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              saveData({\n                index: index,\n                type: \"lien\",\n                url: state.link,\n                status: actionType\n              });\n              setAnchor(null);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FileCopy, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 49\n            }, this), \" save\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            children: [/*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 37\n            }, this), \" R\\xE9duire\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleClick,\n                children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                my: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: classes.smallAvatar,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WebAction, \"GDrzE0/vcao0RD63cHVKKzsm7fQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = WebAction;\nexport default WebAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebAction\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/client/src/Components/Actions/WebAction.js"],"names":["Avatar","Box","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","Grid","IconButton","InputLabel","Menu","MenuItem","Paper","Select","TextField","Typography","makeStyles","AccountCircle","Add","ArrowRight","Comment","Delete","FileCopy","Link","Lock","MoreVert","Mouse","Web","useContext","useState","ActionContext","useStyles","theme","root","background","padding","spacing","marginBottom","fields","width","dropDown","smallAvatar","height","WebAction","index","initialSTate","classes","anchorEl","setAnchor","deleteAction","duplicateAction","saveData","state","setState","actionType","setActionType","openDialog","setOpenDialog","navigator","setNavigator","navigatorMode","setNavigatorMode","logOut","setLogOut","logOutSelector","setLogOutSelector","clickElement","setclickElement","handleClick","event","currentTarget","handleClose","reduire","useEffect","formatUrl","url","startsWith","console","log","testConnection","e","formatedUrl","target","value","link","fetch","then","res","json","result","showDialog","closeDialog","type","informations","login","loginSelector","password","passwordSelector","x","y","clickSelector","fieldSelector","Boolean","status"],"mappings":"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","sourcesContent":["import { Avatar, Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,  FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\"\r\nimport {makeStyles} from '@material-ui/core'\r\nimport {  AccountCircle,  Add,  ArrowRight,  Comment, Delete, FileCopy,  Link,  Lock,  MoreVert, Mouse, Web } from \"@material-ui/icons\"\r\nimport { useContext, useState } from \"react\"\r\nimport ActionContext from \"../../Context/ActionContext\"\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        background:'#F6F6FB',\r\n        padding: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n\r\n    },\r\n    fields:{\r\n        width:\"100%\"\r\n    },\r\n    dropDown:{\r\n        width:\"100%\"\r\n    },\r\n    smallAvatar: {\r\n      width: theme.spacing(2.5),\r\n      height: theme.spacing(2.5)\r\n    }\r\n}))\r\nconst WebAction = ({index,initialSTate}) => {\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchor] = useState(null)\r\n    const { deleteAction, duplicateAction,saveData} = useContext(ActionContext)\r\n    const [state, setState] = useState([])\r\n    const [actionType, setActionType] = useState(\"Connexion\")\r\n    const [openDialog, setOpenDialog] = useState(false)\r\n    const [navigator, setNavigator] = useState(\"Chrome\")\r\n    const [navigatorMode, setNavigatorMode] = useState(\"normal\")\r\n    const [logOut, setLogOut] = useState(\"\")\r\n    const [logOutSelector, setLogOutSelector] = useState(\"\")\r\n    const [clickElement, setclickElement] = useState(\"\")\r\n\r\n\r\n    const handleClick = (event) =>{\r\n        setAnchor(event.currentTarget)\r\n    }\r\n    const handleClose= () => {\r\n        setAnchor(null)\r\n    }\r\n    const reduire = () =>{\r\n \r\n    }\r\n    useEffect(() =>{\r\n        setState(initialSTate)\r\n\r\n    },[]\r\n    )\r\n    const formatUrl = (url) =>{\r\n        \r\n        if(url.startsWith(\"http\")){\r\n\r\n            console.log('url est bonne')\r\n            return url\r\n        }else{\r\n            console.log('error url')    \r\n            return \"http://\"+url       \r\n        }\r\n        \r\n    }\r\n\r\n    const testConnection = async (e) =>{\r\n\r\n        const formatedUrl = formatUrl(e.target.value)\r\n        setState({...state,link:formatedUrl})\r\n\r\n        if(formatedUrl !== ''){\r\n\r\n            console.log('accessing ',formatedUrl)\r\n\r\n            setState({...state, url:formatedUrl})\r\n\r\n            fetch(`http://localhost:5000/api/PARPRE/link?url=${formatedUrl}`)\r\n                .then(res => res.json())\r\n                .then(result => console.log(result.result))\r\n                \r\n        }\r\n  \r\n    }\r\n    const showDialog = () =>{\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    const closeDialog = () =>{\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    \r\n\r\n    return ( \r\n        <div>\r\n            <Paper \r\n                elevation={0}\r\n                className= {classes.root}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    alignItems=\"center\" \r\n                    \r\n                    >\r\n                    <Grid item md={1} xl={1} container alignContent=\"center\" direction=\"column\" >\r\n                        <Box  display=\"flex\" justifyContent=\"center\">\r\n                        <Web color=\"primary\" />\r\n                        </Box>\r\n                        \r\n                        \r\n                    </Grid>\r\n                    <Grid item md={6} xl={2}>\r\n                        <TextField\r\n                        \r\n                        className={classes.fields} \r\n                        id='url'\r\n                        color='primary'\r\n                        label= 'Lien'\r\n                        value={state.url}                        \r\n                        onChange={(e) => setState({...state, url:e.target.value})}\r\n                        onBlur={(e) => (testConnection(e))}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    <Grid item md={2} xl={3} >\r\n                        <FormControl className={classes.dropDown}>\r\n                            <InputLabel>Action</InputLabel>\r\n                            <Select value={actionType} onChange={(e) => (setActionType(e.target.value))}>\r\n                                <MenuItem value=\"Connexion\" >Connexion</MenuItem>\r\n                                <MenuItem value=\"Déconnexion\" >Déconnexion</MenuItem>\r\n                                <MenuItem value=\"Click\">Click</MenuItem>\r\n                                <MenuItem value=\"Remplir\">Remplir champ(s)</MenuItem>\r\n                                <MenuItem value=\"Contenu\">Vérifier un contenu</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    \r\n                    \r\n                    <Grid item md={2} >\r\n                        \r\n                        <Box  display=\"flex\" justifyContent=\"center\">\r\n                            <FormControl >\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={showDialog}>options</Button>\r\n                            </FormControl>\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                    \r\n                    {actionType === \"Connexion\" ? \r\n                    /**Dialog connexion */\r\n                    \r\n                    (<Dialog\r\n                    open={openDialog}\r\n                    onClose={closeDialog}\r\n                    fullWidth={200}\r\n                    onBlur={() => {saveData(\r\n                        {\r\n                            index:index,\r\n                            type:\"webAction\",\r\n                            url:state.url,                             \r\n                            informations:\r\n                            {\r\n                                type: \"connection\",\r\n                                login : state.login,\r\n                                loginSelector : state.loginSelector, \r\n                                password : state.password, \r\n                                passwordSelector : state.passwordSelector,\r\n                                navigator : navigator,\r\n                                navigatorMode : navigatorMode\r\n                            }\r\n                        })}\r\n                    }\r\n                    >\r\n                        <DialogTitle id='dialog-title' >Connexion </DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Le sélecteur est obtenu en faisant un click droit sur le champ à automatiser,  \r\n                                Inspecter\" puis click droit sur l'élément html et \"copy selector\"\r\n                            </DialogContentText>\r\n                            <div>\r\n                                <Box display=\"flex\" justifyContent=\"space-around\">\r\n                                    <Grid container spacing={1} alignItems=\"center\">\r\n                                        <Grid item >\r\n                                            <AccountCircle />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                        <TextField\r\n                                        value={state.login}\r\n                                        variant=\"outlined\"\r\n                                        autoFocus\r\n                                        margin=\"dense\"\r\n                                        id=\"login\"\r\n                                        label=\"Login\"                                        \r\n                                        onChange={(e) => (setState({...state, login:e.target.value}))}\r\n                                        />\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container spacing={1} alignItems=\"center\">\r\n                                        <Grid item >\r\n                                            <ArrowRight />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                        <TextField\r\n                                        value={state.loginSelector}\r\n                                        variant=\"outlined\"                                    \r\n                                        margin=\"dense\"\r\n                                        id=\"login-selector\"\r\n                                        label=\"sélecteur\"\r\n                                        onChange={(e) => (setState({...state, loginSelector:e.target.value}))}\r\n                                        />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" justifyContent=\"space-around\">\r\n                                <Grid container spacing={1} alignItems=\"center\">\r\n                                        <Grid item >\r\n                                            <Lock />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                        <TextField\r\n                                        variant=\"outlined\" \r\n                                                                        \r\n                                        margin=\"dense\"\r\n                                        id=\"password\"\r\n                                        label=\"Mot de passe\"\r\n                                        type=\"password\"\r\n                                        onChange={(e) => (setState({...state, password:e.target.value}))}\r\n                                        />\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container spacing={1} alignItems=\"center\">\r\n                                        <Grid item >\r\n                                            <ArrowRight />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                        <TextField\r\n                                        value={state.passwordSelector}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        id=\"password-selector\"\r\n                                        label=\"sélecteur\"\r\n                                        onChange={(e) => (setState({...state, passwordSelector:e.target.value}))}\r\n\r\n                                        />\r\n                                        </Grid>\r\n                                    </Grid>                                    \r\n                                    \r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" justifyContent=\"space-around\">\r\n                                    <FormControl className={classes.dropDown}>\r\n                                        <InputLabel>Navigateur</InputLabel>\r\n                                        <Select value={navigator} onChange={(e) => setNavigator(e.target.value)}>\r\n                                            <MenuItem value=\"Chrome\" >Chrome</MenuItem>\r\n                                            <MenuItem value=\"Firefox\">Firefox</MenuItem>\r\n                                            <MenuItem value=\"Edge\">Edge</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={classes.dropDown}>\r\n                                        <InputLabel>Mode de Navigation</InputLabel>\r\n                                        <Select value={navigatorMode} onChange={(e) => (setNavigatorMode(e.target.value))}>\r\n                                            <MenuItem value=\"normal\" >Normal</MenuItem>\r\n                                            <MenuItem value=\"private\">privé</MenuItem>                                            \r\n                                        </Select>\r\n                                    </FormControl>            \r\n                                </Box>\r\n                                \r\n                            </div>\r\n\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onclick = {closeDialog}>\r\n                                Confirmer\r\n                            </Button>\r\n                            \r\n                        </DialogActions>\r\n\r\n                    </Dialog>\r\n                    ): actionType === \"Déconnexion\" ?\r\n                    /**Dialog deconnexion */\r\n                    (<Dialog\r\n                    open={openDialog}\r\n                    onClose={closeDialog}\r\n                    fullWidth={200}\r\n                    onBlur={() => {saveData(\r\n                        {\r\n                            index:index,\r\n                            type:\"webAction\",\r\n                            url:state.url,\r\n                            informations:\r\n                            {\r\n                                type: \"logOut\",\r\n                                logOut : state.logOut,\r\n                                logOutSelector : state.logOutSelector, \r\n                                \r\n                            }\r\n                        })}\r\n                    }\r\n                    >\r\n                        <DialogTitle id='dialog-title'>Déconnexion </DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Le sélecteur est obtenu en faisant un click droit sur le champ à automatiser,  \r\n                                Inspecter\" puis click droit sur l'élément html et \"copy selector\". \r\n                                Ici préciser le lien de déconnection ou le sélecteur\r\n                            </DialogContentText>\r\n                            <div>\r\n                                <Box display=\"flex\" justifyContent=\"space-around\">\r\n                                    <Grid container spacing={1} alignItems=\"center\">\r\n                                        <Grid item >\r\n                                            <Link />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                        <TextField\r\n                                        value={state.logOut}\r\n                                        variant=\"outlined\"\r\n                                        autoFocus\r\n                                        margin=\"dense\"\r\n                                        id=\"logout\"\r\n                                        label=\"lien de déconnexion\"\r\n                                        autoComplete={false}\r\n                                        \r\n                                        onChange={(e) => (setState({...state, logOut:e.target.value}))}\r\n                                        />\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container spacing={1} alignItems=\"center\">\r\n                                        <Grid item >\r\n                                            <ArrowRight />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                        <TextField\r\n                                        value={state.loginSelector}\r\n                                        variant=\"outlined\"                                    \r\n                                        margin=\"dense\"\r\n                                        id=\"logOut-selector\"\r\n                                        label=\"ou sélecteur\"\r\n                                        onChange={(e) => (setState({...state, logOutSelector:e.target.value}))}\r\n                                        />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </div>\r\n\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onclick = {closeDialog}>\r\n                                Confirmer\r\n                            </Button>\r\n                            \r\n                        </DialogActions>\r\n\r\n                    </Dialog>\r\n                    ): actionType === \"Click\" ?\r\n                    /**Dialog clicke */\r\n\r\n                    (<Dialog\r\n                        open={openDialog}\r\n                        onClose={closeDialog}\r\n                        fullWidth={200}\r\n                        onBlur={() => {saveData(\r\n                            {\r\n                                index:index,\r\n                                type:\"webAction\",\r\n                                url:state.url,                             \r\n                                informations:\r\n                                {\r\n                                    type:\"click\",\r\n                                    x : state.x,\r\n                                    y : state.y, \r\n                                    clickSelector : state.clickSelector, \r\n                                }\r\n                            })}\r\n                        }\r\n                        >\r\n                            <DialogTitle id='dialog-title'>Effectuer un Click </DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    Le sélecteur est obtenu en faisant un click droit sur le champ à automatiser,  \r\n                                    Inspecter\" puis click droit sur l'élément html et \"copy selector\". \r\n                                    Ici préciser les coordonnées ou le sélecteur.\r\n                                </DialogContentText>\r\n                                <div>\r\n                                    <Box display=\"flex\" justifyContent=\"space-around\">\r\n                                        <Grid container spacing={1} alignItems=\"center\">\r\n                                            \r\n                                            <Grid container item spacing={2}>\r\n                                                <Box display=\"flex\" justifyContent=\"inline-block\">\r\n                                                <TextField\r\n                                                value={state.x}\r\n                                                variant=\"outlined\"\r\n                                                autoFocus\r\n                                                margin=\"dense\"\r\n                                                id=\"coords-x\"\r\n                                                label=\"coordonnées X\"\r\n                                                autoComplete={false}\r\n                                                onChange={(e) => (setState({...state, x : e.target.value}))}\r\n                                                />\r\n                                                <TextField\r\n                                                value={state.y}\r\n                                                variant=\"outlined\"\r\n                                                autoFocus\r\n                                                margin=\"dense\"\r\n                                                id=\"coords-y\"\r\n                                                label=\"coordonnées Y\"\r\n                                                autoComplete={false}\r\n                                                \r\n                                                onChange={(e) => (setState({...state, y : e.target.value}))}\r\n                                                />\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n    \r\n                                        <Grid container spacing={1} alignItems=\"center\">\r\n                                            <Grid item >\r\n                                                <ArrowRight />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                            <TextField\r\n                                            value={state.clickSelector}\r\n                                            variant=\"outlined\"                                    \r\n                                            margin=\"dense\"\r\n                                            id=\"click-selector\"\r\n                                            label=\"Ou selecteur\"\r\n                                            onChange={(e) => (setState({...state, clickSelector:e.target.value}))}\r\n                                            />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </div>\r\n    \r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onclick = {closeDialog}>\r\n                                    Confirmer\r\n                                </Button>\r\n                                \r\n                            </DialogActions>\r\n    \r\n                        </Dialog>\r\n                    ):\r\n                    /**Dialog remplir */\r\n\r\n                    (<Dialog\r\n                        open={openDialog}\r\n                        onClose={closeDialog}\r\n                        fullWidth={200}\r\n                        onBlur={() => {saveData(\r\n                            {\r\n                                index:index,\r\n                                type:\"webAction\",\r\n                                url:state.url,                             \r\n                                informations:\r\n                                {\r\n                                    type : \"field\"                                    \r\n                                }\r\n                            })}\r\n                        }\r\n                        >\r\n                            <DialogTitle id='dialog-title'>Remplir un ou des champs </DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    Le sélecteur est obtenu en faisant un click droit sur le champ à automatiser,  \r\n                                    Inspecter\" puis click droit sur l'élément html et \"copy selector\". \r\n                                    Ici préciser le lien de déconnection ou le sélecteur\r\n                                </DialogContentText>\r\n                                <div>\r\n                                    <Box display=\"flex\" justifyContent=\"space-around\">\r\n                                        <Grid container spacing={1} alignItems=\"center\">\r\n                                            \r\n                                            <Grid item>\r\n                                            <TextField\r\n                                            value={state.fields}\r\n                                            variant=\"outlined\"\r\n                                            autoFocus\r\n                                            margin=\"dense\"\r\n                                            label=\"champ\"\r\n                                            autoComplete={false}\r\n                                            \r\n                                            onChange={(e) => (setState({...state, fields:e.target.value}))}\r\n                                            />\r\n                                            </Grid>\r\n                                        </Grid>\r\n    \r\n                                        <Grid container spacing={1} alignItems=\"center\">\r\n                                            \r\n                                            <Grid item>\r\n                                            <TextField\r\n                                            value={state.fieldSelector}\r\n                                            variant=\"outlined\"                                    \r\n                                            margin=\"dense\"\r\n                                            label=\"sélecteur\"\r\n                                            onChange={(e) => (setState({...state, fieldSelector:e.target.value}))}\r\n                                            />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    \r\n                                        <IconButton>\r\n                                            <Add />\r\n                                        </IconButton>\r\n                                    \r\n                                    </Box>\r\n    \r\n                                    \r\n    \r\n                                    \r\n                                    \r\n                                </div>\r\n    \r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onclick = {closeDialog}>\r\n                                    Confirmer\r\n                                </Button>\r\n                                \r\n                            </DialogActions>\r\n    \r\n                        </Dialog>\r\n                    )\r\n                    }\r\n                    \r\n                    <Menu\r\n                        id=\"menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => deleteAction(index)} ><Delete />Supprimer</MenuItem>\r\n                        <MenuItem onClick={() => {saveData(\r\n                            {\r\n                                index:index, type:\"lien\", url : state.link, status : actionType\r\n                            })\r\n                            ;setAnchor(null)}} ><FileCopy /> save</MenuItem>\r\n                        <MenuItem  ><Comment /> Réduire</MenuItem>\r\n                    </Menu>\r\n                    <Grid item md={1} xl={1}  >\r\n                        <Grid container spacing={3} alignItems=\"center\" >\r\n                            <Grid item md={6} >\r\n                                <IconButton onClick={handleClick}>\r\n                                    <MoreVert />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        \r\n                            <Grid item md={6}>\r\n                                <Box my=\"auto\" >\r\n                                    <Avatar className={classes.smallAvatar} >\r\n                                    \r\n                                    <Typography>\r\n                                        {index + 1}\r\n                                    </Typography> \r\n                                    \r\n                                    \r\n                                    </Avatar>\r\n\r\n                                </Box>\r\n                            </Grid>\r\n                        \r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default WebAction;"]},"metadata":{},"sourceType":"module"}