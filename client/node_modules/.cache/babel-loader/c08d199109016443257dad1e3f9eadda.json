{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\src\\\\Components\\\\ARCard.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, CardContent, CardHeader, makeStyles, Typography } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport Service from './Actions/Service';\nimport ARScript from './Actions/ARScript';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardWidth = 950;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: cardWidth,\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst ARCard = ({\n  name\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [actions, SetActions] = useState();\n  useEffect(() => {\n    fetch(\"http://localhost:8000/Actions\").then(res => res.json()).then(data => SetActions(data));\n  }, []);\n\n  const handleSubmit = action => {\n    SetActions(datas);\n    console.log(actions);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: name,\n        subheader: \"sequence\",\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          disableElevation: true,\n          onClick: () => handleSubmit({\n            type: \"service\",\n            action: \"stop\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \" Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: datas.map(item => item.type === \"service\" ? /*#__PURE__*/_jsxDEV(Service, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 56\n        }, this) : /*#__PURE__*/_jsxDEV(ARScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 70\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ARCard, \"b+EoG7GstamiLdxvMr5D3+vj2MA=\", false, function () {\n  return [useStyles];\n});\n\n_c = ARCard;\nexport default ARCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ARCard\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/src/Components/ARCard.js"],"names":["Button","Card","CardContent","CardHeader","makeStyles","Typography","Add","Service","ARScript","useEffect","useState","cardWidth","useStyles","theme","root","width","marginBottom","spacing","ARCard","name","classes","actions","SetActions","fetch","then","res","json","data","handleSubmit","action","datas","console","log","type","map","item"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,EAAoCC,UAApC,EAAiDC,UAAjD,EAA6DC,UAA7D,QAA8E,mBAA9E;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAG,GAAlB;AACA,MAAMC,SAAS,GAAGR,UAAU,CAACS,KAAK,KAAI;AAClCC,EAAAA,IAAI,EAAC;AACDC,IAAAA,KAAK,EAAGJ,SADP;AAEDK,IAAAA,YAAY,EAAGH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFd;AAD6B,CAAJ,CAAN,CAA5B;;AAMA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACvB,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,EAAtC;AACAD,EAAAA,SAAS,CAAC,MAAK;AACXc,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIL,UAAU,CAACK,IAAD,CAFxB;AAGH,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMC,YAAY,GAAIC,MAAD,IAAW;AAC5BP,IAAAA,UAAU,CAACQ,KAAD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACH,GAHD;;AAIA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAGD,OAAO,CAACN,IAA1B;AAAA,8BACI,QAAC,UAAD;AACA,QAAA,KAAK,EAAIK,IADT;AAEA,QAAA,SAAS,EAAG,UAFZ;AAGA,QAAA,MAAM,eACF,QAAC,MAAD;AACA,UAAA,KAAK,EAAC,SADN;AAEA,UAAA,OAAO,EAAC,WAFR;AAGA,UAAA,gBAAgB,MAHhB;AAIA,UAAA,OAAO,EAAE,MAELS,YAAY,CAAC;AAACK,YAAAA,IAAI,EAAC,SAAN;AAAgBJ,YAAAA,MAAM,EAAC;AAAvB,WAAD,CANhB;AAAA,kCASI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAmBI,QAAC,WAAD;AAAA,kBACSC,KAAK,CAACI,GAAN,CAAUC,IAAI,IACVA,IAAI,CAACF,IAAL,KAAc,SAAd,gBAA0B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAA1B,gBAAwC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAD5C;AADT;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CA3CD;;GAAMf,M;UACcN,S;;;KADdM,M;AA6CN,eAAeA,MAAf","sourcesContent":["import { Button, Card, CardContent, CardHeader,  makeStyles, Typography} from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons';\r\nimport Service from './Actions/Service';\r\nimport ARScript from './Actions/ARScript';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst cardWidth = 950\r\nconst useStyles = makeStyles(theme =>({\r\n    root:{\r\n        width : cardWidth,\r\n        marginBottom : theme.spacing(2) \r\n    }\r\n}))\r\nconst ARCard = ({name}) => {\r\n    const classes = useStyles();\r\n    const [actions, SetActions] = useState()\r\n    useEffect(() =>{\r\n        fetch(\"http://localhost:8000/Actions\")\r\n        .then(res => res.json())\r\n        .then(data => SetActions(data))\r\n    },[])\r\n\r\n    const handleSubmit = (action) =>{\r\n        SetActions(datas)\r\n        console.log(actions)\r\n    }\r\n    return ( \r\n        <div>\r\n            <Card className= {classes.root}>\r\n                <CardHeader \r\n                title = {name}\r\n                subheader = 'sequence'\r\n                action = {\r\n                    <Button \r\n                    color='primary' \r\n                    variant='contained'\r\n                    disableElevation\r\n                    onClick={() => (\r\n                        \r\n                        handleSubmit({type:\"service\",action:\"stop\"})\r\n                    )}\r\n                    >\r\n                        <Add />\r\n                        <Typography> Action</Typography>\r\n                    </Button>\r\n                }\r\n                />\r\n                <CardContent>\r\n                        {datas.map(item => (\r\n                            (item.type === \"service\" ? <Service /> : <ARScript />)\r\n                        ))}\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ARCard;"]},"metadata":{},"sourceType":"module"}