{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Pages\\\\Manage.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, IconButton, InputBase, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { Add, ArrowBack, SearchSharp } from '@material-ui/icons';\nimport ListSSA from '../Components/Manage/ListSSA';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1)\n  },\n  fields: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  head: {\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(3)\n  }\n}));\n\nconst Manage = () => {\n  _s();\n\n  const url = \"http://localhost:5000/api\";\n  const [POS, SetPOS] = useState([]);\n  const [ExcelTab, SetExcelTab] = useState(false);\n  const [allExcel, setAllExcel] = useState([]);\n  useEffect(() => {\n    document.title = \"Modify\";\n    getAllPos();\n    GetAllExcel();\n  }, []);\n\n  const GetAllExcel = () => {\n    axios.post(`http://localhost:5000/api/ConvertAll-Excel`).then(res => {\n      setAllExcel(res.data);\n      console.log(\"data \", res.data);\n    });\n  };\n\n  const classes = useStyles();\n\n  const getAllPos = async () => {\n    await fetch(`${url}/AllPOS`).then(Response => Response.json()).then(result => {\n      //console.log(result)\n      SetPOS(result);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.head,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: ExcelTab ? /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 44\n            }, this) : /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 60\n            }, this),\n            variant: \"contained\",\n            elevation: 0,\n            onClick: () => SetExcelTab(!ExcelTab),\n            children: [\" \", !ExcelTab ? \"Importer un Excel\" : \"Retour\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            component: \"form\",\n            elevation: 1,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"menu\",\n              children: /*#__PURE__*/_jsxDEV(SearchSharp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n              placeholder: \"Rechercher une SSA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        style: {\n          padding: 5\n        },\n        container: true,\n        direction: \"row\",\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          md: 1,\n          sm: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          md: 3,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \" Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          md: 1,\n          sm: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \" Etapes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          md: 2,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \" Auteur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          md: 2,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \" Date de cr\\xE9ation \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          md: 3,\n          sm: 3,\n          spacing: 1,\n          container: true,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), ExcelTab ? allExcel.map(excel => /*#__PURE__*/_jsxDEV(ListSSA, {\n        ssa: excel\n      }, excel._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }, this)) : POS.map(pos => /*#__PURE__*/_jsxDEV(ListSSA, {\n        ssa: pos\n      }, pos._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Manage, \"+83cNI/mr3jsS/JaT/nBSO7qGzg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Manage;\nexport default Manage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manage\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Pages/Manage.js"],"names":["Button","Grid","IconButton","InputBase","makeStyles","Paper","Typography","useEffect","useState","Add","ArrowBack","SearchSharp","ListSSA","axios","useStyles","theme","root","margin","spacing","fields","padding","display","justifyContent","head","marginLeft","marginTop","marginBottom","Manage","url","POS","SetPOS","ExcelTab","SetExcelTab","allExcel","setAllExcel","document","title","getAllPos","GetAllExcel","post","then","res","data","console","log","classes","fetch","Response","json","result","map","excel","_id","pos"],"mappings":"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","sourcesContent":["import { Button, Grid, IconButton, InputBase, makeStyles, Paper, Typography } from '@material-ui/core'\r\nimport { useEffect, useState } from 'react';\r\nimport { Add, ArrowBack, SearchSharp } from '@material-ui/icons';\r\nimport ListSSA from '../Components/Manage/ListSSA';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n    fields: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    head: {\r\n        marginLeft: theme.spacing(1),\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(3)\r\n\r\n    }\r\n}))\r\n\r\n\r\nconst Manage = () => {\r\n    const url = \"http://localhost:5000/api\"\r\n    const [POS, SetPOS] = useState([])\r\n    const [ExcelTab, SetExcelTab] = useState(false)\r\n    const [allExcel, setAllExcel] = useState([])\r\n\r\n    useEffect(() => {\r\n        document.title = \"Modify\"        \r\n        getAllPos()\r\n        GetAllExcel()\r\n        \r\n    }, [])\r\n\r\n\r\n    const GetAllExcel =() =>{\r\n            \r\n        axios.post(`http://localhost:5000/api/ConvertAll-Excel`)\r\n            .then(res =>  {setAllExcel(res.data); console.log(\"data \",res.data)})\r\n            \r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    const getAllPos = async () => {\r\n        await fetch(`${url}/AllPOS`)\r\n            .then(Response => Response.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n                SetPOS(result)\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.head}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={4}>\r\n                        <Button\r\n                            startIcon={\r\n                                ExcelTab ? <ArrowBack /> : <Add />\r\n                            }\r\n                            variant=\"contained\"\r\n                            elevation={0}\r\n                            onClick={() => SetExcelTab(!ExcelTab)}\r\n\r\n                        > {!ExcelTab\r\n                            ? \"Importer un Excel\"\r\n                            : \"Retour\"\r\n\r\n                            }\r\n\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item sm={3}>\r\n                        <Paper component=\"form\" elevation={1} >\r\n                            <IconButton aria-label=\"menu\">\r\n                                <SearchSharp />\r\n                            </IconButton>\r\n                            <InputBase\r\n\r\n                                placeholder=\"Rechercher une SSA\"\r\n                            />\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n                    {/*\r\n                    <Grid item sm={3}>\r\n                        \r\n                        \r\n                        \r\n                       \r\n                        <FormControl size=\"medium\" variant=\"filled\">\r\n                            <InputLabel id=\"filter\">Filter par</InputLabel>\r\n                            <Select labelId=\"filter\" value=\"filtre\" >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value=\"nom\">Nom</MenuItem>\r\n                                <MenuItem value={20}>Type</MenuItem>\r\n                                <MenuItem value={30}>état</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        \r\n                    </Grid>\r\n                     */}\r\n                </Grid>\r\n            </div>\r\n\r\n            <div>\r\n                <Grid style={{ padding: 5 }} container direction=\"row\" className={classes.root}>\r\n                    <Grid item xs={3} md={1} sm={1} >\r\n                        <Typography>Code</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} md={3} sm={3}  >\r\n                        <Typography> Nom</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} md={1} sm={1}  >\r\n                        <Typography> Etapes</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} md={2} sm={2}  >\r\n                        <Typography> Auteur</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} md={2} sm={2}  >\r\n                        <Typography> Date de création </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3} md={3} sm={3} spacing={1} container justify=\"center\">\r\n                        <Typography>Actions</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                {\r\n                    ExcelTab ?\r\n                        (\r\n                            allExcel.map(excel => (\r\n                                <ListSSA ssa={excel} key={excel._id} />\r\n                            ))                           \r\n\r\n                        )\r\n                        :\r\n                        (\r\n                            POS.map(pos => (\r\n                                <ListSSA ssa={pos} key={pos._id} />\r\n                            ))\r\n                        )\r\n\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Manage;"]},"metadata":{},"sourceType":"module"}