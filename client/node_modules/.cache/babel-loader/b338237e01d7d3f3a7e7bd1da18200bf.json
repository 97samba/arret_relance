{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Components\\\\Creation\\\\RightNav.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Divider, Drawer, Grid, LinearProgress, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@material-ui/core\";\nimport { Computer, Rowing, Settings } from \"@material-ui/icons\";\nimport { useEffect, useState } from \"react\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidthRight = 280;\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {},\n    navRight: {\n      width: drawerWidthRight //display:'none'\n\n    },\n    drawerPaperRight: {\n      width: drawerWidthRight,\n      backgroundColor: \"#FFFFF\",\n      borderLeft: '0px'\n    }\n  };\n});\n\nconst RightNav = ({\n  ServerRow,\n  saveRows\n}) => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const columns = [{\n    field: 'prod',\n    headerName: 'prod',\n    width: 90,\n    editable: true,\n    sortable: false\n  }, {\n    field: 'hprod',\n    headerName: 'hprod',\n    width: 90,\n    editable: true,\n    sortable: false\n  }, {\n    field: 'dev',\n    headerName: 'dev',\n    width: 90,\n    editable: true,\n    sortable: false\n  }];\n  /*\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 20));\r\n    }, 400);\r\n        return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  */\n\n  const classes = useStyles();\n\n  const handleCellchange = cell => {\n    console.log(\"Changing the \", cell);\n    var editedLine = ServerRow.map(row => {\n      var field = \"\";\n      cell.field === \"prod\" ? field = \"prod\" : field = \"dev\";\n\n      if (row.id === cell.id) {\n        return { ...row\n        };\n      }\n    });\n    console.log(\"rows count \", ServerRow.length, \" edited \", editedLine); //saveRows([...ServerRow,{id:cell.id+1, prod:editedLine.prod,hprod:editedLine.hprod, dev : editedLine.dev}])\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      elevation: 0,\n      variant: \"permanent\",\n      anchor: \"right\",\n      classes: {\n        paper: classes.drawerPaperRight\n      },\n      className: classes.navRight,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          m: 2,\n          display: \"flex\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            children: \"Informations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 300,\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            rows: ServerRow,\n            columns: columns,\n            hideFooter: true,\n            disableColumnMenu: true,\n            rowHeight: 40,\n            headerHeight: 40,\n            onEditCellChangeCommitted: cell => handleCellchange(cell)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RightNav, \"G0f3nuULBbeLOS0zPSeNMV4x/JI=\", false, function () {\n  return [useStyles];\n});\n\n_c = RightNav;\nexport default RightNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightNav\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Components/Creation/RightNav.js"],"names":["Avatar","Box","Divider","Drawer","Grid","LinearProgress","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Computer","Rowing","Settings","useEffect","useState","DataGrid","drawerWidthRight","useStyles","theme","root","navRight","width","drawerPaperRight","backgroundColor","borderLeft","RightNav","ServerRow","saveRows","progress","setProgress","columns","field","headerName","editable","sortable","classes","handleCellchange","cell","console","log","editedLine","map","row","id","length","paper","height"],"mappings":"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","sourcesContent":["import { Avatar, Box, Divider, Drawer, Grid, LinearProgress, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@material-ui/core\";\r\nimport { Computer, Rowing, Settings } from \"@material-ui/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {DataGrid} from '@material-ui/data-grid';\r\n\r\nconst drawerWidthRight = 280\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n\r\n    return {\r\n        root: {\r\n\r\n        },\r\n        navRight: {\r\n            width: drawerWidthRight,\r\n            //display:'none'\r\n        },\r\n        drawerPaperRight: {\r\n            width: drawerWidthRight,\r\n            backgroundColor: \"#FFFFF\",\r\n            borderLeft: '0px'\r\n\r\n        }\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\nconst RightNav = ({ ServerRow, saveRows }) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const columns = [\r\n        {field : 'prod', headerName: 'prod', width : 90, editable : true, sortable:false },\r\n        {field : 'hprod', headerName: 'hprod', width : 90, editable : true, sortable:false },\r\n        {field : 'dev', headerName: 'dev', width :90, editable : true, sortable:false }\r\n    ]\r\n\r\n    /*\r\n    useEffect(() => {\r\n      const timer = setInterval(() => {\r\n        setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 20));\r\n      }, 400);\r\n  \r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }, []);\r\n    */\r\n\r\n    const classes = useStyles()\r\n    \r\n    const handleCellchange = (cell) => {\r\n        console.log(\"Changing the \",cell)\r\n        \r\n\r\n        var editedLine = ServerRow.map(row => {\r\n        var field =\"\"\r\n        cell.field === \"prod\" ? field = \"prod\" : field = \"dev\"\r\n            if(row.id === cell.id){\r\n                return{...row,  }\r\n            }\r\n        })\r\n        \r\n\r\n        console.log(\"rows count \",ServerRow.length,\" edited \", editedLine)\r\n        //saveRows([...ServerRow,{id:cell.id+1, prod:editedLine.prod,hprod:editedLine.hprod, dev : editedLine.dev}])\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Drawer\r\n                elevation={0}\r\n                variant=\"permanent\"\r\n                anchor='right'\r\n                classes={{ paper: classes.drawerPaperRight }}\r\n                className={classes.navRight}\r\n            >\r\n                <Box>\r\n                    <Box m={2} display=\"flex\" justifyContent=\"center\">\r\n                        <Typography gutterBottom>\r\n                            Informations\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                        \r\n                    <div style={{height : 300,width:\"100%\"}}>\r\n                        <DataGrid \r\n                        rows={ServerRow}\r\n                        columns={columns}\r\n                        hideFooter\r\n                        disableColumnMenu\r\n                        rowHeight={40}\r\n                        headerHeight={40}\r\n                        onEditCellChangeCommitted={cell => handleCellchange(cell)}\r\n                        />\r\n                    </div>\r\n                </Box>\r\n\r\n                <Box>\r\n                    {/**\r\n                    <Box m={2} display=\"flex\" justifyContent=\"center\">\r\n                        <Typography gutterBottom>\r\n                            Vérification Active\r\n                        </Typography>\r\n                    </Box>\r\n                    \r\n                    <Grid container spacing={1} alignItems=\"center\" >\r\n                        <Grid item md={2} >\r\n                            <Box display=\"flex\" justifyContent=\"center\">\r\n                                <Computer color=\"primary\" />\r\n                            </Box>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={10}>\r\n                            <Typography variant=\"subtitle1\" display=\"block\"> Ping : SW11203</Typography>\r\n                            <Grid container direction=\"row\" alignItems=\"center\" >\r\n                                <Grid item md={5}>\r\n                                    <Typography variant=\"caption\">En cours</Typography>\r\n                                </Grid>\r\n                                <Grid item md={7}>\r\n                                    <LinearProgress variant=\"determinate\" value={progress} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider style={{ margin: \"10px \" }} />\r\n                    <Grid container alignItems=\"center\" >\r\n                        <Grid item md={2} >\r\n                            <Box display=\"flex\" justifyContent=\"center\" >\r\n                                <Settings color=\"primary\" />\r\n\r\n                            </Box>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={10}>\r\n                            <Typography variant=\"subtitle1\" display=\"block\"> Service : BITS</Typography>\r\n                            <Grid container direction=\"row\" alignItems=\"center\" >\r\n                                <Grid item md={5}>\r\n                                    <Typography variant=\"caption\">En cours</Typography>\r\n                                </Grid>\r\n                                <Grid item md={7}>\r\n                                    <LinearProgress variant=\"determinate\" value={progress} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                     */}\r\n                </Box>\r\n            </Drawer>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RightNav\r\n"]},"metadata":{},"sourceType":"module"}