{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\client\\\\src\\\\Components\\\\Actions\\\\Service.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Chip, IconButton, Menu, MenuItem, Paper, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core';\nimport { Comment, Delete, FileCopy, MoreVert, SettingsSharp } from \"@material-ui/icons\";\nimport { useContext, useState } from \"react\";\nimport ActionContext from \"../../Context/ActionContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#F6F6FB',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  fields: {\n    marginRight: theme.spacing(2)\n  },\n  smallAvatar: {\n    width: theme.spacing(2.5),\n    height: theme.spacing(2.5)\n  }\n}));\n\nconst Service = ({\n  actionID,\n  index\n}) => {\n  _s();\n\n  //css\n  const classes = useStyles();\n  const [anchorEl, setAnchor] = useState(null);\n  const [action, setAction] = useState('STOP'); //létat du composant\n\n  const [state, setState] = useState([]); //l'état du server\n\n  const [pingState, setPingState] = useState(\"ko\"); //context pour sauvegarder l'état dans le parent\n\n  const {\n    deleteAction,\n    duplicateAction,\n    saveData,\n    test\n  } = useContext(ActionContext);\n\n  const handleClick = event => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchor(null);\n  };\n\n  const saveInformations = () => {\n    saveData({\n      index: index,\n      type: \"service\",\n      server: state.server,\n      name: state.service,\n      login: state.login\n    });\n  }; //test si le service existe\n\n\n  const testService = async service => {\n    if (state.server === null || pingState === \"ko\") {\n      return;\n    }\n\n    console.log(\"Testing service : \", service, \"server \", state.server);\n    fetch(`http://localhost:5000/api/PARPRE/service?name=${service}&server=${state.server}`).then(res => res.json()).then(result => console.log(result)).then(() => saveInformations());\n  }; //Fait un ping\n\n\n  const testPing = async (e, server) => {\n    await fetch(`http://localhost:5000/api/PARPRE?server=${server}`).then(res => res.json()).then(result => {\n      setPingState(result);\n      console.log(result.state);\n\n      if (result.state === \"ok\") {\n        saveInformations();\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          my: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(SettingsSharp, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            id: \"server\",\n            color: \"primary\",\n            label: \"Serveur\",\n            onChange: e => setState({ ...state,\n              server: e.target.value\n            }),\n            onBlur: e => testPing(e, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            className: classes.fields,\n            id: \"Action\",\n            label: \"STOP\",\n            children: /*#__PURE__*/_jsxDEV(MenuItem, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"false\",\n            className: classes.fields,\n            id: \"serviceName\",\n            color: \"primary\",\n            label: \"Service\",\n            onChange: e => setState({ ...state,\n              service: e.target.value\n            }),\n            onBlur: e => testService(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            id: \"login\",\n            color: \"primary\",\n            label: \"Login\",\n            onChange: e => setState({ ...state,\n              login: e.target.value\n            }),\n            onBlur: () => saveInformations()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          id: \"menu\",\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: Boolean(anchorEl),\n          onClose: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              deleteAction(index);\n              setAnchor(null);\n            },\n            children: [/*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), \"Supprimer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              saveData({\n                index: index,\n                type: \"service\",\n                server: state.server,\n                name: state.service,\n                login: state.login\n              });\n              setAnchor(null);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FileCopy, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 49\n            }, this), \" save\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onclick: () => test(),\n            children: [/*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 58\n            }, this), \" R\\xE9duire\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          my: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.smallAvatar,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Service, \"Bx8GHti5SC2Ca3oJtJrxwolytDM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Service;\nexport default Service;\n\nvar _c;\n\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/client/src/Components/Actions/Service.js"],"names":["Avatar","Box","Chip","IconButton","Menu","MenuItem","Paper","TextField","Typography","makeStyles","Comment","Delete","FileCopy","MoreVert","SettingsSharp","useContext","useState","ActionContext","useStyles","theme","root","background","padding","spacing","marginBottom","fields","marginRight","smallAvatar","width","height","Service","actionID","index","classes","anchorEl","setAnchor","action","setAction","state","setState","pingState","setPingState","deleteAction","duplicateAction","saveData","test","handleClick","event","currentTarget","handleClose","saveInformations","type","server","name","service","login","testService","console","log","fetch","then","res","json","result","testPing","e","target","value","Boolean"],"mappings":"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","sourcesContent":["import { Avatar, Box, Chip, IconButton, Menu, MenuItem, Paper, TextField, Typography } from \"@material-ui/core\"\r\nimport {makeStyles} from '@material-ui/core'\r\nimport { Comment, Delete, FileCopy, MoreVert, SettingsSharp } from \"@material-ui/icons\"\r\nimport { useContext, useState } from \"react\"\r\nimport ActionContext from \"../../Context/ActionContext\"\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        background:'#F6F6FB',\r\n        padding: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n\r\n    },\r\n    fields:{\r\n        marginRight:theme.spacing(2)\r\n    },\r\n    smallAvatar: {\r\n      width: theme.spacing(2.5),\r\n      height: theme.spacing(2.5)\r\n    }\r\n}))\r\nconst Service = ({actionID,index}) => {\r\n    //css\r\n    const classes = useStyles()\r\n\r\n    const [anchorEl, setAnchor] = useState(null)\r\n    const [action, setAction] = useState('STOP')\r\n    //létat du composant\r\n    const [state, setState] = useState([])\r\n    //l'état du server\r\n    const [pingState, setPingState] = useState(\"ko\")\r\n\r\n    //context pour sauvegarder l'état dans le parent\r\n    const { deleteAction, duplicateAction,saveData,test} = useContext(ActionContext)\r\n\r\n    const handleClick = (event) =>{\r\n        setAnchor(event.currentTarget)\r\n    }\r\n    const handleClose= () => {\r\n        setAnchor(null)\r\n    }\r\n\r\n    const saveInformations = () =>{\r\n        saveData(\r\n            {\r\n                index:index, type:\"service\", server : state.server , name : state.service, login : state.login\r\n            }\r\n        )\r\n    }\r\n    //test si le service existe\r\n    const testService = async(service)=>{\r\n\r\n        if(state.server === null || pingState === \"ko\"){return}\r\n\r\n        console.log(\"Testing service : \",service,\"server \",state.server)\r\n        fetch(`http://localhost:5000/api/PARPRE/service?name=${service}&server=${state.server}`)\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n            .then(() => saveInformations())\r\n    }\r\n    //Fait un ping\r\n    const testPing = async (e,server) =>{\r\n        \r\n        \r\n        await fetch(`http://localhost:5000/api/PARPRE?server=${server}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setPingState(result)\r\n                console.log(result.state)\r\n                if(result.state === \"ok\"){\r\n                    saveInformations()\r\n                } \r\n            \r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    return ( \r\n        <div>\r\n            <Paper \r\n                elevation={0}\r\n                className= {classes.root}>\r\n                    <Box \r\n                display='flex'\r\n                justifyContent='space-between'\r\n\r\n                >\r\n                    <Box my=\"auto\">\r\n                        <SettingsSharp color=\"primary\" />\r\n\r\n                    </Box>\r\n                    <div>\r\n                        <TextField\r\n                        \r\n                        className={classes.fields} \r\n                        id='server'\r\n                        \r\n                        color='primary'\r\n                        label= 'Serveur'\r\n            \r\n                        onChange={(e) => setState({...state, server:e.target.value})}\r\n                        onBlur={(e) => (testPing(e,e.target.value))\r\n                        }\r\n\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Menu \r\n                            className={classes.fields} \r\n\r\n                            id='Action'\r\n                            label= 'STOP'\r\n                        >\r\n                            <MenuItem>\r\n                            \r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                    <div>\r\n                        <TextField \r\n                        autoComplete=\"false\"\r\n                        className={classes.fields} \r\n                        id='serviceName'\r\n                        color='primary'\r\n                        label= 'Service'\r\n                        onChange={(e) => setState({...state, service:e.target.value})}\r\n                        onBlur={(e) => testService(e.target.value) }\r\n\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <TextField \r\n                            className={classes.fields} \r\n\r\n                            id='login'\r\n                            color='primary'\r\n                            label= 'Login' \r\n                            onChange={(e) => setState({...state, login:e.target.value})}\r\n                            onBlur={() => saveInformations()}\r\n\r\n                        />\r\n                    </div>\r\n\r\n                    <Menu\r\n                        id=\"menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => {\r\n\r\n                            deleteAction(index)\r\n                            setAnchor(null)\r\n                            \r\n                            }} >\r\n                            \r\n                            <Delete />Supprimer\r\n                        \r\n                        </MenuItem>\r\n                        <MenuItem onClick={() => {saveData(\r\n                            {\r\n                                index:index, type:\"service\", server : state.server , name : state.service, login : state.login\r\n                            })\r\n                            ;setAnchor(null)}} ><FileCopy /> save</MenuItem>\r\n                        <MenuItem onclick={()=> test()} ><Comment /> Réduire</MenuItem>\r\n                    </Menu>\r\n                    <IconButton onClick={handleClick}>\r\n                        <MoreVert />\r\n\r\n                    </IconButton>\r\n\r\n                    <Box my=\"auto\" >\r\n                        <Avatar className={classes.smallAvatar} >\r\n                        \r\n                        <Typography>\r\n                            {index + 1}\r\n                        </Typography> \r\n                        \r\n                        </Avatar>\r\n\r\n                    </Box>\r\n                    \r\n                </Box>\r\n            </Paper>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Service;"]},"metadata":{},"sourceType":"module"}