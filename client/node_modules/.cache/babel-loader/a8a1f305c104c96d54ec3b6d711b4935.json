{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\client\\\\src\\\\Pages\\\\Manage.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Button, Card, CardContent, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { CallMissedSharp, Code, Description, Http, SettingsSharp, Storage, Web } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(2)\n  },\n  fields: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}));\n\nconst Manage = () => {\n  _s();\n\n  const [POS, SetPOS] = useState([]);\n  useEffect(() => {\n    getPos();\n  }, POS);\n  const classes = useStyles();\n\n  const getPos = async () => {\n    await fetch(`http://localhost:5000/api/POS`).then(Response => Response.json()).then(result => {\n      console.log(result);\n      SetPOS(result);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Toutes les Procedures d'Ouverture de Service (POS)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: POS.map(pos => /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        elevation: 0.5,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.fields,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            children: pos.name[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\" \", pos.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\" \", pos.Arret.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\" \", pos.auteur]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\" \", pos.date_de_creation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\" \", pos._id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Manage, \"Z2L6ZBusfZy8EAbLJ/g5G5OM1MU=\", false, function () {\n  return [useStyles];\n});\n\n_c = Manage;\nexport default Manage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manage\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/client/src/Pages/Manage.js"],"names":["Avatar","Button","Card","CardContent","makeStyles","Paper","Typography","useEffect","useState","CallMissedSharp","Code","Description","Http","SettingsSharp","Storage","Web","useStyles","theme","root","margin","spacing","fields","padding","display","justifyContent","Manage","POS","SetPOS","getPos","classes","fetch","then","Response","json","result","console","log","map","pos","name","Arret","length","auteur","date_de_creation","_id"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,WAA9B,EAA2CC,UAA3C,EAAuDC,KAAvD,EAA8DC,UAA9D,QAA+E,mBAA/E;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,eAAT,EAA0BC,IAA1B,EAAgCC,WAAhC,EAA6CC,IAA7C,EAAmDC,aAAnD,EAAkEC,OAAlE,EAA2EC,GAA3E,QAAsF,oBAAtF;;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAAEa,KAAD,KAAU;AACnCC,EAAAA,IAAI,EAAC;AACDC,IAAAA,MAAM,EAACF,KAAK,CAACG,OAAN,CAAc,CAAd;AADN,GAD8B;AAKnCC,EAAAA,MAAM,EAAC;AACHC,IAAAA,OAAO,EAACL,KAAK,CAACG,OAAN,CAAc,CAAd,CADL;AAEHG,IAAAA,OAAO,EAAC,MAFL;AAGHC,IAAAA,cAAc,EAAC;AAHZ;AAL4B,CAAV,CAAD,CAA5B;;AAcA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBnB,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVqB,IAAAA,MAAM;AACT,GAFQ,EAEPF,GAFO,CAAT;AAKA,QAAMG,OAAO,GAAGb,SAAS,EAAzB;;AAEA,QAAMY,MAAM,GAAG,YAAW;AACtB,UAAME,KAAK,CAAE,+BAAF,CAAL,CACDC,IADC,CACIC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADf,EAEDF,IAFC,CAEIG,MAAM,IAAE;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAP,MAAAA,MAAM,CAACO,MAAD,CAAN;AACH,KALC,CAAN;AAOH,GARD;;AASA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,gBACKR,GAAG,CAACW,GAAJ,CAAQC,GAAG,iBACR,QAAC,IAAD;AAAM,QAAA,SAAS,EAAET,OAAO,CAACX,IAAzB;AAA+B,QAAA,SAAS,EAAE,GAA1C;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,SAAS,EAAGW,OAAO,CAACR,MAAjC;AAAA,kCACI,QAAC,MAAD;AAAA,sBAASiB,GAAG,CAACC,IAAJ,CAAS,CAAT;AAAT;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAA,4BAAcD,GAAG,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,UAAD;AAAA,4BAAcD,GAAG,CAACE,KAAJ,CAAUC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,UAAD;AAAA,4BAAcH,GAAG,CAACI,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,UAAD;AAAA,4BAAcJ,GAAG,CAACK,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI,QAAC,UAAD;AAAA,4BAAcL,GAAG,CAACM,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA3CD;;GAAMnB,M;UAScT,S;;;KATdS,M;AA6CN,eAAeA,MAAf","sourcesContent":["import {Avatar, Button, Card, CardContent, makeStyles, Paper, Typography} from '@material-ui/core'\r\nimport { useEffect, useState } from 'react';\r\nimport { CallMissedSharp, Code, Description, Http, SettingsSharp, Storage, Web } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        margin:theme.spacing(2)\r\n\r\n    },\r\n    fields:{\r\n        padding:theme.spacing(2),\r\n        display:'flex',\r\n        justifyContent:'space-between'\r\n    },\r\n    \r\n}))\r\n\r\n\r\nconst Manage = () => {\r\n    \r\n    const [POS, SetPOS] = useState([])\r\n\r\n    useEffect(()=>{\r\n        getPos()\r\n    },POS)\r\n\r\n\r\n    const classes = useStyles()\r\n\r\n    const getPos = async () =>{\r\n        await fetch(`http://localhost:5000/api/POS`)\r\n            .then(Response =>Response.json())\r\n            .then(result=>{\r\n                console.log(result)\r\n                SetPOS(result)\r\n            })\r\n            \r\n    }\r\n    return ( \r\n        <div>\r\n            <Typography>Toutes les Procedures d'Ouverture de Service (POS)</Typography>\r\n                        \r\n            <div>\r\n                {POS.map(pos => (\r\n                    <Card className={classes.root} elevation={0.5}>\r\n                        <CardContent className= {classes.fields} > \r\n                            <Avatar>{pos.name[0]}</Avatar>\r\n                            <Typography> {pos.name}</Typography>\r\n                            <Typography> {pos.Arret.length}</Typography>\r\n                            <Typography> {pos.auteur}</Typography>\r\n                            <Typography> {pos.date_de_creation}</Typography>\r\n                            <Typography> {pos._id}</Typography>\r\n                        </CardContent>\r\n                   </Card>\r\n                    \r\n                    \r\n                ))}\r\n            </div>\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Manage;"]},"metadata":{},"sourceType":"module"}