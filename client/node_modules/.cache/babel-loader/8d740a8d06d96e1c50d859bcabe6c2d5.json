{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Components\\\\Actions\\\\Service.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, FormControl, Grid, InputLabel, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core';\nimport { SettingsSharp } from \"@material-ui/icons\";\nimport { useContext, useEffect, useState } from \"react\";\nimport ActionContext from \"../../Context/ActionContext\";\nimport OptionMenu from \"../Creation/OptionMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#F6F6FB',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  fields: {\n    //marginRight:theme.spacing(2),\n    width: \"100%\"\n  },\n  smallAvatar: {\n    width: theme.spacing(2.5),\n    height: theme.spacing(2.5)\n  }\n}));\n\nconst Service = ({\n  index,\n  type,\n  initialSTate\n}) => {\n  _s();\n\n  //css\n  const classes = useStyles();\n  const [action, setAction] = useState('STOP'); //létat du composant\n\n  const [state, setState] = useState({\n    initialSTate\n  }); //l'état du server\n\n  const [pingState, setPingState] = useState(\"ko\");\n  const [status, setStatus] = useState(type);\n  const [OS, SetOS] = useState(\"\");\n  const [options, setOptions] = useState({});\n  const serviceContext = React.createContext(null);\n  useEffect(() => {\n    setState(initialSTate);\n\n    if (initialSTate.action) {\n      setStatus(initialSTate.action.toLowerCase());\n    }\n  }, []); //context pour sauvegarder l'état dans le parent\n\n  const {\n    deleteAction,\n    duplicateAction,\n    saveData\n  } = useContext(ActionContext);\n\n  const saveInformations = () => {\n    if (state.service === undefined || state.server === undefined) {\n      return;\n    }\n\n    saveData({\n      index: index,\n      type: \"service\",\n      server: state.server,\n      service: state.service,\n      action: status\n    });\n  }; //test si le service existe\n\n\n  const testService = async service => {\n    if (state.server === null || pingState === \"ko\") {\n      return;\n    }\n\n    console.log(\"Testing service : \", service, \"server \", state.server);\n    fetch(`http://localhost:5000/api/PARPRE/service?name=${service}&server=${state.server}`).then(res => res.json()).then(result => console.log(result)); //.then(() => saveInformations())\n  }; //Fait un ping\n\n\n  const testPing = async server => {\n    await fetch(`http://localhost:5000/api/PARPRE?server=${server}`).then(res => res.json()).then(result => {\n      setPingState(result);\n      console.log(result.state); //saveInformations()\n\n      if (result.state === \"ok\") {}\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          container: true,\n          alignContent: \"center\",\n          direction: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(SettingsSharp, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            value: state.server,\n            id: `server- ${index}`,\n            color: \"primary\",\n            label: \"Serveur\",\n            onChange: e => setState({ ...state,\n              server: e.target.value\n            }),\n            onBlur: e => {\n              saveInformations();\n              testPing(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.fields,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              value: status,\n              onChange: e => setStatus(e.target.value),\n              onBlur: () => saveInformations(),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"stop\",\n                children: \"Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"start\",\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"status\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xl: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: state.service,\n            className: classes.fields,\n            id: `serviceName- ${index}`,\n            color: \"primary\",\n            label: \"Service\",\n            onChange: e => setState({ ...state,\n              service: e.target.value\n            }),\n            onBlur: e => saveInformations() //testService(e.target.value)\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(serviceContext.Provider, {\n                value: options,\n                children: /*#__PURE__*/_jsxDEV(OptionMenu, {\n                  index: index,\n                  deleteAction: deleteAction,\n                  duplicateAction: duplicateAction\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                my: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: classes.smallAvatar,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Service, \"iKjVVpLz0npAqU7NjTrE81vN3YY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Service;\nexport default Service;\n\nvar _c;\n\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Components/Actions/Service.js"],"names":["Avatar","Box","FormControl","Grid","InputLabel","MenuItem","Paper","Select","TextField","Typography","makeStyles","SettingsSharp","useContext","useEffect","useState","ActionContext","OptionMenu","useStyles","theme","root","background","padding","spacing","marginBottom","fields","width","smallAvatar","height","Service","index","type","initialSTate","classes","action","setAction","state","setState","pingState","setPingState","status","setStatus","OS","SetOS","options","setOptions","serviceContext","React","createContext","toLowerCase","deleteAction","duplicateAction","saveData","saveInformations","service","undefined","server","testService","console","log","fetch","then","res","json","result","testPing","e","target","value"],"mappings":"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","sourcesContent":["import { Avatar, Box, FormControl, Grid, InputLabel, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { SettingsSharp } from \"@material-ui/icons\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport ActionContext from \"../../Context/ActionContext\"\r\nimport OptionMenu from \"../Creation/OptionMenu\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: '#F6F6FB',\r\n        padding: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n\r\n    },\r\n    fields: {\r\n        //marginRight:theme.spacing(2),\r\n        width: \"100%\"\r\n    },\r\n    smallAvatar: {\r\n        width: theme.spacing(2.5),\r\n        height: theme.spacing(2.5)\r\n    }\r\n}))\r\nconst Service = ({ index, type, initialSTate }) => {\r\n    //css\r\n    const classes = useStyles()\r\n\r\n    const [action, setAction] = useState('STOP')\r\n    //létat du composant\r\n    const [state, setState] = useState({ initialSTate })\r\n    //l'état du server\r\n    const [pingState, setPingState] = useState(\"ko\")\r\n    const [status, setStatus] = useState(type)\r\n    const [OS, SetOS] = useState(\"\")\r\n    const [options, setOptions] = useState({})\r\n    const serviceContext = React.createContext(null)\r\n\r\n    useEffect(() => {\r\n        setState(initialSTate)\r\n        if (initialSTate.action) {\r\n            setStatus(initialSTate.action.toLowerCase())\r\n        }\r\n\r\n    }, []\r\n    )\r\n\r\n\r\n    //context pour sauvegarder l'état dans le parent\r\n    const { deleteAction, duplicateAction, saveData } = useContext(ActionContext)\r\n\r\n\r\n    const saveInformations = () => {\r\n        if (state.service === undefined || state.server === undefined) { return }\r\n        saveData(\r\n            {\r\n                index: index, type: \"service\", server: state.server, service: state.service, action: status\r\n            }\r\n        )\r\n    }\r\n    //test si le service existe\r\n    const testService = async (service) => {\r\n\r\n        if (state.server === null || pingState === \"ko\") { return }\r\n\r\n        console.log(\"Testing service : \", service, \"server \", state.server)\r\n        fetch(`http://localhost:5000/api/PARPRE/service?name=${service}&server=${state.server}`)\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n        //.then(() => saveInformations())\r\n    }\r\n    //Fait un ping\r\n    const testPing = async (server) => {\r\n\r\n\r\n        await fetch(`http://localhost:5000/api/PARPRE?server=${server}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setPingState(result)\r\n                console.log(result.state)\r\n                //saveInformations()\r\n\r\n                if (result.state === \"ok\") {\r\n\r\n                }\r\n\r\n            }\r\n            )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paper\r\n                elevation={0}\r\n                className={classes.root}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item md={1} xl={1} container alignContent=\"center\" direction=\"column\" >\r\n                        <Box display=\"flex\" justifyContent=\"center\">\r\n                            <SettingsSharp color=\"primary\" />\r\n                        </Box>\r\n\r\n\r\n                    </Grid>\r\n                    <Grid item md={2} xl={2}>\r\n                        <TextField\r\n                            className={classes.fields}\r\n                            value={state.server}\r\n                            id={`server- ${index}`}\r\n                            color='primary'\r\n                            label='Serveur'\r\n                            onChange={(e) => setState({ ...state, server: e.target.value })}\r\n                            onBlur={(e) => {\r\n                                saveInformations()\r\n\r\n                                testPing(e.target.value)\r\n\r\n                            }\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={2} xl={2}>\r\n                        <FormControl className={classes.fields}>\r\n                            <InputLabel>Action</InputLabel>\r\n                            <Select\r\n                                fullWidth\r\n                                value={status}\r\n                                onChange={(e) => setStatus(e.target.value)} onBlur={() => saveInformations()}\r\n\r\n                            >\r\n\r\n                                <MenuItem value=\"stop\">Stop</MenuItem>\r\n                                <MenuItem value=\"start\">Start</MenuItem>\r\n                                <MenuItem value=\"status\" >Status</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={6} xl={6}>\r\n                        <TextField\r\n                            value={state.service}\r\n                            className={classes.fields}\r\n                            id={`serviceName- ${index}`}\r\n                            color='primary'\r\n                            label='Service'\r\n                            onChange={(e) => setState({ ...state, service: e.target.value })}\r\n                            onBlur={(e) => saveInformations()}\r\n                        //testService(e.target.value)\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={1} xl={1}  >\r\n                        <Grid container spacing={3} alignItems=\"center\" >\r\n                            <Grid item md={6} >\r\n                                <serviceContext.Provider value={options}>\r\n                                    <OptionMenu index={index}  deleteAction={deleteAction} duplicateAction={duplicateAction} />\r\n\r\n                                </serviceContext.Provider>\r\n                            </Grid>\r\n\r\n                            <Grid item md={6}>\r\n                                <Box my=\"auto\" >\r\n                                    <Avatar className={classes.smallAvatar} >\r\n\r\n                                        <Typography>\r\n                                            {index + 1}\r\n                                        </Typography>\r\n                                    </Avatar>\r\n\r\n                                </Box>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Service;"]},"metadata":{},"sourceType":"module"}