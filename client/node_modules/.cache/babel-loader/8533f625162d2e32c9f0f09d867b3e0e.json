{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Components\\\\Actions\\\\Process.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core';\nimport { Delete, FileCopy, MoreVert, Code, Autorenew } from \"@material-ui/icons\";\nimport { useContext, useState, useEffect } from \"react\";\nimport ActionContext from \"../../Context/ActionContext\";\nimport OptionMenu from \"../Creation/OptionMenu\";\nimport OptionDialog from \"../Creation/OptionDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#F6F6FB',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  fields: {\n    width: \"100%\"\n  },\n  smallAvatar: {\n    width: theme.spacing(2.5),\n    height: theme.spacing(2.5)\n  }\n}));\n\nconst Process = ({\n  index,\n  type,\n  initialSTate\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    initialSTate\n  });\n  const [status, setStatus] = useState(initialSTate.action);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [options, setOptions] = useState({\n    block: true,\n    prod: true,\n    hprod: true,\n    inte: true,\n    dev: true\n  });\n  useEffect(() => {//setState(initialSTate)\n    //setOptions(initialSTate.options)\n    //setStatus(initialSTate.action)\n  });\n  const {\n    deleteAction,\n    duplicateAction,\n    saveData,\n    AddServer\n  } = useContext(ActionContext);\n\n  const saveInformations = () => {\n    if (state.name === undefined || state.server === undefined) {\n      return;\n    }\n\n    saveData({\n      index: index,\n      type: \"process\",\n      server: state.server,\n      name: state.name,\n      action: status,\n      options: options,\n      os: \"windows\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Autorenew, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 2,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => setState({ ...state,\n              server: e.target.value\n            }),\n            onBlur: saveInformations,\n            value: state.server,\n            className: classes.fields,\n            id: \"server\",\n            color: \"primary\",\n            label: \"Serveur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 2,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.fields,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: status,\n              onChange: e => setStatus(e.target.value),\n              onBlur: saveInformations,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"stop\",\n                children: \"Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"start\",\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"status\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 6,\n          md: 6,\n          xl: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            id: \"processus\",\n            value: state.name,\n            color: \"primary\",\n            label: \"Processus\",\n            onChange: e => setState({ ...state,\n              name: e.target.value\n            }),\n            onBlur: saveInformations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          sm: 1,\n          md: 1,\n          xl: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(OptionMenu, {\n                index: index,\n                deleteAction: deleteAction,\n                duplicateAction: duplicateAction,\n                setOpenDialog: setOpenDialog\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OptionDialog, {\n                options: options,\n                saveInfos: saveInformations,\n                setOptions: setOptions,\n                openDialog: openDialog,\n                setOpenDialog: setOpenDialog\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                my: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: classes.smallAvatar,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Process, \"9OsRzLx1vz/CMqW7GHmJSO1/byk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Process;\nexport default Process;\n\nvar _c;\n\n$RefreshReg$(_c, \"Process\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Components/Actions/Process.js"],"names":["Avatar","Box","FormControl","Grid","IconButton","InputLabel","Menu","MenuItem","Paper","Select","TextField","Typography","makeStyles","Delete","FileCopy","MoreVert","Code","Autorenew","useContext","useState","useEffect","ActionContext","OptionMenu","OptionDialog","useStyles","theme","root","background","padding","spacing","marginBottom","fields","width","smallAvatar","height","Process","index","type","initialSTate","classes","state","setState","status","setStatus","action","openDialog","setOpenDialog","options","setOptions","block","prod","hprod","inte","dev","deleteAction","duplicateAction","saveData","AddServer","saveInformations","name","undefined","server","os","e","target","value"],"mappings":"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","sourcesContent":["import { Avatar, Box, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Delete, FileCopy, MoreVert, Code, Autorenew } from \"@material-ui/icons\"\r\nimport { useContext, useState, useEffect } from \"react\"\r\nimport ActionContext from \"../../Context/ActionContext\"\r\nimport OptionMenu from \"../Creation/OptionMenu\"\r\nimport OptionDialog from \"../Creation/OptionDialog\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: '#F6F6FB',\r\n        padding: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n\r\n    },\r\n    fields: {\r\n        width: \"100%\"\r\n\r\n    },\r\n    smallAvatar: {\r\n        width: theme.spacing(2.5),\r\n        height: theme.spacing(2.5)\r\n    }\r\n}))\r\nconst Process = ({ index, type, initialSTate }) => {\r\n    const classes = useStyles()\r\n    const [state, setState] = useState({ initialSTate })\r\n    const [status, setStatus] = useState(initialSTate.action)\r\n    const [openDialog, setOpenDialog] = useState(false)\r\n\r\n    const [options, setOptions] = useState({\r\n        block: true,\r\n        prod: true,\r\n        hprod: true,\r\n        inte: true,\r\n        dev: true,\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        //setState(initialSTate)\r\n        //setOptions(initialSTate.options)\r\n\r\n        //setStatus(initialSTate.action)\r\n        \r\n    }\r\n    )\r\n\r\n    const { deleteAction, duplicateAction, saveData, AddServer } = useContext(ActionContext)\r\n\r\n    const saveInformations = () => {\r\n        if (state.name === undefined || state.server === undefined) { return }\r\n\r\n        saveData(\r\n            {\r\n                index: index, type: \"process\", server: state.server, name: state.name, action: status, options: options,\r\n\r\n                os: \"windows\"\r\n\r\n            }\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <Paper\r\n                elevation={0}\r\n                className={classes.root}>\r\n                <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    spacing={2}\r\n                >\r\n\r\n                    <Grid item md={1} xl={1}  >\r\n                        <Box display=\"flex\" justifyContent=\"center\">\r\n                            <Autorenew color=\"primary\" />\r\n                        </Box>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2} md={2} xl={2}>\r\n                        <TextField\r\n                            onChange={(e) => setState({ ...state, server: e.target.value })}\r\n                            onBlur={saveInformations}\r\n                            value={state.server}\r\n\r\n                            className={classes.fields}\r\n                            id='server'\r\n                            color='primary'\r\n                            label='Serveur' />\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2} md={2} xl={2}>\r\n                        <FormControl className={classes.fields}>\r\n                            <InputLabel>Action</InputLabel>\r\n                            <Select value={status} onChange={(e) => setStatus(e.target.value)} onBlur={saveInformations} >\r\n                                <MenuItem value=\"stop\">Stop</MenuItem>\r\n                                <MenuItem value=\"start\">Start</MenuItem>\r\n                                <MenuItem value=\"status\" >Status</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6} md={6} xl={6}>\r\n                        <TextField\r\n                            className={classes.fields}\r\n                            id='processus'\r\n                            value={state.name}\r\n                            color='primary'\r\n                            label='Processus'\r\n                            onChange={(e) => setState({ ...state, name: e.target.value })}\r\n                            onBlur={saveInformations}\r\n\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={1} sm={1} md={1} xl={1}>\r\n                        <Grid container spacing={3} alignItems=\"center\" >\r\n                            <Grid item md={6} >\r\n                                <OptionMenu\r\n                                    index={index}\r\n                                    deleteAction={deleteAction}\r\n                                    duplicateAction={duplicateAction}\r\n                                    setOpenDialog={setOpenDialog}\r\n                                />\r\n                                <OptionDialog\r\n                                    options={options}\r\n                                    saveInfos={saveInformations}\r\n                                    setOptions={setOptions}\r\n                                    openDialog={openDialog}\r\n                                    setOpenDialog={setOpenDialog}\r\n                                />\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item md={6}>\r\n                                <Box my=\"auto\" >\r\n                                    <Avatar className={classes.smallAvatar} >\r\n\r\n                                        <Typography>\r\n                                            {index + 1}\r\n                                        </Typography>\r\n                                    </Avatar>\r\n\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Process;"]},"metadata":{},"sourceType":"module"}