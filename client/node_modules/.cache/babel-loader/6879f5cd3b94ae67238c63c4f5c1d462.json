{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Pages\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport { FormControl, FormControlLabel, FormGroup, FormLabel, Grid, makeStyles, Radio, RadioGroup, Switch, TextField, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport ARCard from \"../Components/ARCard\";\nimport RightNav from \"../Components/Creation/RightNav\";\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidthRight = 260;\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      width: `calc(100% - ${drawerWidthRight}px)`\n    }\n  };\n});\n\nconst Create = () => {\n  _s();\n\n  const [titleOpen, setTitleOpen] = useState(false); //titre de la parpre ou de la POS\n\n  const [title, setTitle] = useState(\"APPXXXX_SSA\"); //les actions d'arrêt\n\n  const [StopActions, setStopActions] = useState([]); //les Actions de relance\n\n  const [StartActions, setStartActions] = useState([]); //les Actions auto relance\n\n  const [AutoStartActions, setAutoStartActions] = useState([]); //les Actions POS\n\n  const [posActions, setPosActions] = useState([]); //creation automatique de la verification\n\n  const [autoCreate, setAutoCreate] = useState(false); //Si on fait la relance automatiquement\n\n  const [autoRelance, setAutoRelance] = useState(false); //Soit PARPRE ou POS\n\n  const [documentType, setDocumentType] = useState(\"PARPRE\"); //Le mode d'utilisation: creation ou modification\n\n  const [pageMode, setPageMode] = useState(\"Création\");\n  const history = useHistory(); //La page de création et la page de modifiation sont les mêmes, la difference est assurée par pageMode\n\n  useEffect(() => {\n    document.title = \"Création de PARPRE / POS\";\n\n    if (history.location.state !== undefined) {\n      document.title = `Modification de ${history.location.state.name}`;\n      console.log(\"History \", history.location);\n      setPageMode(\"Modification\");\n      setDocumentType(history.location.state.type);\n      setStopActions(history.location.state.Arret);\n      setStartActions(history.location.state.Relance);\n      setDocumentType(history.location.state.type || \"PARPRE\"); //setPosActions(history.location.state.pos)\n\n      setTitle(history.location.state.name);\n      initialServers = history.location.state.variables.map((variable, index) => {\n        return {\n          id: index,\n          prod: variable.prod,\n          hprod: variable.hprod,\n          dev: variable.dev\n        };\n      });\n      setServers(initialServers);\n    }\n  }, []);\n  const [servers, setServers] = useState([]);\n\n  const saveServer = () => {\n    //noms des serveurs dans la lste des variables\n    var Allservers = servers.map(server => {\n      return server.prod;\n    });\n    var serversInStopActions = new Set(); //on recupere les servers dans les etapes d'arret\n\n    StopActions.map(action => {\n      if (action.server === undefined || action.server === \"\") {\n        return;\n      }\n\n      ;\n      serversInStopActions.add(action.server.toLowerCase());\n    }); //on rajoute les serveurs manquants\n\n    serversInStopActions.forEach(server => {\n      if (!Allservers.includes(server)) {\n        Allservers.push(server);\n        setServers([...servers, {\n          id: servers.length + 1,\n          prod: server,\n          hprod: \"definir\",\n          dev: \"definir\"\n        }]);\n      }\n    }); //On enleve les serveurs absents dans la liste des actions\n\n    Allservers.map(server => {\n      if (!serversInStopActions.has(server)) {\n        const newServerState = servers.filter(serverprod => serverprod.prod !== server);\n        setServers(newServerState);\n      }\n    });\n  };\n\n  const classes = useStyles();\n\n  const saveStart = object => {\n    setStartActions(object);\n    setAutoStartActions(object);\n  };\n\n  const saveStop = object => {\n    setStopActions(object); // if(autoRelance)\n    //reverseStopAction(object)\n\n    saveServer(object);\n  };\n\n  const reverseStopAction = actions => {\n    var newRelance = actions.slice(0).reverse().map(action => {\n      if (action.type === \"service\" || action.type === \"database\" || action.type === \"process\") {\n        if (action.action === \"status\") {\n          action = { ...action,\n            action: \"start\"\n          };\n        } else {\n          action = { ...action,\n            action: \"status\",\n            options: {\n              result: \"running\"\n            }\n          };\n        }\n      }\n\n      if (action.type === \"script\") {\n        action = { ...action,\n          path: \"\"\n        };\n      }\n\n      if (action.type === \"command\") {\n        action = { ...action,\n          name: \"\",\n          result: \"\"\n        };\n      }\n\n      return action;\n    }); //console.log(\"stopAction \",StopActions)\n    //console.log(\"new relance : \",newRelance)\n\n    console.log(\"input : \", actions);\n\n    for (var i = 0; i < newRelance.length; i++) {\n      if (newRelance[i]) {\n        newRelance[i].index = i;\n      }\n    }\n\n    setAutoStartActions(newRelance);\n    console.log(\"actions \", actions, \" vs \", newRelance);\n  };\n\n  const generateJson = () => {\n    console.log(\"name \", title);\n    const parpre = {\n      name: title,\n      auteur: \"Samba NDIAYE\",\n      date_de_creation: new Date().toLocaleString(),\n      type: documentType,\n      Arret: StopActions,\n      Relance: autoRelance ? AutoStartActions : StopActions,\n      variables: {\n        servers: servers\n      }\n    };\n    axios.post(`http://localhost:5000/api/PARPRE/create`, parpre).then(res => console.log(res));\n    console.log(JSON.stringify(parpre));\n  };\n\n  const generatePOS = () => {\n    const pos = {\n      name: title,\n      auteur: \"Samba NDIAYE\",\n      date_de_creation: new Date().toLocaleString(),\n      type: documentType,\n      etapes: posActions\n    }; //axios.post(`http://localhost:5000/api/PARPRE/create`, pos)\n    //    .then(res => console.log(res))\n\n    console.log(JSON.stringify(pos));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 6,\n        children: titleOpen ? /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"Changer le titre\",\n          onBlur: () => setTitleOpen(false),\n          margin: \"dense\",\n          onChange: e => setTitle(e.target.value),\n          autoFocus: true,\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            onClick: () => setTitleOpen(true),\n            children: [\"Nom : \", title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: documentType === \"PARPRE\" ? /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              onChange: () => {\n                reverseStopAction(StopActions);\n                setAutoRelance(!autoRelance);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 40\n            }, this),\n            checked: autoRelance,\n            label: \"Relance-Auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: documentType,\n          onChange: e => setDocumentType(e.target.value),\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"POS\",\n              label: \"POS\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 80\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"PARPRE\",\n              label: \"PARPRE\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 86\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), documentType === \"POS\" ? /*#__PURE__*/_jsxDEV(ARCard, {\n      name: \"Proc\\xE9dure d'Ouverture de Service\",\n      type: \"status\",\n      actions: posActions,\n      SetActions: setPosActions,\n      generateJson: generatePOS\n    }, 4, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ARCard, {\n        name: \"Arr\\xEAt\",\n        type: \"stop\",\n        actions: StopActions,\n        SetActions: saveStop,\n        autoRelance: autoRelance,\n        AddServer: saveServer,\n        generateJson: generateJson\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }, this), autoRelance ? /*#__PURE__*/_jsxDEV(ARCard, {\n        name: \"Auto-Relance\",\n        type: \"start\",\n        actions: AutoStartActions,\n        SetActions: setAutoStartActions,\n        autoRelance: autoRelance,\n        AddServer: saveServer,\n        generateJson: generateJson\n      }, 2, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(ARCard, {\n        name: \"Relance\",\n        type: \"start\",\n        actions: StartActions,\n        SetActions: saveStart,\n        AddServer: saveServer\n      }, 3, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RightNav, {\n      ServerRow: servers,\n      saveRows: setServers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"pQdv14E6ZziuHmCe1hZl+YESLHM=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Pages/Create.js"],"names":["FormControl","FormControlLabel","FormGroup","FormLabel","Grid","makeStyles","Radio","RadioGroup","Switch","TextField","Typography","axios","useEffect","useState","ARCard","RightNav","useHistory","drawerWidthRight","useStyles","theme","root","width","Create","titleOpen","setTitleOpen","title","setTitle","StopActions","setStopActions","StartActions","setStartActions","AutoStartActions","setAutoStartActions","posActions","setPosActions","autoCreate","setAutoCreate","autoRelance","setAutoRelance","documentType","setDocumentType","pageMode","setPageMode","history","document","location","state","undefined","name","console","log","type","Arret","Relance","initialServers","variables","map","variable","index","id","prod","hprod","dev","setServers","servers","saveServer","Allservers","server","serversInStopActions","Set","action","add","toLowerCase","forEach","includes","push","length","has","newServerState","filter","serverprod","classes","saveStart","object","saveStop","reverseStopAction","actions","newRelance","slice","reverse","options","result","path","i","generateJson","parpre","auteur","date_de_creation","Date","toLocaleString","post","then","res","JSON","stringify","generatePOS","pos","etapes","e","target","value"],"mappings":"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","sourcesContent":["import { FormControl, FormControlLabel, FormGroup, FormLabel, Grid, makeStyles, Radio, RadioGroup, Switch, TextField, Typography } from \"@material-ui/core\"\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ARCard from \"../Components/ARCard\"\r\nimport RightNav from \"../Components/Creation/RightNav\";\r\nimport {useHistory} from 'react-router'\r\n\r\nconst drawerWidthRight = 260\r\n\r\nconst useStyles = makeStyles((theme) =>{\r\n    return{\r\n        root:{\r\n            width:`calc(100% - ${drawerWidthRight}px)`   \r\n        }\r\n\r\n}})\r\n\r\n\r\nconst Create = () => {\r\n\r\n    const [titleOpen, setTitleOpen] = useState(false)\r\n    //titre de la parpre ou de la POS\r\n    const [title, setTitle] = useState(\"APPXXXX_SSA\")\r\n    //les actions d'arrêt\r\n    const [StopActions, setStopActions] = useState([])\r\n    //les Actions de relance\r\n    const [StartActions, setStartActions] = useState([])\r\n    //les Actions auto relance\r\n    const [AutoStartActions, setAutoStartActions] = useState([])\r\n    //les Actions POS\r\n    const [posActions, setPosActions] = useState([])\r\n    //creation automatique de la verification\r\n    const [autoCreate, setAutoCreate] = useState(false)\r\n    //Si on fait la relance automatiquement\r\n    const [autoRelance, setAutoRelance] = useState(false)\r\n    //Soit PARPRE ou POS\r\n    const [documentType, setDocumentType] = useState(\"PARPRE\")\r\n    //Le mode d'utilisation: creation ou modification\r\n    const [pageMode, setPageMode] = useState(\"Création\")\r\n\r\n    const history = useHistory()\r\n\r\n    //La page de création et la page de modifiation sont les mêmes, la difference est assurée par pageMode\r\n    useEffect(()=>{\r\n\r\n        document.title=\"Création de PARPRE / POS\"\r\n        \r\n        if(history.location.state !== undefined){\r\n            document.title=`Modification de ${history.location.state.name}`\r\n\r\n            console.log(\"History \", history.location)\r\n            setPageMode(\"Modification\")\r\n            setDocumentType(history.location.state.type)\r\n            setStopActions(history.location.state.Arret)\r\n            setStartActions(history.location.state.Relance)\r\n            setDocumentType(history.location.state.type || \"PARPRE\")\r\n            //setPosActions(history.location.state.pos)\r\n            setTitle(history.location.state.name)\r\n\r\n            initialServers = history.location.state.variables.map((variable,index) => {\r\n                return {\r\n                    id:index,\r\n                    prod:variable.prod,\r\n                    hprod:variable.hprod,\r\n                    dev:variable.dev\r\n                }\r\n            })\r\n            setServers(initialServers)\r\n        }\r\n    },[])\r\n\r\n    const [servers, setServers] = useState([])\r\n\r\n    const saveServer = () =>{\r\n        \r\n        //noms des serveurs dans la lste des variables\r\n        var Allservers = servers.map(server => {return server.prod})\r\n                \r\n        var serversInStopActions = new Set()\r\n\r\n        //on recupere les servers dans les etapes d'arret\r\n        StopActions.map(action => {\r\n            if(action.server === undefined || action.server === \"\"){return};\r\n            serversInStopActions.add(action.server.toLowerCase())\r\n        })\r\n\r\n        //on rajoute les serveurs manquants\r\n        serversInStopActions.forEach(server => {\r\n            \r\n            if(!Allservers.includes(server)){\r\n                Allservers.push(server)\r\n                setServers([...servers, { id : (servers.length + 1),prod : server,hprod:\"definir\",dev:\"definir\"}])\r\n\r\n            }\r\n        })\r\n\r\n        //On enleve les serveurs absents dans la liste des actions\r\n        Allservers.map(server => {\r\n            if(!serversInStopActions.has(server)){\r\n                const newServerState = servers.filter(serverprod => serverprod.prod !== server)\r\n                setServers(newServerState)\r\n\r\n            }\r\n        })        \r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    const saveStart = (object) =>{\r\n        setStartActions(object)\r\n        setAutoStartActions(object)\r\n        \r\n    }\r\n\r\n\r\n    const saveStop = (object) =>{\r\n        setStopActions(object)\r\n        \r\n       // if(autoRelance)\r\n            //reverseStopAction(object)\r\n        \r\n        saveServer(object)\r\n    }\r\n\r\n        \r\n\r\n    const reverseStopAction = (actions) =>{\r\n        var newRelance = actions.slice(0).reverse().map(action => {\r\n            if(action.type === \"service\" || action.type === \"database\" || action.type === \"process\"){\r\n                if(action.action === \"status\"){\r\n                    action = {...action, action:\"start\"}\r\n                }else{\r\n                    action = {...action, action:\"status\",options:{result : \"running\"}}                    \r\n                }\r\n                \r\n            }\r\n            if(action.type === \"script\"){\r\n                action = {...action, path:\"\"}\r\n                \r\n            }\r\n            if(action.type === \"command\"){\r\n                action = {...action, name:\"\", result:\"\"}\r\n            }\r\n            return action\r\n        })\r\n        //console.log(\"stopAction \",StopActions)\r\n        //console.log(\"new relance : \",newRelance)\r\n        console.log(\"input : \",actions)\r\n        for( var i=0 ; i < newRelance.length ;i++){\r\n            if(newRelance[i]){\r\n                newRelance[i].index = i\r\n            }\r\n            \r\n        }\r\n        setAutoStartActions(newRelance)\r\n        console.log(\"actions \",actions,\" vs \",newRelance)\r\n    }\r\n\r\n    const generateJson =  () => {\r\n\r\n        console.log(\"name \",title)\r\n\r\n        const parpre = {\r\n            name : title ,\r\n            auteur: \"Samba NDIAYE\", \r\n            date_de_creation : new Date().toLocaleString(),\r\n            type:documentType, \r\n            Arret : StopActions, \r\n            Relance: autoRelance ?  AutoStartActions :StopActions ,\r\n            variables:{\r\n                servers:servers\r\n            }\r\n        }\r\n\r\n        axios.post(`http://localhost:5000/api/PARPRE/create`, parpre)\r\n            .then(res => console.log(res))\r\n            \r\n        console.log(JSON.stringify(parpre))\r\n    }\r\n    const generatePOS =  () => {\r\n\r\n        const pos = {\r\n            name : title ,\r\n            auteur: \"Samba NDIAYE\", \r\n            date_de_creation : new Date().toLocaleString(),\r\n            type:documentType,             \r\n            etapes: posActions\r\n        }\r\n\r\n        //axios.post(`http://localhost:5000/api/PARPRE/create`, pos)\r\n        //    .then(res => console.log(res))\r\n            \r\n        console.log(JSON.stringify(pos))\r\n    }\r\n\r\n    return ( \r\n        \r\n\r\n        <div className={classes.root}>   \r\n            <Grid container spacing={2}>     \r\n                <Grid item md={6}>\r\n                { \r\n                    titleOpen ? \r\n                    (\r\n                        <TextField \r\n                        placeholder=\"Changer le titre\"\r\n                        onBlur={() => setTitleOpen(false)}\r\n                        margin=\"dense\"\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        autoFocus\r\n                        value={title}\r\n                        >\r\n                            \r\n                        </TextField>\r\n                    ) \r\n                    : \r\n                    (\r\n                        <div>\r\n                            <Typography \r\n                            variant='h6'\r\n                            gutterBottom\r\n                            onClick={() => setTitleOpen(true)}\r\n                            >\r\n                                Nom : {title}\r\n\r\n                            </Typography>\r\n                        </div>\r\n                    )\r\n                }    \r\n                </Grid>   \r\n\r\n                {/**\r\n                 <Grid item md={2}>\r\n                  <FormGroup>\r\n                        <FormControlLabel\r\n                            control = {<Switch onChange={()=> setAutoCreate(!autoCreate)}/>}\r\n                            checked={autoCreate}\r\n                            label = \"Verification-Auto\"\r\n                        >\r\n                        \r\n\r\n                        </FormControlLabel>\r\n                        \r\n                    </FormGroup>\r\n                    </Grid> \r\n                 */}\r\n               \r\n                \r\n\r\n                <Grid item md={3}>\r\n                    <FormGroup>\r\n                        {documentType === \"PARPRE\" ? \r\n                        (\r\n                        <FormControlLabel\r\n                            control = {<Switch onChange={()=> {reverseStopAction(StopActions);setAutoRelance(!autoRelance)}}/>}\r\n                            checked={autoRelance}\r\n                            label = \"Relance-Auto\"\r\n                        >\r\n                        </FormControlLabel>\r\n                        )\r\n                        :\r\n                        (\r\n                            null\r\n                        )\r\n                        }\r\n                    </FormGroup>\r\n                    \r\n                </Grid>  \r\n                <Grid item md={3}>\r\n                    \r\n                    <RadioGroup value={documentType} onChange={(e) => setDocumentType(e.target.value)}>\r\n                        <FormGroup row >\r\n                            <FormControlLabel value=\"POS\" label=\"POS\" control={<Radio color=\"primary\" />} />\r\n                            <FormControlLabel value=\"PARPRE\" label=\"PARPRE\" control={<Radio color=\"primary\" />} />\r\n                        </FormGroup>\r\n                    </RadioGroup>                       \r\n                   \r\n                </Grid>  \r\n                \r\n            </Grid>\r\n            \r\n            {\r\n                documentType === \"POS\" ?\r\n            \r\n            (\r\n                <ARCard \r\n                 name=\"Procédure d'Ouverture de Service\" \r\n                 type=\"status\" \r\n                 actions={posActions} \r\n                 SetActions={setPosActions} \r\n                 generateJson={generatePOS}\r\n                 key={4}\r\n                />\r\n            ) \r\n            :\r\n            (\r\n            <div>\r\n            <ARCard \r\n                    name=\"Arrêt\" \r\n                    type=\"stop\" \r\n                    actions={StopActions} \r\n                    SetActions={saveStop} \r\n                    autoRelance = {autoRelance}\r\n                    AddServer={saveServer}\r\n                    generateJson={generateJson}\r\n                    key={1}\r\n                      \r\n                />\r\n                {autoRelance ? \r\n                (<ARCard \r\n                    name=\"Auto-Relance\" \r\n                    type=\"start\" \r\n                    actions={AutoStartActions} \r\n                    SetActions={setAutoStartActions} \r\n                    autoRelance = {autoRelance}\r\n                    AddServer={saveServer}\r\n                    generateJson={generateJson}\r\n                    key={2}\r\n                      \r\n                />\r\n                )\r\n                :\r\n                (<ARCard \r\n                    name=\"Relance\" \r\n                    type=\"start\"\r\n                    actions = {StartActions} \r\n                    SetActions = {saveStart} \r\n                    AddServer={saveServer} \r\n                    key={3}\r\n                />\r\n                \r\n                )\r\n                }\r\n            </div>\r\n            )    \r\n        }    \r\n                \r\n                <RightNav ServerRow={servers} saveRows={setServers} />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;"]},"metadata":{},"sourceType":"module"}