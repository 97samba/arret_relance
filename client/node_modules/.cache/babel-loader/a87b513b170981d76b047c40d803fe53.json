{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\src\\\\Components\\\\ARCard.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Box, Container, makeStyles, Paper } from '@material-ui/core';\nimport { Code, Description, KeyboardArrowRight, SettingsSharp, Storage } from '@material-ui/icons';\nimport Service from './Actions/Service';\nimport Database from './Actions/Database';\nimport Command from './Actions/Command';\nimport ARScript from './Actions/ARScript';\nimport { useEffect, useState } from 'react';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\nimport ActionContext from '../Context/ActionContext';\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardWidth = 750;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: cardWidth,\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst ARCard = ({\n  name\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [actions, SetActions] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/Actions\"); //.then(res => res.json())\n    //.then(data => SetActions(data))\n  }, []);\n\n  const AddScript = () => {\n    console.log(\"script\");\n    const newState = [...actions, {\n      index: index,\n      id: uuid(),\n      type: 'script'\n    }];\n    SetActions(newState);\n    setIndex(index + 1);\n  };\n\n  const AddDB = () => {\n    console.log(\"db\");\n    const newState = [...actions, {\n      index: index,\n      id: uuid(),\n      type: 'database'\n    }];\n    SetActions(newState);\n    setIndex(index + 1);\n  };\n\n  const AddCommand = () => {\n    console.log(\"cmd\");\n    const newState = [...actions, {\n      index: index,\n      id: uuid(),\n      type: 'command'\n    }];\n    SetActions(newState);\n    setIndex(index + 1);\n  };\n\n  const AddService = () => {\n    const newState = [...actions, {\n      index: index,\n      id: uuid(),\n      type: 'service'\n    }];\n    SetActions(newState);\n    setIndex(index + 1); //console.log(actions)\n\n    {\n      /* \r\n         fetch('http://localhost:8000/Actions',{\r\n         method: 'POST',\r\n         headers:{\"Content-type\": \"application/json\"},\r\n         body: JSON.stringify(action)\r\n      })\r\n      */\n    }\n  };\n\n  const deleteAction = actionID => {\n    const newState = actions.filter(action => action.id !== actionID);\n    console.log(actionID, actions, newState);\n    SetActions(newState);\n  };\n\n  const duplicateAction = actionID => {\n    var actionToDuplicateIndex = actions.findIndex(e => e.id === actionID);\n    const clone = actions[actionToDuplicateIndex];\n    const newClone = { ...clone,\n      id: uuid()\n    };\n    actionToDuplicateIndex = actionToDuplicateIndex + 1;\n    actions.splice(actionToDuplicateIndex, 0, newClone);\n    SetActions(actions);\n  };\n\n  const saveData = object => {\n    const result = Object.values(data).filter(e => e.id === object.id);\n\n    if (result.length > 0) {\n      const index = data.findIndex(e => e.id === object.id);\n      console.log('Changement', data[index]);\n      data.splice(index, 1);\n      setData([...data, object]);\n      console.log(\"datas : \", data); //console.log(\"datas : \", data)\n      //console.log('filter',newState, \"index\",index)\n    } else {\n      console.log(\"Nouvelle entrée\");\n      const newState = [...data, object];\n      setData(newState); //console.log('filter',result)\n    }\n  };\n\n  const iconsAction = [{\n    icon: /*#__PURE__*/_jsxDEV(SettingsSharp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }, this),\n    name: 'Service',\n    action: AddService\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Code, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this),\n    name: 'Commande',\n    action: AddCommand\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this),\n    name: 'Script',\n    action: AddScript\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Storage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this),\n    name: 'Base de données',\n    action: AddDB\n  }];\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        m: 2,\n        children: /*#__PURE__*/_jsxDEV(SpeedDial, {\n          ariaLabel: \"SpeedDial\",\n          icon: /*#__PURE__*/_jsxDEV(SpeedDialIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 27\n          }, this),\n          open: open,\n          direction: \"left\",\n          onOpen: handleOpen,\n          onMouseLeave: handleClose,\n          children: iconsAction.map(action => /*#__PURE__*/_jsxDEV(SpeedDialAction, {\n            icon: action.icon,\n            tooltipTitle: action.name,\n            tooltipPlacement: \"top\",\n            onClick: action.action\n          }, action.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        m: 2,\n        children: /*#__PURE__*/_jsxDEV(ActionContext.Provider, {\n          value: {\n            actions,\n            deleteAction,\n            duplicateAction,\n            saveData\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"on\",\n            children: [actions.map(item => item.type === \"service\" ? /*#__PURE__*/_jsxDEV(Service, {\n              actionID: item.id,\n              index: item.index\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 65\n            }, this) : item.type === \"script\" ? /*#__PURE__*/_jsxDEV(ARScript, {\n              actionID: item.id,\n              index: item.index\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 66\n            }, this) : item.type === \"database\" ? /*#__PURE__*/_jsxDEV(Database, {\n              actionID: item.id,\n              index: item.index\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 64\n            }, this) : item.type === \"command\" ? /*#__PURE__*/_jsxDEV(Command, {\n              actionID: item.id,\n              index: item.index\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 65\n            }, this) : null), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              onClick: () => console.log(JSON.stringify(data)),\n              endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 42\n              }, this),\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ARCard, \"uOU3fizX1rDtKNp3sSi6ypK2Qnk=\", false, function () {\n  return [useStyles];\n});\n\n_c = ARCard;\nexport default ARCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ARCard\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/src/Components/ARCard.js"],"names":["Button","Box","Container","makeStyles","Paper","Code","Description","KeyboardArrowRight","SettingsSharp","Storage","Service","Database","Command","ARScript","useEffect","useState","SpeedDial","SpeedDialAction","SpeedDialIcon","ActionContext","v4","uuid","cardWidth","useStyles","theme","root","width","marginBottom","spacing","ARCard","name","classes","actions","SetActions","open","setOpen","index","setIndex","data","setData","fetch","AddScript","console","log","newState","id","type","AddDB","AddCommand","AddService","deleteAction","actionID","filter","action","duplicateAction","actionToDuplicateIndex","findIndex","e","clone","newClone","splice","saveData","object","result","Object","values","length","iconsAction","icon","handleClose","handleOpen","map","item","JSON","stringify"],"mappings":"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","sourcesContent":["import { Button,Box,  Container,  makeStyles, Paper} from '@material-ui/core'\r\nimport { Code, Description, KeyboardArrowRight, SettingsSharp, Storage } from '@material-ui/icons';\r\nimport Service from './Actions/Service';\r\nimport Database from './Actions/Database';\r\nimport Command from './Actions/Command';\r\nimport ARScript from './Actions/ARScript';\r\nimport { useEffect, useState } from 'react';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial'\r\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\r\nimport ActionContext from '../Context/ActionContext';\r\nimport {v4 as uuid} from \"uuid\";\r\n\r\n\r\nconst cardWidth = 750\r\nconst useStyles = makeStyles(theme =>({\r\n    root:{\r\n        width : cardWidth,\r\n        marginBottom : theme.spacing(2) \r\n    }\r\n}))\r\nconst ARCard = ({name}) => {\r\n    const classes = useStyles();\r\n    const [actions, SetActions] = useState([])\r\n    const [open,setOpen] = useState(false)\r\n    const [index, setIndex] = useState(0)\r\n    const [data, setData] = useState([])\r\n\r\n\r\n    useEffect(() =>{\r\n        fetch(\"http://localhost:8000/Actions\")\r\n        //.then(res => res.json())\r\n        //.then(data => SetActions(data))\r\n    },[])\r\n\r\n    const AddScript = () =>{\r\n        console.log(\"script\")\r\n        const newState = [\r\n            ...actions,{\r\n                index:index,\r\n                id: uuid(),\r\n                type:'script'\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        setIndex(index+1)\r\n    }\r\n    const AddDB = () =>{\r\n        console.log(\"db\")\r\n        const newState = [\r\n            ...actions,{\r\n                index:index,\r\n                id: uuid(),\r\n                type:'database'\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        setIndex(index+1)\r\n    }\r\n    const AddCommand = () =>{\r\n        console.log(\"cmd\")\r\n        const newState = [\r\n            ...actions,{\r\n                index:index,\r\n                id: uuid(),\r\n                type:'command'\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        setIndex(index+1)\r\n\r\n\r\n    }\r\n    const AddService = () =>{\r\n        \r\n        const newState = [\r\n            ...actions,{\r\n                index:index,\r\n                id: uuid(),\r\n                type:'service'\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        setIndex(index+1)\r\n        //console.log(actions)\r\n\r\n        {/* \r\n            fetch('http://localhost:8000/Actions',{\r\n            method: 'POST',\r\n            headers:{\"Content-type\": \"application/json\"},\r\n            body: JSON.stringify(action)\r\n        })\r\n        */}\r\n    }\r\n    const deleteAction=(actionID)=>{\r\n\r\n        const newState = actions.filter(action => action.id !== actionID)\r\n\r\n        console.log(actionID, actions, newState)\r\n        SetActions(newState)\r\n    }\r\n    const duplicateAction=(actionID)=>{\r\n        var actionToDuplicateIndex = actions.findIndex(e=>e.id === actionID)\r\n        const clone = actions[actionToDuplicateIndex]\r\n        const newClone = {...clone,id:uuid()}\r\n        actionToDuplicateIndex=actionToDuplicateIndex+1\r\n        \r\n        actions.splice(actionToDuplicateIndex,0,newClone)\r\n        SetActions(actions)\r\n\r\n    }\r\n    const saveData = (object) =>{\r\n        const result = Object.values(data).filter(e => e.id === object.id)\r\n\r\n        if (result.length > 0){\r\n\r\n            \r\n            const index = data.findIndex(e => e.id === object.id )\r\n\r\n            console.log('Changement',data[index])\r\n\r\n            data.splice(index,1)\r\n            \r\n            \r\n            setData([...data,object])\r\n            console.log(\"datas : \", data)\r\n            //console.log(\"datas : \", data)\r\n            //console.log('filter',newState, \"index\",index)\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Nouvelle entrée\")\r\n            const newState = [\r\n                ...data, object\r\n            ]\r\n            setData(newState)           \r\n            //console.log('filter',result)\r\n        }\r\n\r\n    }\r\n\r\n    const iconsAction = [\r\n        {icon : <SettingsSharp />, name: 'Service', action: AddService},\r\n        {icon : <Code />, name: 'Commande', action: AddCommand},\r\n        {icon : <Description />, name: 'Script', action: AddScript},\r\n        {icon : <Storage />, name: 'Base de données', action: AddDB}\r\n    ]\r\n    const handleClose=() =>{\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleOpen=() =>{\r\n        setOpen(true)\r\n    }\r\n\r\n    return ( \r\n        <Container>\r\n            <Paper className= {classes.root}>\r\n                <Box m={2}>\r\n                    <SpeedDial\r\n                    ariaLabel=\"SpeedDial\"\r\n                    icon={<SpeedDialIcon />}\r\n                    open={ open }\r\n                    direction = 'left'\r\n                    onOpen={handleOpen}\r\n                    onMouseLeave={handleClose}\r\n                    >\r\n                    {iconsAction.map((action) => (\r\n                        <SpeedDialAction \r\n                            key={action.name}\r\n                            icon = {action.icon}\r\n                            tooltipTitle={action.name}\r\n                            tooltipPlacement = 'top'\r\n                            onClick= {action.action}\r\n                        />\r\n                    ))}\r\n\r\n                </SpeedDial>\r\n                \r\n                </Box>\r\n\r\n                <Box m={2}>\r\n                    <ActionContext.Provider value={{actions, deleteAction, duplicateAction, saveData}}>\r\n                        <form noValidate autoComplete='on'>\r\n                            {actions.map(item => (\r\n                                (\r\n                                    item.type === \"service\" ?   <Service key={item.id} actionID={item.id} index={item.index}/> :\r\n                                    item.type === \"script\"  ?    <ARScript key={item.id} actionID={item.id} index={item.index} /> :\r\n                                    item.type === \"database\"?  <Database key={item.id} actionID={item.id} index={item.index}/> :\r\n                                    item.type === \"command\" ?   <Command key={item.id} actionID={item.id} index={item.index} /> :\r\n                                    null\r\n                                )\r\n                            ))}\r\n                            <Button\r\n                                \r\n                                color=\"secondary\" \r\n                                variant=\"contained\"\r\n                                onClick={() =>console.log(JSON.stringify(data))}\r\n                                \r\n                                endIcon={<KeyboardArrowRight />}>\r\n                                Generate\r\n                            </Button>\r\n                        </form>\r\n                    </ActionContext.Provider>\r\n                </Box>\r\n            </Paper>\r\n        </Container>\r\n     ); \r\n}\r\n \r\nexport default ARCard;"]},"metadata":{},"sourceType":"module"}