{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Components\\\\ARCard.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, makeStyles, Card, CardHeader, CardContent } from '@material-ui/core';\nimport { Autorenew, Code, Description, Http, KeyboardArrowRight, Save, SettingsSharp, Storage, Web } from '@material-ui/icons';\nimport Service from './Actions/Service';\nimport Database from './Actions/Database';\nimport Process from './Actions/Process';\nimport ARScript from './Actions/ARScript';\nimport { useEffect, useState } from 'react';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\nimport ActionContext from '../Context/ActionContext';\nimport { useHistory } from 'react-router';\nimport Link from './Actions/Link';\nimport WebAction from './Actions/WebAction';\nimport Command from './Actions/Command';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardWidth = 850;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // width : cardWidth,\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst ARCard = ({\n  name,\n  actions,\n  SetActions,\n  autoRelance,\n  type,\n  AddServer,\n  generateJson\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [index, setIndex] = useState(actions.length);\n  var second = actions.length; //console.log(\"second \", second, \" index \", index)\n\n  useEffect(() => {\n    console.log(\"nombre d'actions \", actions.length, \" actions \", actions);\n  }, []);\n\n  const testPing = server => {\n    fetch(`http://localhost:5000/api/PARPRE?server=${server}`).then(res => res.json()).then(result => {\n      console.log(\"error\");\n      return result;\n    });\n  };\n\n  const addAction = type => {\n    const newState = [...actions, {\n      index: second,\n      type: type,\n      informations: {},\n      options: {}\n    }];\n    console.log(\"new state \", newState);\n    SetActions(newState);\n    setIndex(index + 1);\n    second++;\n  };\n\n  const deleteAction = actionID => {\n    console.log(\"deleting \", actions.filter(action => action.index === actionID));\n    const newState = actions.filter(action => action.index !== actionID);\n    var i;\n\n    for (i = 0; i < newState.length; i++) {\n      newState[i].index = i;\n    }\n\n    setIndex(newState.length); //newState.map(action => console.log(action))\n\n    SetActions(newState);\n    console.log(\"index \", index);\n  };\n\n  const duplicateAction = actionID => {\n    var actionToDuplicateIndex = actionID;\n    const clone = actions[actionToDuplicateIndex];\n    console.log(\"action to duplicate\", clone, \"index \", actionToDuplicateIndex, \" actionId \", actionID);\n    const newClone = { ...clone,\n      action: \"status\"\n    };\n    actionToDuplicateIndex = actionToDuplicateIndex + 1;\n    console.log(\"action index \", actionToDuplicateIndex);\n    actions.splice(actionToDuplicateIndex, 0, newClone);\n    var i;\n\n    for (i = 0; i < actions.length; i++) {\n      actions[i].index = i; //console.log(actions[i].server)\n    } //newState.map(action => console.log(action))\n\n\n    SetActions(actions);\n    setIndex(actions.length);\n  };\n\n  const saveData = object => {\n    const result = actions.filter(e => e.index === object.index);\n\n    if (result.length > 0) {\n      const index = actions.findIndex(e => e.index === object.index);\n      console.log('Changement', actions[index]);\n      actions.splice(index, 1, object);\n      SetActions(actions);\n    } else {\n      console.log(\"Nouvelle entrée\");\n      const newState = [...actions, object];\n      SetActions(newState);\n    }\n  };\n\n  const iconsAction = [{\n    icon: /*#__PURE__*/_jsxDEV(Http, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this),\n    name: 'Url',\n    action: () => addAction(\"link\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Web, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this),\n    name: 'Action Web',\n    action: () => addAction(\"webAction\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(SettingsSharp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this),\n    name: 'Service',\n    action: () => addAction(\"service\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Autorenew, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }, this),\n    name: 'Processus',\n    action: () => addAction(\"process\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this),\n    name: 'Script',\n    action: () => addAction(\"script\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Storage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this),\n    name: 'Base de données',\n    action: () => addAction(\"database\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Code, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this),\n    name: 'Commande',\n    action: () => addAction(\"command\")\n  }]; //{icon : <Save />, name: 'Disque', action: () => addAction(\"disk\")},\n  //{icon : <AccountTree />, name: 'Disque', action: () => addAction(\"Pool\")}\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: name,\n        subheader: \"hybride\",\n        action: /*#__PURE__*/_jsxDEV(SpeedDial, {\n          ariaLabel: \"SpeedDial\",\n          icon: /*#__PURE__*/_jsxDEV(SpeedDialIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 35\n          }, this),\n          open: open,\n          direction: \"left\",\n          onOpen: () => setOpen(true),\n          onMouseLeave: () => setOpen(false),\n          children: iconsAction.map(action => /*#__PURE__*/_jsxDEV(SpeedDialAction, {\n            icon: action.icon,\n            tooltipTitle: action.name,\n            tooltipPlacement: \"top\",\n            onClick: action.action\n          }, action.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(ActionContext.Provider, {\n          value: {\n            actions,\n            deleteAction,\n            duplicateAction,\n            saveData,\n            testPing,\n            AddServer\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"on\",\n            children: [actions.map((item, index) => item.type === \"service\" ? /*#__PURE__*/_jsxDEV(Service, {\n              index: item.index,\n              type: type,\n              initialSTate: item\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 63\n            }, this) : item.type === \"script\" ? /*#__PURE__*/_jsxDEV(ARScript, {\n              index: item.index,\n              initialSTate: item\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 66\n            }, this) : item.type === \"database\" ? /*#__PURE__*/_jsxDEV(Database, {\n              index: item.index,\n              type: type,\n              initialSTate: item\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 72\n            }, this) : item.type === \"process\" ? /*#__PURE__*/_jsxDEV(Process, {\n              index: item.index,\n              type: type,\n              initialSTate: item\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 75\n            }, this) : item.type === \"link\" ? /*#__PURE__*/_jsxDEV(Link, {\n              index: item.index,\n              initialSTate: item\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 76\n            }, this) : item.type === \"webAction\" ? /*#__PURE__*/_jsxDEV(WebAction, {\n              index: item.index,\n              initialSTate: item\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 85\n            }, this) : item.type === \"command\" ? /*#__PURE__*/_jsxDEV(Command, {\n              index: item.index,\n              initialSTate: item\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 87\n            }, this) : item.type === \"disk\" ? /*#__PURE__*/_jsxDEV(Service, {\n              index: item.index,\n              type: type,\n              initialSTate: item\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 88\n            }, this) : null), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              onClick: generateJson,\n              endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 42\n              }, this),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ARCard, \"hWai3TA8zKScLreKcQ+rSdShNgc=\", false, function () {\n  return [useStyles];\n});\n\n_c = ARCard;\nexport default ARCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ARCard\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Components/ARCard.js"],"names":["Button","Container","makeStyles","Card","CardHeader","CardContent","Autorenew","Code","Description","Http","KeyboardArrowRight","Save","SettingsSharp","Storage","Web","Service","Database","Process","ARScript","useEffect","useState","SpeedDial","SpeedDialAction","SpeedDialIcon","ActionContext","useHistory","Link","WebAction","Command","cardWidth","useStyles","theme","root","marginBottom","spacing","ARCard","name","actions","SetActions","autoRelance","type","AddServer","generateJson","classes","open","setOpen","index","setIndex","length","second","console","log","testPing","server","fetch","then","res","json","result","addAction","newState","informations","options","deleteAction","actionID","filter","action","i","duplicateAction","actionToDuplicateIndex","clone","newClone","splice","saveData","object","e","findIndex","iconsAction","icon","map","item"],"mappings":"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","sourcesContent":["import { Button, Container, makeStyles, Card, CardHeader, CardContent } from '@material-ui/core'\r\nimport { Autorenew, Code, Description, Http, KeyboardArrowRight, Save, SettingsSharp, Storage, Web } from '@material-ui/icons';\r\nimport Service from './Actions/Service';\r\nimport Database from './Actions/Database';\r\nimport Process from './Actions/Process';\r\nimport ARScript from './Actions/ARScript';\r\nimport { useEffect, useState } from 'react';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial'\r\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\r\nimport ActionContext from '../Context/ActionContext';\r\nimport { useHistory } from 'react-router';\r\nimport Link from './Actions/Link'\r\nimport WebAction from './Actions/WebAction';\r\nimport Command from './Actions/Command';\r\n\r\nconst cardWidth = 850\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        // width : cardWidth,\r\n        marginBottom: theme.spacing(2)\r\n    }\r\n}))\r\nconst ARCard = ({ name, actions, SetActions, autoRelance, type, AddServer, generateJson }) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false)\r\n    const [index, setIndex] = useState(actions.length)\r\n    var second = actions.length\r\n\r\n    //console.log(\"second \", second, \" index \", index)\r\n\r\n    useEffect(() => {\r\n        console.log(\"nombre d'actions \", actions.length, \" actions \", actions)\r\n    }, [])\r\n\r\n    const testPing = (server) => {\r\n        fetch(`http://localhost:5000/api/PARPRE?server=${server}`)\r\n            .then(res => res.json())\r\n            .then(result => { console.log(\"error\"); return result })\r\n    }\r\n\r\n    const addAction = (type) => {\r\n        const newState = [\r\n            ...actions, {\r\n                index: second,\r\n                type: type,\r\n                informations: {\r\n                },\r\n                options: {\r\n\r\n                }\r\n            }\r\n        ]\r\n        console.log(\"new state \", newState)\r\n\r\n        SetActions(newState)\r\n        setIndex(index + 1)\r\n        second++\r\n    }\r\n\r\n    const deleteAction = (actionID) => {\r\n\r\n        console.log(\"deleting \", actions.filter(action => action.index === actionID)\r\n        )\r\n\r\n        const newState = actions.filter(action => action.index !== actionID)\r\n        var i;\r\n\r\n        for (i = 0; i < newState.length; i++) {\r\n            newState[i].index = i;\r\n        }\r\n\r\n        setIndex(newState.length)\r\n\r\n        //newState.map(action => console.log(action))\r\n\r\n        SetActions(newState)\r\n\r\n        console.log(\"index \", index)\r\n\r\n    }\r\n\r\n    const duplicateAction = (actionID) => {\r\n\r\n        var actionToDuplicateIndex = actionID\r\n        const clone = actions[actionToDuplicateIndex]\r\n        console.log(\"action to duplicate\", clone, \"index \", actionToDuplicateIndex, \" actionId \", actionID)\r\n\r\n        const newClone = { ...clone, action: \"status\" }\r\n        actionToDuplicateIndex = actionToDuplicateIndex + 1\r\n        console.log(\"action index \",actionToDuplicateIndex)\r\n\r\n        actions.splice(actionToDuplicateIndex, 0, newClone)\r\n\r\n\r\n        var i;\r\n\r\n        for (i = 0; i < actions.length; i++) {\r\n            actions[i].index = i;\r\n            //console.log(actions[i].server)\r\n        }\r\n\r\n\r\n\r\n        //newState.map(action => console.log(action))\r\n\r\n        SetActions(actions)\r\n        setIndex(actions.length)\r\n    }\r\n\r\n    const saveData = (object) => {\r\n\r\n        const result = actions.filter(e => e.index === object.index)\r\n\r\n        if (result.length > 0) {\r\n\r\n            const index = actions.findIndex(e => e.index === object.index)\r\n\r\n            console.log('Changement', actions[index])\r\n\r\n            actions.splice(index, 1, object)\r\n\r\n            SetActions(actions)\r\n\r\n        }\r\n        else {\r\n            console.log(\"Nouvelle entrée\")\r\n            const newState = [\r\n                ...actions, object\r\n            ]\r\n            SetActions(newState)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const iconsAction = [\r\n        { icon: <Http />, name: 'Url', action: () => addAction(\"link\") },\r\n        { icon: <Web />, name: 'Action Web', action: () => addAction(\"webAction\") },\r\n        { icon: <SettingsSharp />, name: 'Service', action: () => addAction(\"service\") },\r\n        { icon: <Autorenew />, name: 'Processus', action: () => addAction(\"process\") },\r\n        { icon: <Description />, name: 'Script', action: () => addAction(\"script\") },\r\n        { icon: <Storage />, name: 'Base de données', action: () => addAction(\"database\") },\r\n        { icon: <Code />, name: 'Commande', action: () => addAction(\"command\") }\r\n    ]\r\n    //{icon : <Save />, name: 'Disque', action: () => addAction(\"disk\")},\r\n    //{icon : <AccountTree />, name: 'Disque', action: () => addAction(\"Pool\")}\r\n    return (\r\n        <Container>\r\n            <Card className={classes.root}>\r\n                <CardHeader\r\n                    title={name}\r\n                    subheader=\"hybride\"\r\n                    action={\r\n                        <SpeedDial\r\n                            ariaLabel=\"SpeedDial\"\r\n                            icon={<SpeedDialIcon />}\r\n                            open={open}\r\n                            direction='left'\r\n                            onOpen={() => setOpen(true)}\r\n                            onMouseLeave={() => setOpen(false)}\r\n                        >\r\n                            {iconsAction.map((action) => (\r\n                                <SpeedDialAction\r\n                                    key={action.name}\r\n                                    icon={action.icon}\r\n                                    tooltipTitle={action.name}\r\n                                    tooltipPlacement='top'\r\n                                    onClick={action.action}\r\n\r\n                                />\r\n                            ))}\r\n                        </SpeedDial>\r\n                    }\r\n                />\r\n\r\n                <CardContent>\r\n                    <ActionContext.Provider value={{ actions, deleteAction, duplicateAction, saveData, testPing, AddServer }}>\r\n                        <form noValidate autoComplete='on'>\r\n                            {actions.map((item, index) => (\r\n                                (\r\n                                    item.type === \"service\" ? <Service key={item.index} index={item.index} type={type} initialSTate={item} /> :\r\n                                        item.type === \"script\" ? <ARScript key={item.index} index={item.index} initialSTate={item} /> :\r\n                                            item.type === \"database\" ? <Database key={item.index} index={item.index} type={type} initialSTate={item} /> :\r\n                                                item.type === \"process\" ? <Process key={item.index} index={item.index} type={type} initialSTate={item} /> :\r\n                                                    item.type === \"link\" ? <Link key={item.index} index={item.index} initialSTate={item} /> :\r\n                                                        item.type === \"webAction\" ? <WebAction key={item.index} index={item.index} initialSTate={item} /> :\r\n                                                            item.type === \"command\" ? <Command key={item.index} index={item.index} initialSTate={item} /> :\r\n                                                                item.type === \"disk\" ? <Service key={item.index} index={item.index} type={type} initialSTate={item} /> :\r\n                                                                    null\r\n                                )\r\n                            ))}\r\n                            <Button\r\n\r\n                                color=\"secondary\"\r\n                                variant=\"contained\"\r\n                                onClick={generateJson}\r\n\r\n                                endIcon={<KeyboardArrowRight />}>\r\n                                Save\r\n                            </Button>\r\n                        </form>\r\n                    </ActionContext.Provider>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ARCard;\r\n"]},"metadata":{},"sourceType":"module"}