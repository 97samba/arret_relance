{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Components\\\\Actions\\\\WebAction.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core';\nimport { AccountCircle, Add, ArrowRight, Comment, Delete, FileCopy, Link, Lock, MoreVert, Mouse, Web } from \"@material-ui/icons\";\nimport { useContext, useEffect, useState } from \"react\";\nimport ActionContext from \"../../Context/ActionContext\";\nimport ClickDialog from \"../Creation/ClickDialog\";\nimport ConnectionDialog from \"../Creation/ConnectionDialog\";\nimport FormDialog from \"../Creation/FormDialog\";\nimport DisconnectDialog from \"../Creation/isconnectialog\";\nimport OptionMenu from \"../Creation/OptionMenu\";\nimport OptionDialog from \"../Creation/OptionDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#F6F6FB',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  fields: {\n    width: \"100%\"\n  },\n  dropDown: {\n    width: \"100%\"\n  },\n  smallAvatar: {\n    width: theme.spacing(2.5),\n    height: theme.spacing(2.5)\n  }\n}));\n\nconst WebAction = ({\n  index,\n  initialSTate\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchor] = useState(null);\n  const {\n    deleteAction,\n    duplicateAction,\n    saveData\n  } = useContext(ActionContext);\n  const [state, setState] = useState({\n    initialSTate\n  });\n  const [actionType, setActionType] = useState(\"connection\");\n  const [openDialog, setOpenDialog] = useState(false);\n  const [informations, setInformations] = useState({});\n  const [optionDialog, setOptionDialog] = useState(false);\n  const [options, setOptions] = useState({\n    block: true,\n    environnements: {\n      prod: true,\n      hprod: true,\n      inte: true,\n      dev: true\n    }\n  });\n\n  const handleClick = event => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchor(null);\n  };\n\n  const reduire = () => {};\n\n  useEffect(() => {\n    setState(initialSTate);\n\n    if (initialSTate.informations.type) {\n      console.log(\"action type \", initialSTate.informations.type);\n      setActionType(initialSTate.informations.type);\n    }\n\n    setInformations(initialSTate.informations);\n  }, []);\n\n  const formatUrl = url => {\n    if (url.startsWith(\"http\")) {\n      console.log('url est bonne');\n      return url;\n    } else {\n      console.log('error url');\n      return \"http://\" + url;\n    }\n  };\n\n  const testConnection = async e => {\n    const formatedUrl = formatUrl(e.target.value);\n    setState({ ...state,\n      link: formatedUrl\n    });\n\n    if (formatedUrl !== '') {\n      console.log('accessing ', formatedUrl);\n      setState({ ...state,\n        url: formatedUrl\n      });\n      fetch(`http://localhost:5000/api/PARPRE/link?url=${formatedUrl}`).then(res => res.json()).then(result => console.log(result.result));\n    }\n  };\n\n  const showDialog = () => {\n    setOpenDialog(true);\n  };\n\n  const closeDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const saveInformations = () => {\n    if (state.url === undefined) {\n      return;\n    }\n\n    saveData({\n      index: index,\n      type: \"webAction\",\n      url: state.url,\n      informations: informations\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          container: true,\n          alignContent: \"center\",\n          direction: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Web, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            id: \"url\",\n            color: \"primary\",\n            label: \"Lien\",\n            value: state.url,\n            onChange: e => setState({ ...state,\n              url: e.target.value\n            }),\n            onBlur: e => {\n              testConnection(e);\n              saveInformations();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          xl: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.dropDown,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: actionType,\n              onChange: e => setActionType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"connection\",\n                children: \"Connexion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"logOut\",\n                children: \"D\\xE9connexion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"click\",\n                children: \"Click\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"field\",\n                children: \"Remplir champ(s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"verify\",\n                children: \"V\\xE9rifier un contenu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: showDialog,\n                children: \"options\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), openDialog && actionType === \"connection\" ?\n        /*#__PURE__*/\n\n        /**Dialog connexion */\n        _jsxDEV(ConnectionDialog, {\n          informations: informations,\n          setInformations: setInformations,\n          closeDialog: closeDialog,\n          openDialog: openDialog,\n          saveInformations: saveInformations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this) : actionType === \"logOut\" ?\n        /*#__PURE__*/\n\n        /**Dialog deconnexion */\n        _jsxDEV(DisconnectDialog, {\n          informations: informations,\n          setInformations: setInformations,\n          closeDialog: closeDialog,\n          openDialog: openDialog,\n          saveInformations: saveInformations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 33\n        }, this) : actionType === \"click\" ?\n        /*#__PURE__*/\n\n        /**Dialog clicke */\n        _jsxDEV(ClickDialog, {\n          informations: informations,\n          setInformations: setInformations,\n          closeDialog: closeDialog,\n          openDialog: openDialog,\n          saveInformations: saveInformations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 37\n        }, this) :\n        /*#__PURE__*/\n\n        /**Dialog remplir */\n        _jsxDEV(FormDialog, {\n          informations: informations,\n          setInformations: setInformations,\n          closeDialog: closeDialog,\n          openDialog: openDialog,\n          saveInformations: saveInformations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(OptionMenu, {\n                index: index,\n                deleteAction: deleteAction,\n                duplicateAction: duplicateAction,\n                setOpenDialog: setOpenDialog\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this), \"                                \", /*#__PURE__*/_jsxDEV(OptionDialog, {\n                options: options,\n                saveInfos: saveInformations,\n                setOptions: setOptions,\n                openDialog: optionDialog,\n                setOpenDialog: setOptionDialog\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                my: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: classes.smallAvatar,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WebAction, \"xIsWqgJzNa9+TB5+jdXtHMcdPDI=\", false, function () {\n  return [useStyles];\n});\n\n_c = WebAction;\nexport default WebAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebAction\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Components/Actions/WebAction.js"],"names":["Avatar","Box","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","Grid","IconButton","InputLabel","Menu","MenuItem","Paper","Select","TextField","Typography","makeStyles","AccountCircle","Add","ArrowRight","Comment","Delete","FileCopy","Link","Lock","MoreVert","Mouse","Web","useContext","useEffect","useState","ActionContext","ClickDialog","ConnectionDialog","FormDialog","DisconnectDialog","OptionMenu","OptionDialog","useStyles","theme","root","background","padding","spacing","marginBottom","fields","width","dropDown","smallAvatar","height","WebAction","index","initialSTate","classes","anchorEl","setAnchor","deleteAction","duplicateAction","saveData","state","setState","actionType","setActionType","openDialog","setOpenDialog","informations","setInformations","optionDialog","setOptionDialog","options","setOptions","block","environnements","prod","hprod","inte","dev","handleClick","event","currentTarget","handleClose","reduire","type","console","log","formatUrl","url","startsWith","testConnection","e","formatedUrl","target","value","link","fetch","then","res","json","result","showDialog","closeDialog","saveInformations","undefined"],"mappings":"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","sourcesContent":["import { Avatar, Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { AccountCircle, Add, ArrowRight, Comment, Delete, FileCopy, Link, Lock, MoreVert, Mouse, Web } from \"@material-ui/icons\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport ActionContext from \"../../Context/ActionContext\"\r\nimport ClickDialog from \"../Creation/ClickDialog\"\r\nimport ConnectionDialog from \"../Creation/ConnectionDialog\"\r\nimport FormDialog from \"../Creation/FormDialog\"\r\nimport DisconnectDialog from \"../Creation/isconnectialog\"\r\nimport OptionMenu from \"../Creation/OptionMenu\"\r\nimport OptionDialog from \"../Creation/OptionDialog\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: '#F6F6FB',\r\n        padding: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n\r\n    },\r\n    fields: {\r\n        width: \"100%\"\r\n    },\r\n    dropDown: {\r\n        width: \"100%\"\r\n    },\r\n    smallAvatar: {\r\n        width: theme.spacing(2.5),\r\n        height: theme.spacing(2.5)\r\n    }\r\n}))\r\nconst WebAction = ({ index, initialSTate }) => {\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchor] = useState(null)\r\n    const { deleteAction, duplicateAction, saveData } = useContext(ActionContext)\r\n    const [state, setState] = useState({ initialSTate })\r\n    const [actionType, setActionType] = useState(\"connection\")\r\n    const [openDialog, setOpenDialog] = useState(false)\r\n    const [informations, setInformations] = useState({})\r\n    const [optionDialog, setOptionDialog] = useState(false)\r\n\r\n    const [options, setOptions] = useState({\r\n        block: true,\r\n        environnements: {\r\n            prod: true,\r\n            hprod: true,\r\n            inte: true,\r\n            dev: true,\r\n        }\r\n    })\r\n\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchor(event.currentTarget)\r\n    }\r\n    const handleClose = () => {\r\n        setAnchor(null)\r\n    }\r\n    const reduire = () => {\r\n\r\n    }\r\n    useEffect(() => {\r\n        setState(initialSTate)\r\n        if (initialSTate.informations.type) {\r\n            console.log(\"action type \", initialSTate.informations.type)\r\n            setActionType(initialSTate.informations.type)\r\n        }\r\n        setInformations(initialSTate.informations)\r\n\r\n    }, []\r\n    )\r\n    const formatUrl = (url) => {\r\n\r\n        if (url.startsWith(\"http\")) {\r\n\r\n            console.log('url est bonne')\r\n            return url\r\n        } else {\r\n            console.log('error url')\r\n            return \"http://\" + url\r\n        }\r\n\r\n    }\r\n\r\n    const testConnection = async (e) => {\r\n\r\n        const formatedUrl = formatUrl(e.target.value)\r\n        setState({ ...state, link: formatedUrl })\r\n\r\n        if (formatedUrl !== '') {\r\n\r\n            console.log('accessing ', formatedUrl)\r\n\r\n            setState({ ...state, url: formatedUrl })\r\n\r\n            fetch(`http://localhost:5000/api/PARPRE/link?url=${formatedUrl}`)\r\n                .then(res => res.json())\r\n                .then(result => console.log(result.result))\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const showDialog = () => {\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setOpenDialog(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    const saveInformations = () => {\r\n\r\n        if (state.url === undefined) { return }\r\n\r\n        saveData({\r\n            index: index,\r\n            type: \"webAction\",\r\n            url: state.url,\r\n            informations: informations\r\n\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paper\r\n                elevation={0}\r\n                className={classes.root}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    alignItems=\"center\"\r\n\r\n                >\r\n                    <Grid item md={1} xl={1} container alignContent=\"center\" direction=\"column\" >\r\n                        <Box display=\"flex\" justifyContent=\"center\">\r\n                            <Web color=\"primary\" />\r\n                        </Box>\r\n\r\n\r\n                    </Grid>\r\n                    <Grid item md={6} xl={2}>\r\n                        <TextField\r\n\r\n                            className={classes.fields}\r\n                            id='url'\r\n                            color='primary'\r\n                            label='Lien'\r\n                            value={state.url}\r\n                            onChange={(e) => setState({ ...state, url: e.target.value })}\r\n                            onBlur={(e) => { testConnection(e); saveInformations() }}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item md={2} xl={3} >\r\n                        <FormControl className={classes.dropDown}>\r\n                            <InputLabel>Action</InputLabel>\r\n                            <Select value={actionType} onChange={(e) => (setActionType(e.target.value))}>\r\n                                <MenuItem value=\"connection\" >Connexion</MenuItem>\r\n                                <MenuItem value=\"logOut\" >Déconnexion</MenuItem>\r\n                                <MenuItem value=\"click\">Click</MenuItem>\r\n                                <MenuItem value=\"field\">Remplir champ(s)</MenuItem>\r\n                                <MenuItem value=\"verify\">Vérifier un contenu</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={2} >\r\n\r\n                        <Box display=\"flex\" justifyContent=\"center\">\r\n                            <FormControl >\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={showDialog}>options</Button>\r\n                            </FormControl>\r\n                        </Box>\r\n\r\n                    </Grid>\r\n\r\n                    {openDialog && actionType === \"connection\" ?\r\n                        /**Dialog connexion */\r\n\r\n                        (\r\n                            <ConnectionDialog\r\n                                informations={informations}\r\n                                setInformations={setInformations}\r\n                                closeDialog={closeDialog}\r\n                                openDialog={openDialog}\r\n                                saveInformations={saveInformations}\r\n\r\n\r\n                            />\r\n                        ) : actionType === \"logOut\" ?\r\n                            /**Dialog deconnexion */\r\n                            (\r\n                                <DisconnectDialog\r\n                                    informations={informations}\r\n                                    setInformations={setInformations}\r\n                                    closeDialog={closeDialog}\r\n                                    openDialog={openDialog}\r\n                                    saveInformations={saveInformations}\r\n                                />\r\n                            ) : actionType === \"click\" ?\r\n                                /**Dialog clicke */\r\n\r\n                                (\r\n                                    <ClickDialog\r\n                                        informations={informations}\r\n                                        setInformations={setInformations}\r\n                                        closeDialog={closeDialog}\r\n                                        openDialog={openDialog}\r\n                                        saveInformations={saveInformations}\r\n                                    />\r\n                                ) :\r\n                                /**Dialog remplir */\r\n\r\n                                (\r\n                                    <FormDialog\r\n                                        informations={informations}\r\n                                        setInformations={setInformations}\r\n                                        closeDialog={closeDialog}\r\n                                        openDialog={openDialog}\r\n                                        saveInformations={saveInformations}\r\n                                    />\r\n                                )\r\n                    }\r\n\r\n\r\n                    <Grid item md={1} xl={1}  >\r\n                        <Grid container spacing={3} alignItems=\"center\" >\r\n                            <Grid item md={6} >\r\n                                <OptionMenu\r\n                                    index={index}\r\n                                    deleteAction={deleteAction}\r\n                                    duplicateAction={duplicateAction}\r\n                                    setOpenDialog={setOpenDialog}\r\n                                />                                <OptionDialog\r\n                                    options={options}\r\n                                    saveInfos={saveInformations}\r\n                                    setOptions={setOptions}\r\n                                    openDialog={optionDialog}\r\n                                    setOpenDialog={setOptionDialog}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item md={6}>\r\n                                <Box my=\"auto\" >\r\n                                    <Avatar className={classes.smallAvatar} >\r\n                                        <Typography>\r\n                                            {index + 1}\r\n                                        </Typography>\r\n                                    </Avatar>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WebAction;"]},"metadata":{},"sourceType":"module"}