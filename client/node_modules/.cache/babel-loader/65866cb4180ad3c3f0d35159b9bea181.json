{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Components\\\\Manage\\\\ListSSA.js\",\n    _s = $RefreshSig$();\n\nimport { Button, CardActionArea, CardActions, IconButton, makeStyles } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { Avatar, Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n    flexGrow: theme.spacing(1)\n  },\n  fields: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}));\n\nconst ListSSA = ({\n  ssa,\n  fromExcel\n}) => {\n  _s();\n\n  const url = \"http://localhost:5000/api\";\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {//console.log(ssa)\n  });\n\n  const visitPOS = ssa => {\n    console.log(\"ssa \", ssa);\n    history.push({\n      pathname: '/create',\n      state: ssa,\n      fromExcel: fromExcel\n    });\n  };\n\n  const getAPOS = id => {\n    fetch(`${url}/getAPOS?id=${id}`).then(Response => Response.json()).then(result => visitPOS(result));\n  };\n\n  const testSSA = ssa => {\n    history.push({\n      pathname: '/testSSA',\n      state: ssa\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      elevation: 0.5,\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              md: 1,\n              sm: 1,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                onClick: () => console.log(\"ssa clicked\"),\n                children: ssa.name.split(\"_\").length > 1 ? ssa.name.split(\"_\")[1][0].toUpperCase() : ssa.name[0].toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              md: 3,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\" \", ssa.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              md: 1,\n              sm: 1,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\" \", ssa.Arret.length, \" - \", ssa.Relance.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              md: 2,\n              sm: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\" \", ssa.auteur]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              md: 2,\n              sm: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\" \", ssa.date_de_creation]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              md: 3,\n              sm: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                spacing: 1,\n                container: true,\n                justify: \"space-around\",\n                alignContent: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 5,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: \"default\",\n                    onClick: () => visitPOS(ssa),\n                    children: \"PARPRE/POS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  children: !fromExcel ? /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    onClick: () => testSSA(ssa),\n                    children: \"Test\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 47\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    onClick: () => testSSA(ssa),\n                    children: \"Importer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 47\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    children: /*#__PURE__*/_jsxDEV(Delete, {\n                      color: \"secondary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListSSA, \"a770Wo9grBp66oG4IhbrG9riUrM=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = ListSSA;\nexport default ListSSA;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListSSA\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Components/Manage/ListSSA.js"],"names":["Button","CardActionArea","CardActions","IconButton","makeStyles","useEffect","useState","Avatar","Card","CardContent","Grid","Typography","Delete","useHistory","useStyles","theme","root","margin","spacing","flexGrow","fields","padding","display","justifyContent","ListSSA","ssa","fromExcel","url","history","classes","visitPOS","console","log","push","pathname","state","getAPOS","id","fetch","then","Response","json","result","testSSA","name","split","length","toUpperCase","Arret","Relance","auteur","date_de_creation"],"mappings":"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","sourcesContent":["import { Button, CardActionArea, CardActions, IconButton, makeStyles } from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport { Avatar, Card, CardContent, Grid, Typography } from '@material-ui/core'\r\nimport { Delete } from '@material-ui/icons';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n        flexGrow: theme.spacing(1)\r\n\r\n    },\r\n    fields: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n\r\n}))\r\nconst ListSSA = ({ ssa, fromExcel }) => {\r\n    const url = \"http://localhost:5000/api\"\r\n    const history = useHistory()\r\n\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        //console.log(ssa)\r\n    })\r\n\r\n    const visitPOS = (ssa) => {\r\n        console.log(\"ssa \", ssa)\r\n        history.push({\r\n            pathname: '/create',\r\n            state: ssa,\r\n            fromExcel: fromExcel\r\n        })\r\n    }\r\n    const getAPOS = (id) => {\r\n        fetch(`${url}/getAPOS?id=${id}`)\r\n            .then(Response => Response.json())\r\n            .then(result => visitPOS(result))\r\n    }\r\n    const testSSA = (ssa) => {\r\n        history.push({\r\n            pathname: '/testSSA',\r\n            state: ssa\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root} elevation={0.5}>\r\n                <CardActionArea >\r\n\r\n                    <CardContent  >\r\n\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={1} md={1} sm={1} >\r\n                                <Avatar onClick={() => console.log(\"ssa clicked\")}>\r\n                                    {\r\n                                        ssa.name.split(\"_\").length > 1\r\n                                            ? ssa.name.split(\"_\")[1][0].toUpperCase()\r\n                                            : ssa.name[0].toUpperCase()\r\n                                    }\r\n\r\n\r\n                                </Avatar>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={3} md={3} sm={3}  >\r\n                                <Typography> {ssa.name}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={1} sm={1}  >\r\n                                <Typography> {ssa.Arret.length} - {ssa.Relance.length}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={2} sm={2}  >\r\n                                <Typography> {ssa.auteur}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={2} sm={2}  >\r\n                                <Typography> {ssa.date_de_creation}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2} md={3} sm={2} >\r\n                                <Grid spacing={1} container justify=\"space-around\" alignContent=\"center\">\r\n                                    <Grid item md={5}>\r\n                                        <Button variant=\"outlined\" color=\"default\" onClick={() => visitPOS(ssa)}>PARPRE/POS</Button>\r\n                                    </Grid>\r\n                                    <Grid item md={4}>\r\n                                        {!fromExcel\r\n                                            ? <Button variant=\"outlined\" color=\"primary\" onClick={() => testSSA(ssa)}>Test</Button>\r\n                                            : <Button variant=\"outlined\" color=\"primary\" onClick={() => testSSA(ssa)}>Importer</Button>\r\n\r\n                                        }\r\n                                    </Grid>\r\n                                    <Grid item md={3}>\r\n                                        <Button >\r\n                                            <Delete color=\"secondary\" />\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </CardContent>\r\n                </CardActionArea>\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListSSA;"]},"metadata":{},"sourceType":"module"}