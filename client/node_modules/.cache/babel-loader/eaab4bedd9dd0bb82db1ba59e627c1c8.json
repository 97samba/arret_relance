{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\src\\\\Components\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AppBar, Button, List, ListItem, ListItemIcon, ListItemText, Toolbar } from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport { AppsSharp, CodeRounded, DashboardSharp, FolderOpenSharp, SettingsSharp } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core';\nimport { useHistory, useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      display: 'flex',\n      background: '#F6F6FB'\n    },\n    nav: {\n      width: drawerWidth\n    },\n    title: {\n      padding: theme.spacing(2)\n    },\n    list: {\n      padding: theme.spacing(2)\n    },\n    menuItem: {\n      display: 'flex'\n    },\n    button: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(1)\n    },\n    logo: {\n      display: 'flex'\n    },\n    active: {\n      background: '#F2F2F2'\n    },\n    appbar: {\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    toolbar: theme.mixins.toolbar,\n    page: {\n      background: 'F9F9F9',\n      width: '100%',\n      padding: theme.spacing(3)\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      backgroundColor: \"#FFFFF\",\n      borderRight: '0px'\n    },\n    drawerPaperLeft: {\n      width: drawerWidth,\n      backgroundColor: \"#FFFFF\",\n      borderLeft: '0px'\n    }\n  };\n});\n\nconst Layout = ({\n  children\n}) => {\n  _s();\n\n  const menuItems = [{\n    text: 'DashBoard',\n    icon: /*#__PURE__*/_jsxDEV(DashboardSharp, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 18\n    }, this),\n    path: '/'\n  }, {\n    text: 'Create',\n    icon: /*#__PURE__*/_jsxDEV(AppsSharp, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 18\n    }, this),\n    path: '/create'\n  }, {\n    text: 'Manage',\n    icon: /*#__PURE__*/_jsxDEV(FolderOpenSharp, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 18\n    }, this),\n    path: '/manage'\n  }, {\n    text: 'Settings',\n    icon: /*#__PURE__*/_jsxDEV(SettingsSharp, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 18\n    }, this),\n    path: '/settings'\n  }];\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.appbar,\n      elevation: 0,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      elevation: 0,\n      variant: \"permanent\",\n      anchor: \"left\",\n      className: classes.nav,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.logo,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.title,\n              color: \"primary\",\n              children: \"Transformers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            children: \"G\\xE9n\\xE9rer le script\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: menuItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => history.push(item.path),\n            className: location.pathname === item.path ? classes.active : null,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: item.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)]\n          }, item.text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      elevation: 0,\n      variant: \"permanent\",\n      anchor: \"right\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.logo,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.title,\n              color: \"primary\",\n              children: \"Transformers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            children: \"G\\xE9n\\xE9rer le script\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: menuItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => history.push(item.path),\n            className: location.pathname === item.path ? classes.active : null,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: item.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)]\n          }, item.text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.page,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Layout, \"+exway+yFu0n2S99E1Fi0bxw5r4=\", false, function () {\n  return [useStyles, useHistory, useLocation];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/src/Components/Layout.js"],"names":["React","AppBar","Button","List","ListItem","ListItemIcon","ListItemText","Toolbar","Drawer","Typography","AppsSharp","CodeRounded","DashboardSharp","FolderOpenSharp","SettingsSharp","makeStyles","useHistory","useLocation","drawerWidth","useStyles","theme","root","display","background","nav","width","title","padding","spacing","list","menuItem","button","margin","logo","active","appbar","toolbar","mixins","page","drawerPaper","backgroundColor","borderRight","drawerPaperLeft","borderLeft","Layout","children","menuItems","text","icon","path","classes","history","location","paper","map","item","push","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,QAA/B,EAAyCC,YAAzC,EAAuDC,YAAvD,EAAqEC,OAArE,QAAoF,mBAApF;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,cAAjC,EAAiDC,eAAjD,EAAkEC,aAAlE,QAAuF,oBAAvF;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;;AAEA,MAAMC,WAAW,GAAG,GAApB;AACA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,IAAU;AACnC,SAAM;AACFC,IAAAA,IAAI,EAAC;AACDC,MAAAA,OAAO,EAAC,MADP;AAEDC,MAAAA,UAAU,EAAE;AAFX,KADH;AAKFC,IAAAA,GAAG,EAAC;AACAC,MAAAA,KAAK,EAAEP;AADP,KALF;AAQFQ,IAAAA,KAAK,EAAC;AACFC,MAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AADP,KARJ;AAWFC,IAAAA,IAAI,EAAC;AACDF,MAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AADR,KAXH;AAcFE,IAAAA,QAAQ,EAAE;AACNR,MAAAA,OAAO,EAAG;AADJ,KAdR;AAiBFS,IAAAA,MAAM,EAAG;AACLC,MAAAA,MAAM,EAAEZ,KAAK,CAACQ,OAAN,CAAc,CAAd,CADH;AAELD,MAAAA,OAAO,EAAGP,KAAK,CAACQ,OAAN,CAAc,CAAd;AAFL,KAjBP;AAqBFK,IAAAA,IAAI,EAAG;AACHX,MAAAA,OAAO,EAAG;AADP,KArBL;AAwBFY,IAAAA,MAAM,EAAC;AACHX,MAAAA,UAAU,EAAC;AADR,KAxBL;AA2BFY,IAAAA,MAAM,EAAC;AACHV,MAAAA,KAAK,EAAE,eAAcP,WAAY;AAD9B,KA3BL;AA8BFkB,IAAAA,OAAO,EAAChB,KAAK,CAACiB,MAAN,CAAaD,OA9BnB;AA+BFE,IAAAA,IAAI,EAAE;AACFf,MAAAA,UAAU,EAAC,QADT;AAEFE,MAAAA,KAAK,EAAC,MAFJ;AAGFE,MAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AAHP,KA/BJ;AAoCFW,IAAAA,WAAW,EAAC;AACRd,MAAAA,KAAK,EAAGP,WADA;AAERsB,MAAAA,eAAe,EAAC,QAFR;AAGRC,MAAAA,WAAW,EAAC;AAHJ,KApCV;AA0CFC,IAAAA,eAAe,EAAC;AACZjB,MAAAA,KAAK,EAAGP,WADI;AAEZsB,MAAAA,eAAe,EAAC,QAFJ;AAGZG,MAAAA,UAAU,EAAC;AAHC;AA1Cd,GAAN;AAiDF,CAlD0B,CAA5B;;AAoDA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAC3B,QAAMC,SAAS,GAAG,CACd;AACIC,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,IAAI,eAAC,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFT;AAGIC,IAAAA,IAAI,EAAC;AAHT,GADc,EAMd;AACIF,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,IAAI,eAAC,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFT;AAGIC,IAAAA,IAAI,EAAC;AAHT,GANc,EAWd;AACIF,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,IAAI,eAAC,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFT;AAGIC,IAAAA,IAAI,EAAC;AAHT,GAXc,EAgBd;AACIF,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,IAAI,eAAC,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,YAFT;AAGIC,IAAAA,IAAI,EAAC;AAHT,GAhBc,CAAlB;AAsBA,QAAMC,OAAO,GAAG/B,SAAS,EAAzB;AACA,QAAMgC,OAAO,GAAGnC,UAAU,EAA1B;AACA,QAAMoC,QAAQ,GAAGnC,WAAW,EAA5B;AAEA,sBAEI;AAAK,IAAA,SAAS,EAAEiC,OAAO,CAAC7B,IAAxB;AAAA,4BAGI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAE6B,OAAO,CAACf,MAA3B;AAAmC,MAAA,SAAS,EAAE,CAA9C;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAEe,OAAO,CAACd,OAA5B;AAAA,+BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAUI,QAAC,MAAD;AACA,MAAA,SAAS,EAAE,CADX;AAEA,MAAA,OAAO,EAAG,WAFV;AAGA,MAAA,MAAM,EAAG,MAHT;AAIA,MAAA,SAAS,EAAIc,OAAO,CAAC1B,GAJrB;AAKA,MAAA,OAAO,EAAI;AAAC6B,QAAAA,KAAK,EAAGH,OAAO,CAACX;AAAjB,OALX;AAAA,6BASI;AAAA,gCACI;AAAA,kCACI;AAAK,YAAA,SAAS,EAAEW,OAAO,CAACjB,IAAxB;AAAA,mCACI,QAAC,UAAD;AACA,cAAA,OAAO,EAAC,IADR;AAEA,cAAA,SAAS,EAAEiB,OAAO,CAACxB,KAFnB;AAGA,cAAA,KAAK,EAAC,SAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAaI,QAAC,MAAD;AACA,YAAA,OAAO,EAAC,WADR;AAEA,YAAA,KAAK,EAAC,SAFN;AAGA,YAAA,SAAS,EAAIwB,OAAO,CAACnB,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAwBI,QAAC,IAAD;AAAA,oBACKe,SAAS,CAACQ,GAAV,CAAcC,IAAI,iBACf,QAAC,QAAD;AAEI,YAAA,MAAM,MAFV;AAGI,YAAA,OAAO,EAAI,MAAMJ,OAAO,CAACK,IAAR,CAAaD,IAAI,CAACN,IAAlB,CAHrB;AAII,YAAA,SAAS,EAAIG,QAAQ,CAACK,QAAT,KAAsBF,IAAI,CAACN,IAA3B,GAAkCC,OAAO,CAAChB,MAA1C,GAAmD,IAJpE;AAAA,oCAMI,QAAC,YAAD;AAAA,wBAAeqB,IAAI,CAACP;AAApB;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI,QAAC,YAAD;AAAc,cAAA,OAAO,EAAIO,IAAI,CAACR;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA,aACWQ,IAAI,CAACR,IADhB;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,YAVJ,eA2DI,QAAC,MAAD;AACA,MAAA,SAAS,EAAE,CADX;AAEA,MAAA,OAAO,EAAG,WAFV;AAGA,MAAA,MAAM,EAAG,OAHT;AAIA,MAAA,OAAO,EAAI;AAACM,QAAAA,KAAK,EAAGH,OAAO,CAACX;AAAjB,OAJX;AAAA,6BAQI;AAAA,gCACI;AAAA,kCACI;AAAK,YAAA,SAAS,EAAEW,OAAO,CAACjB,IAAxB;AAAA,mCACI,QAAC,UAAD;AACA,cAAA,OAAO,EAAC,IADR;AAEA,cAAA,SAAS,EAAEiB,OAAO,CAACxB,KAFnB;AAGA,cAAA,KAAK,EAAC,SAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAaI,QAAC,MAAD;AACA,YAAA,OAAO,EAAC,WADR;AAEA,YAAA,KAAK,EAAC,SAFN;AAGA,YAAA,SAAS,EAAIwB,OAAO,CAACnB,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAwBI,QAAC,IAAD;AAAA,oBACKe,SAAS,CAACQ,GAAV,CAAcC,IAAI,iBACf,QAAC,QAAD;AAEI,YAAA,MAAM,MAFV;AAGI,YAAA,OAAO,EAAI,MAAMJ,OAAO,CAACK,IAAR,CAAaD,IAAI,CAACN,IAAlB,CAHrB;AAII,YAAA,SAAS,EAAIG,QAAQ,CAACK,QAAT,KAAsBF,IAAI,CAACN,IAA3B,GAAkCC,OAAO,CAAChB,MAA1C,GAAmD,IAJpE;AAAA,oCAMI,QAAC,YAAD;AAAA,wBAAeqB,IAAI,CAACP;AAApB;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI,QAAC,YAAD;AAAc,cAAA,OAAO,EAAIO,IAAI,CAACR;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA,aACWQ,IAAI,CAACR,IADhB;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YA3DJ,eA6GI;AAAK,MAAA,SAAS,EAAEG,OAAO,CAACZ,IAAxB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEY,OAAO,CAACd;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKS,QAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YA7GJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAwHH,CAnJD;;GAAMD,M;UAuBczB,S,EACAH,U,EACCC,W;;;KAzBf2B,M;AAqJN,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\n\r\nimport { AppBar, Button, List, ListItem, ListItemIcon, ListItemText, Toolbar } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { AppsSharp, CodeRounded, DashboardSharp, FolderOpenSharp, SettingsSharp } from '@material-ui/icons'\r\nimport {makeStyles} from '@material-ui/core'\r\nimport { useHistory, useLocation } from 'react-router'\r\n\r\nconst drawerWidth = 240\r\nconst useStyles = makeStyles((theme) =>{\r\n    return{\r\n        root:{\r\n            display:'flex',\r\n            background: '#F6F6FB'\r\n        },\r\n        nav:{\r\n            width: drawerWidth,\r\n        },\r\n        title:{\r\n            padding: theme.spacing(2)\r\n        },\r\n        list:{\r\n            padding: theme.spacing(2)\r\n        },\r\n        menuItem: {\r\n            display : 'flex'\r\n        },\r\n        button : {\r\n            margin: theme.spacing(2),\r\n            padding : theme.spacing(1)\r\n        },\r\n        logo : {\r\n            display : 'flex'\r\n        },\r\n        active:{\r\n            background:'#F2F2F2'\r\n        },\r\n        appbar:{\r\n            width:`calc(100% - ${drawerWidth}px)`\r\n        },\r\n        toolbar:theme.mixins.toolbar,\r\n        page: {\r\n            background:'F9F9F9',\r\n            width:'100%',\r\n            padding: theme.spacing(3)\r\n        },\r\n        drawerPaper:{\r\n            width : drawerWidth,\r\n            backgroundColor:\"#FFFFF\",\r\n            borderRight:'0px'\r\n\r\n        },\r\n        drawerPaperLeft:{\r\n            width : drawerWidth,\r\n            backgroundColor:\"#FFFFF\",\r\n            borderLeft:'0px'\r\n\r\n        }\r\n\r\n}})\r\n\r\nconst Layout = ({children}) => {\r\n    const menuItems = [\r\n        {\r\n            text: 'DashBoard',\r\n            icon:<DashboardSharp color=\"primary\" />,\r\n            path:'/'\r\n        },\r\n        {\r\n            text: 'Create',\r\n            icon:<AppsSharp color=\"primary\" />,\r\n            path:'/create'\r\n        },\r\n        {\r\n            text: 'Manage',\r\n            icon:<FolderOpenSharp color=\"primary\" />,\r\n            path:'/manage'\r\n        },\r\n        {\r\n            text: 'Settings',\r\n            icon:<SettingsSharp color=\"primary\" />,\r\n            path:'/settings'\r\n        },\r\n    ]\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    \r\n    return ( \r\n\r\n        <div className={classes.root}>\r\n\r\n            {/** toolbar */}\r\n            <AppBar className={classes.appbar} elevation={0}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Typography>Menu</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {/**menu droite */}\r\n            <Drawer\r\n            elevation={0}\r\n            variant = \"permanent\"\r\n            anchor = 'left'\r\n            className = {classes.nav}\r\n            classes = {{paper : classes.drawerPaper}}\r\n\r\n\r\n            >\r\n                <div>\r\n                    <div>\r\n                        <div className={classes.logo}>\r\n                            <Typography \r\n                            variant=\"h5\" \r\n                            className={classes.title}\r\n                            color=\"primary\"\r\n                            >\r\n                                Transformers \r\n\r\n                            </Typography>\r\n\r\n                        </div>\r\n                        \r\n                        <Button \r\n                        variant='contained' \r\n                        color='primary' \r\n                        className = {classes.button}\r\n                        >\r\n                            Générer le script\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/**Les liens du menu */}\r\n                    <List>\r\n                        {menuItems.map(item => (\r\n                            <ListItem \r\n                                key = {item.text}\r\n                                button\r\n                                onClick= { () => history.push(item.path)}\r\n                                className = {location.pathname === item.path ? classes.active : null}\r\n                            >\r\n                                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                                <ListItemText primary = {item.text} />\r\n                            </ListItem>    \r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n\r\n            <Drawer\r\n            elevation={0}\r\n            variant = \"permanent\"\r\n            anchor = 'right'\r\n            classes = {{paper : classes.drawerPaper}}\r\n\r\n\r\n            >\r\n                <div>\r\n                    <div>\r\n                        <div className={classes.logo}>\r\n                            <Typography \r\n                            variant=\"h5\" \r\n                            className={classes.title}\r\n                            color=\"primary\"\r\n                            >\r\n                                Transformers \r\n\r\n                            </Typography>\r\n\r\n                        </div>\r\n                        \r\n                        <Button \r\n                        variant='contained' \r\n                        color='primary' \r\n                        className = {classes.button}\r\n                        >\r\n                            Générer le script\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/**Les liens du menu */}\r\n                    <List>\r\n                        {menuItems.map(item => (\r\n                            <ListItem \r\n                                key = {item.text}\r\n                                button\r\n                                onClick= { () => history.push(item.path)}\r\n                                className = {location.pathname === item.path ? classes.active : null}\r\n                            >\r\n                                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                                <ListItemText primary = {item.text} />\r\n                            </ListItem>    \r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n\r\n\r\n            {/**future page */}\r\n            <div className={classes.page} >\r\n                <div className={classes.toolbar}>\r\n\r\n                </div>\r\n                {children}\r\n\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Layout;"]},"metadata":{},"sourceType":"module"}