{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Components\\\\Actions\\\\Command.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core';\nimport { Code } from \"@material-ui/icons\";\nimport { useContext, useEffect, useState } from \"react\";\nimport ActionContext from \"../../Context/ActionContext\";\nimport OptionMenu from \"../Creation/OptionMenu\";\nimport OptionDialog from \"../Creation/OptionDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#F6F6FB',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  fields: {\n    //marginRight:theme.spacing(2),\n    width: \"100%\"\n  },\n  smallAvatar: {\n    width: theme.spacing(2.5),\n    height: theme.spacing(2.5)\n  }\n}));\n\nconst Command = ({\n  index,\n  initialSTate\n}) => {\n  _s();\n\n  //css\n  const classes = useStyles();\n  const [state, setState] = useState({\n    initialSTate\n  }); //l'état du server\n\n  const [pingState, setPingState] = useState(\"ko\");\n  const [openDialog, setOpenDialog] = useState(false);\n  const [options, setOptions] = useState({\n    block: true,\n    prod: true,\n    hprod: true,\n    inte: true,\n    dev: true\n  });\n  useEffect(() => {\n    setState(initialSTate);\n    setOptions(initialSTate.options);\n  }, []); //context pour sauvegarder l'état dans le parent\n\n  const {\n    deleteAction,\n    duplicateAction,\n    saveData\n  } = useContext(ActionContext);\n\n  const saveInformations = () => {\n    if (state.server === undefined || state.name === undefined) {\n      return;\n    }\n\n    saveData({\n      index: index,\n      type: \"command\",\n      server: state.server,\n      name: state.name,\n      login: state.login,\n      result: state.result,\n      options: options,\n      os: state.server.toUpperCase().startsWith(\"SW\") ? \"windows\" : \"linux\"\n    });\n  }; //test si le service existe\n\n\n  const testService = async service => {\n    if (state.server === null || pingState === \"ko\") {\n      return;\n    }\n\n    console.log(\"Testing service : \", service, \"server \", state.server);\n    fetch(`http://localhost:5000/api/PARPRE/service?name=${service}&server=${state.server}`).then(res => res.json()).then(result => console.log(result));\n  }; //Fait un ping\n\n\n  const testPing = async server => {\n    await fetch(`http://localhost:5000/api/PARPRE?server=${server}`).then(res => res.json()).then(result => {\n      setPingState(result);\n      console.log(result.state); //saveInformations()\n\n      if (result.state === \"ok\") {}\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Code, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            value: state.server,\n            id: `server- ${index}`,\n            color: \"primary\",\n            label: \"Serveur\",\n            onChange: e => setState({ ...state,\n              server: e.target.value\n            }),\n            onBlur: saveInformations,\n            inputProps: {\n              style: {\n                fontSize: state.server && state.server.split(\"\").length > 20 && state.server.split(\"\").length < 65 ? 13 : state.server && state.server.split(\"\").length > 65 ? 13 : \"1rem\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            value: state.login,\n            id: `login- ${index}`,\n            color: \"primary\",\n            label: \"Login\",\n            onChange: e => setState({ ...state,\n              login: e.target.value\n            }),\n            onBlur: saveInformations,\n            inputProps: {\n              style: {\n                fontSize: state.login && state.login.split(\"\").length > 60 ? 14 : \"1rem\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 5,\n          xl: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: state.name,\n            className: classes.fields,\n            id: `command- ${index}`,\n            color: \"primary\",\n            label: \"Commande\",\n            onChange: e => setState({ ...state,\n              name: e.target.value\n            }),\n            onBlur: saveInformations,\n            error: state.name === \"\",\n            inputProps: {\n              style: {\n                fontSize: state.name && state.name.split(\"\").length > 40 && state.name.split(\"\").length < 65 ? 14 : state.name && state.name.split(\"\").length > 65 ? 13 : \"1rem\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            value: state.result,\n            id: `result- ${index}`,\n            color: \"primary\",\n            label: \"R\\xE9sultat\",\n            onChange: e => setState({ ...state,\n              result: e.target.value\n            }),\n            onBlur: saveInformations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(OptionMenu, {\n                index: index,\n                deleteAction: deleteAction,\n                duplicateAction: duplicateAction,\n                setOpenDialog: setOpenDialog\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OptionDialog, {\n                options: options,\n                saveInfos: saveInformations,\n                setOptions: setOptions,\n                openDialog: openDialog,\n                setOpenDialog: setOpenDialog\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                my: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: classes.smallAvatar,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Command, \"EjzjIrpkJGBJiipS0jwZ9ftNPZc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Command;\nexport default Command;\n\nvar _c;\n\n$RefreshReg$(_c, \"Command\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Components/Actions/Command.js"],"names":["Avatar","Box","Grid","Paper","TextField","Typography","makeStyles","Code","useContext","useEffect","useState","ActionContext","OptionMenu","OptionDialog","useStyles","theme","root","background","padding","spacing","marginBottom","fields","width","smallAvatar","height","Command","index","initialSTate","classes","state","setState","pingState","setPingState","openDialog","setOpenDialog","options","setOptions","block","prod","hprod","inte","dev","deleteAction","duplicateAction","saveData","saveInformations","server","undefined","name","type","login","result","os","toUpperCase","startsWith","testService","service","console","log","fetch","then","res","json","testPing","e","target","value","style","fontSize","split","length"],"mappings":"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","sourcesContent":["import { Avatar, Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Code } from \"@material-ui/icons\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport ActionContext from \"../../Context/ActionContext\"\r\nimport OptionMenu from \"../Creation/OptionMenu\"\r\nimport OptionDialog from \"../Creation/OptionDialog\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: '#F6F6FB',\r\n        padding: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n\r\n    },\r\n    fields: {\r\n        //marginRight:theme.spacing(2),\r\n        width: \"100%\"\r\n    },\r\n    smallAvatar: {\r\n        width: theme.spacing(2.5),\r\n        height: theme.spacing(2.5)\r\n    }\r\n}))\r\n\r\nconst Command = ({ index, initialSTate }) => {\r\n    //css\r\n    const classes = useStyles()\r\n\r\n    const [state, setState] = useState({ initialSTate })\r\n    //l'état du server\r\n    const [pingState, setPingState] = useState(\"ko\")\r\n    const [openDialog, setOpenDialog] = useState(false)\r\n\r\n    const [options, setOptions] = useState({\r\n        block: true,\r\n        prod: true,\r\n        hprod: true,\r\n        inte: true,\r\n        dev: true,\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        setState(initialSTate)\r\n        setOptions(initialSTate.options)\r\n\r\n\r\n    }, []\r\n    )\r\n\r\n\r\n    //context pour sauvegarder l'état dans le parent\r\n    const { deleteAction, duplicateAction, saveData } = useContext(ActionContext)\r\n\r\n    const saveInformations = () => {\r\n\r\n        if (state.server === undefined || state.name === undefined) { return }\r\n\r\n        saveData(\r\n            {\r\n                index: index,\r\n                type: \"command\",\r\n                server: state.server,\r\n                name: state.name,\r\n                login: state.login,\r\n                result: state.result,\r\n                options: options,\r\n                os: state.server.toUpperCase().startsWith(\"SW\") ? \"windows\" : \"linux\"\r\n\r\n            }\r\n        )\r\n    }\r\n    //test si le service existe\r\n    const testService = async (service) => {\r\n\r\n        if (state.server === null || pingState === \"ko\") { return }\r\n\r\n        console.log(\"Testing service : \", service, \"server \", state.server)\r\n        fetch(`http://localhost:5000/api/PARPRE/service?name=${service}&server=${state.server}`)\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n    }\r\n    //Fait un ping\r\n    const testPing = async (server) => {\r\n\r\n\r\n        await fetch(`http://localhost:5000/api/PARPRE?server=${server}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setPingState(result)\r\n                console.log(result.state)\r\n                //saveInformations()\r\n\r\n                if (result.state === \"ok\") {\r\n\r\n                }\r\n\r\n            }\r\n            )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paper\r\n                elevation={0}\r\n                className={classes.root}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item md={1} xl={1} >\r\n                        <Box display=\"flex\" justifyContent=\"center\">\r\n                            <Code color=\"primary\" />\r\n                        </Box>\r\n\r\n\r\n                    </Grid>\r\n                    <Grid item md={2} xl={2}>\r\n                        <TextField\r\n                            className={classes.fields}\r\n                            value={state.server}\r\n                            id={`server- ${index}`}\r\n                            color='primary'\r\n                            label='Serveur'\r\n                            onChange={(e) => setState({ ...state, server: e.target.value })}\r\n                            onBlur={saveInformations}\r\n                            inputProps={{\r\n                                style: {\r\n                                    fontSize:\r\n                                        state.server && state.server.split(\"\").length > 20 && state.server.split(\"\").length < 65 ? 13 :\r\n                                            state.server && state.server.split(\"\").length > 65 ? 13 : \"1rem\"\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={2} xl={2}>\r\n                        <TextField\r\n                            className={classes.fields}\r\n                            value={state.login}\r\n                            id={`login- ${index}`}\r\n                            color='primary'\r\n                            label='Login'\r\n                            onChange={(e) => setState({ ...state, login: e.target.value })}\r\n                            onBlur={saveInformations}\r\n                            inputProps={{\r\n                                style: { fontSize: state.login && state.login.split(\"\").length > 60 ? 14 : \"1rem\" }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={5} xl={4}>\r\n                        <TextField\r\n                            value={state.name}\r\n                            className={classes.fields}\r\n                            id={`command- ${index}`}\r\n                            color='primary'\r\n                            label='Commande'\r\n                            onChange={(e) => setState({ ...state, name: e.target.value })}\r\n                            onBlur={saveInformations}\r\n                            error={state.name === \"\"}\r\n                            inputProps={{\r\n                                style: {\r\n                                    fontSize:\r\n                                        state.name && state.name.split(\"\").length > 40 && state.name.split(\"\").length < 65 ? 14 :\r\n                                            state.name && state.name.split(\"\").length > 65 ? 13 : \"1rem\"\r\n                                }\r\n                            }}\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={1} xl={2}>\r\n                        <TextField\r\n                            className={classes.fields}\r\n                            value={state.result}\r\n                            id={`result- ${index}`}\r\n                            color='primary'\r\n                            label='Résultat'\r\n                            onChange={(e) => setState({ ...state, result: e.target.value })}\r\n                            onBlur={saveInformations}\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={1} xl={1}  >\r\n                        <Grid container spacing={2} alignItems=\"center\" >\r\n                            <Grid item md={6} >\r\n                                <OptionMenu\r\n                                    index={index}\r\n                                    deleteAction={deleteAction}\r\n                                    duplicateAction={duplicateAction}\r\n                                    setOpenDialog={setOpenDialog}\r\n                                />\r\n                                <OptionDialog\r\n                                    options={options}\r\n                                    saveInfos={saveInformations}\r\n                                    setOptions={setOptions}\r\n                                    openDialog={openDialog}\r\n                                    setOpenDialog={setOpenDialog}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item md={6}>\r\n                                <Box my=\"auto\" >\r\n                                    <Avatar className={classes.smallAvatar} >\r\n\r\n                                        <Typography>\r\n                                            {index + 1}\r\n                                        </Typography>\r\n                                    </Avatar>\r\n\r\n                                </Box>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Command;"]},"metadata":{},"sourceType":"module"}