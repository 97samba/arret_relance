{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\client\\\\src\\\\Components\\\\ARCard.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Box, Container, makeStyles, Paper, Card, CardHeader, CardContent } from '@material-ui/core';\nimport { Code, Description, Http, KeyboardArrowRight, SettingsSharp, Storage, Web } from '@material-ui/icons';\nimport Service from './Actions/Service';\nimport Database from './Actions/Database';\nimport Command from './Actions/Command';\nimport ARScript from './Actions/ARScript';\nimport { useEffect, useState } from 'react';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\nimport ActionContext from '../Context/ActionContext';\nimport { v4 as uuid } from \"uuid\";\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport Link from './Actions/Link';\nimport WebAction from './Actions/WebAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardWidth = 850;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // width : cardWidth,\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst ARCard = ({\n  name,\n  StopActions,\n  setStopActions,\n  StartActions,\n  setStartActions\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [actions, SetActions] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {//fetch(\"http://localhost:8000/Actions\")\n    //.then(res => res.json())\n    //.then(data => SetActions(data))\n  }, []);\n\n  const testPing = server => {\n    fetch(`http://localhost:5000/api/PARPRE?server=${server}`).then(res => res.json()).then(result => {\n      console.log(\"error\");\n      return result;\n    });\n  };\n\n  const addAction = type => {\n    const newState = [...actions, {\n      index: index,\n      type: type\n    }];\n    SetActions(newState);\n    setIndex(index + 1);\n  };\n\n  const deleteAction = actionID => {\n    const newState = actions.filter(action => action.index !== actionID);\n    var i;\n\n    for (i = 0; i < newState.length; i++) {\n      newState[i].index = i;\n    }\n\n    setIndex(newState.length);\n    newState.map(action => console.log(action));\n    SetActions(newState);\n    console.log(\"index \", index);\n  };\n\n  const duplicateAction = actionID => {\n    var actionToDuplicateIndex = actions.findIndex(e => e.id === actionID);\n    const clone = actions[actionToDuplicateIndex];\n    const newClone = { ...clone,\n      id: uuid()\n    };\n    actionToDuplicateIndex = actionToDuplicateIndex + 1;\n    actions.splice(actionToDuplicateIndex, 0, newClone);\n    SetActions(actions);\n  };\n\n  const saveData = object => {\n    const result = Object.values(StopActions).filter(e => e.index === object.index);\n\n    if (result.length > 0) {\n      const index = StopActions.findIndex(e => e.id === object.index);\n      console.log('Changement', StopActions[index]);\n      StopActions.splice(index, 1, object); //console.log(\"datas : \", StopActions)\n\n      setStopActions(StopActions);\n    } else {\n      console.log(\"Nouvelle entrée\");\n      const newState = [...StopActions, object];\n      setStopActions(newState);\n    }\n  };\n\n  const generateJson = async () => {\n    const parpre = {\n      name: \"ARES\",\n      auteur: \"Samba NDIAYE\",\n      date_de_creation: new Date().toLocaleString(),\n      Arret: StopActions\n    };\n    axios.post(`http://localhost:5000/api/PARPRE/create`, parpre).then(res => console.log(res));\n    console.log(JSON.stringify(parpre));\n  };\n\n  const iconsAction = [{\n    icon: /*#__PURE__*/_jsxDEV(Http, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this),\n    name: 'Url',\n    action: () => addAction(\"link\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Web, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this),\n    name: 'Action Web',\n    action: () => addAction(\"webAction\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(SettingsSharp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this),\n    name: 'Service',\n    action: () => addAction(\"service\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Code, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this),\n    name: 'Commande',\n    action: () => addAction(\"command\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this),\n    name: 'Script',\n    action: () => addAction(\"script\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Storage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this),\n    name: 'Base de données',\n    action: () => addAction(\"database\")\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: name,\n        subheader: \"hybride\",\n        action: /*#__PURE__*/_jsxDEV(SpeedDial, {\n          ariaLabel: \"SpeedDial\",\n          icon: /*#__PURE__*/_jsxDEV(SpeedDialIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 31\n          }, this),\n          open: open,\n          direction: \"left\",\n          onOpen: () => setOpen(true),\n          onMouseLeave: () => setOpen(false),\n          children: iconsAction.map(action => /*#__PURE__*/_jsxDEV(SpeedDialAction, {\n            icon: action.icon,\n            tooltipTitle: action.name,\n            tooltipPlacement: \"top\",\n            onClick: action.action\n          }, action.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(ActionContext.Provider, {\n          value: {\n            actions,\n            deleteAction,\n            duplicateAction,\n            saveData,\n            testPing\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"on\",\n            children: [actions.map(item => item.type === \"service\" ? /*#__PURE__*/_jsxDEV(Service, {\n              index: item.index\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 65\n            }, this) : item.type === \"script\" ? /*#__PURE__*/_jsxDEV(ARScript, {\n              index: item.index\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 65\n            }, this) : item.type === \"database\" ? /*#__PURE__*/_jsxDEV(Database, {\n              index: item.index\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 65\n            }, this) : item.type === \"command\" ? /*#__PURE__*/_jsxDEV(Command, {\n              index: item.index\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 65\n            }, this) : item.type === \"link\" ? /*#__PURE__*/_jsxDEV(Link, {\n              index: item.index\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 65\n            }, this) : item.type === \"webAction\" ? /*#__PURE__*/_jsxDEV(WebAction, {\n              index: item.index\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 65\n            }, this) : null), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\" //onClick={generateJson}\n              ,\n              onClick: generateJson,\n              endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 42\n              }, this),\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ARCard, \"BB5EBaiu1o2hZXb4g8X4y8IJtEw=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = ARCard;\nexport default ARCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ARCard\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/client/src/Components/ARCard.js"],"names":["Button","Box","Container","makeStyles","Paper","Card","CardHeader","CardContent","Code","Description","Http","KeyboardArrowRight","SettingsSharp","Storage","Web","Service","Database","Command","ARScript","useEffect","useState","SpeedDial","SpeedDialAction","SpeedDialIcon","ActionContext","v4","uuid","useHistory","axios","Link","WebAction","cardWidth","useStyles","theme","root","marginBottom","spacing","ARCard","name","StopActions","setStopActions","StartActions","setStartActions","classes","history","actions","SetActions","open","setOpen","index","setIndex","testPing","server","fetch","then","res","json","result","console","log","addAction","type","newState","deleteAction","actionID","filter","action","i","length","map","duplicateAction","actionToDuplicateIndex","findIndex","e","id","clone","newClone","splice","saveData","object","Object","values","generateJson","parpre","auteur","date_de_creation","Date","toLocaleString","Arret","post","JSON","stringify","iconsAction","icon","item"],"mappings":";;;AAAA,SAASA,MAAT,EAAgBC,GAAhB,EAAsBC,SAAtB,EAAkCC,UAAlC,EAA8CC,KAA9C,EAAqDC,IAArD,EAA2DC,UAA3D,EAAuEC,WAAvE,QAAyF,mBAAzF;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,IAA5B,EAAkCC,kBAAlC,EAAsDC,aAAtD,EAAqEC,OAArE,EAA8EC,GAA9E,QAAyF,oBAAzF;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,kBAA/C;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,SAAS,GAAG,GAAlB;AACA,MAAMC,SAAS,GAAG7B,UAAU,CAAC8B,KAAK,KAAI;AAClCC,EAAAA,IAAI,EAAC;AACD;AACAC,IAAAA,YAAY,EAAGF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFd;AAD6B,CAAJ,CAAN,CAA5B;;AAMA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,WAAP;AAAmBC,EAAAA,cAAnB;AAAkCC,EAAAA,YAAlC;AAAgDC,EAAAA;AAAhD,CAAD,KAAsE;AAAA;;AACjF,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAMY,OAAO,GAAGjB,UAAU,EAA1B;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC2B,IAAD,EAAMC,OAAN,IAAiB5B,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAAC6B,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,CAAD,CAAlC;AAGAD,EAAAA,SAAS,CAAC,MAAK,CACX;AACA;AACA;AACH,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMgC,QAAQ,GAAIC,MAAD,IAAW;AACxBC,IAAAA,KAAK,CAAE,2CAA0CD,MAAO,EAAnD,CAAL,CACKE,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAsB,aAAOF,MAAP;AAAc,KAFzD;AAGH,GAJD;;AAMA,QAAMG,SAAS,GAAIC,IAAD,IAAS;AACvB,UAAMC,QAAQ,GAAG,CACb,GAAGjB,OADU,EACF;AACPI,MAAAA,KAAK,EAAGA,KADD;AAEPY,MAAAA,IAAI,EAAGA;AAFA,KADE,CAAjB;AAMAf,IAAAA,UAAU,CAACgB,QAAD,CAAV;AACAZ,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACH,GATD;;AAWA,QAAMc,YAAY,GAAEC,QAAD,IAAY;AAE3B,UAAMF,QAAQ,GAAGjB,OAAO,CAACoB,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACjB,KAAP,KAAiBe,QAA1C,CAAjB;AAEA,QAAIG,CAAJ;;AAEA,SAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGL,QAAQ,CAACM,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAChCL,MAAAA,QAAQ,CAACK,CAAD,CAAR,CAAYlB,KAAZ,GAAoBkB,CAApB;AACH;;AACDjB,IAAAA,QAAQ,CAACY,QAAQ,CAACM,MAAV,CAAR;AAEAN,IAAAA,QAAQ,CAACO,GAAT,CAAaH,MAAM,IAAIR,OAAO,CAACC,GAAR,CAAYO,MAAZ,CAAvB;AAGApB,IAAAA,UAAU,CAACgB,QAAD,CAAV;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,KAAtB;AAEH,GAjBD;;AAkBA,QAAMqB,eAAe,GAAEN,QAAD,IAAY;AAC9B,QAAIO,sBAAsB,GAAG1B,OAAO,CAAC2B,SAAR,CAAkBC,CAAC,IAAEA,CAAC,CAACC,EAAF,KAASV,QAA9B,CAA7B;AACA,UAAMW,KAAK,GAAG9B,OAAO,CAAC0B,sBAAD,CAArB;AACA,UAAMK,QAAQ,GAAG,EAAC,GAAGD,KAAJ;AAAUD,MAAAA,EAAE,EAAChD,IAAI;AAAjB,KAAjB;AACA6C,IAAAA,sBAAsB,GAACA,sBAAsB,GAAC,CAA9C;AAEA1B,IAAAA,OAAO,CAACgC,MAAR,CAAeN,sBAAf,EAAsC,CAAtC,EAAwCK,QAAxC;AACA9B,IAAAA,UAAU,CAACD,OAAD,CAAV;AAEH,GATD;;AAUA,QAAMiC,QAAQ,GAAIC,MAAD,IAAW;AAExB,UAAMtB,MAAM,GAAGuB,MAAM,CAACC,MAAP,CAAc1C,WAAd,EAA2B0B,MAA3B,CAAkCQ,CAAC,IAAIA,CAAC,CAACxB,KAAF,KAAY8B,MAAM,CAAC9B,KAA1D,CAAf;;AAEA,QAAIQ,MAAM,CAACW,MAAP,GAAgB,CAApB,EAAsB;AAElB,YAAMnB,KAAK,GAAGV,WAAW,CAACiC,SAAZ,CAAsBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASK,MAAM,CAAC9B,KAA3C,CAAd;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBpB,WAAW,CAACU,KAAD,CAApC;AAEAV,MAAAA,WAAW,CAACsC,MAAZ,CAAmB5B,KAAnB,EAAyB,CAAzB,EAA2B8B,MAA3B,EANkB,CAOlB;;AAEAvC,MAAAA,cAAc,CAACD,WAAD,CAAd;AACH,KAVD,MAYA;AACImB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,YAAMG,QAAQ,GAAG,CACb,GAAGvB,WADU,EACGwC,MADH,CAAjB;AAGAvC,MAAAA,cAAc,CAACsB,QAAD,CAAd;AAEH;AAEJ,GAzBD;;AA4BA,QAAMoB,YAAY,GAAG,YAAY;AAE7B,UAAMC,MAAM,GAAG;AAAC7C,MAAAA,IAAI,EAAG,MAAR;AAAgB8C,MAAAA,MAAM,EAAE,cAAxB;AAAwCC,MAAAA,gBAAgB,EAAG,IAAIC,IAAJ,GAAWC,cAAX,EAA3D;AAAwFC,MAAAA,KAAK,EAAGjD;AAAhG,KAAf;AAEAX,IAAAA,KAAK,CAAC6D,IAAN,CAAY,yCAAZ,EAAsDN,MAAtD,EACK7B,IADL,CACUC,GAAG,IAAIG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CADjB;AAGAG,IAAAA,OAAO,CAACC,GAAR,CAAY+B,IAAI,CAACC,SAAL,CAAeR,MAAf,CAAZ;AACH,GARD;;AASA,QAAMS,WAAW,GAAG,CAChB;AAACC,IAAAA,IAAI,eAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAkBvD,IAAAA,IAAI,EAAE,KAAxB;AAA+B4B,IAAAA,MAAM,EAAE,MAAMN,SAAS,CAAC,MAAD;AAAtD,GADgB,EAEhB;AAACiC,IAAAA,IAAI,eAAG,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAiBvD,IAAAA,IAAI,EAAE,YAAvB;AAAqC4B,IAAAA,MAAM,EAAE,MAAMN,SAAS,CAAC,WAAD;AAA5D,GAFgB,EAGhB;AAACiC,IAAAA,IAAI,eAAG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAA2BvD,IAAAA,IAAI,EAAE,SAAjC;AAA4C4B,IAAAA,MAAM,EAAE,MAAMN,SAAS,CAAC,SAAD;AAAnE,GAHgB,EAIhB;AAACiC,IAAAA,IAAI,eAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAkBvD,IAAAA,IAAI,EAAE,UAAxB;AAAoC4B,IAAAA,MAAM,EAAE,MAAMN,SAAS,CAAC,SAAD;AAA3D,GAJgB,EAKhB;AAACiC,IAAAA,IAAI,eAAG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAyBvD,IAAAA,IAAI,EAAE,QAA/B;AAAyC4B,IAAAA,MAAM,EAAE,MAAMN,SAAS,CAAC,QAAD;AAAhE,GALgB,EAMhB;AAACiC,IAAAA,IAAI,eAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAqBvD,IAAAA,IAAI,EAAE,iBAA3B;AAA8C4B,IAAAA,MAAM,EAAE,MAAMN,SAAS,CAAC,UAAD;AAArE,GANgB,CAApB;AASA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAGjB,OAAO,CAACT,IAA1B;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,KAAK,EAAEI,IADX;AAEI,QAAA,SAAS,EAAC,SAFd;AAGI,QAAA,MAAM,eACF,QAAC,SAAD;AACA,UAAA,SAAS,EAAC,WADV;AAEA,UAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAFN;AAGA,UAAA,IAAI,EAAGS,IAHP;AAIA,UAAA,SAAS,EAAG,MAJZ;AAKA,UAAA,MAAM,EAAE,MAAMC,OAAO,CAAC,IAAD,CALrB;AAMA,UAAA,YAAY,EAAE,MAAMA,OAAO,CAAC,KAAD,CAN3B;AAAA,oBAQC4C,WAAW,CAACvB,GAAZ,CAAiBH,MAAD,iBACb,QAAC,eAAD;AAEI,YAAA,IAAI,EAAIA,MAAM,CAAC2B,IAFnB;AAGI,YAAA,YAAY,EAAE3B,MAAM,CAAC5B,IAHzB;AAII,YAAA,gBAAgB,EAAG,KAJvB;AAKI,YAAA,OAAO,EAAG4B,MAAM,CAACA;AALrB,aACSA,MAAM,CAAC5B,IADhB;AAAA;AAAA;AAAA;AAAA,kBADH;AARD;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cADJ,eA0BI,QAAC,WAAD;AAAA,+BACI,QAAC,aAAD,CAAe,QAAf;AAAwB,UAAA,KAAK,EAAE;AAACO,YAAAA,OAAD;AAAUkB,YAAAA,YAAV;AAAwBO,YAAAA,eAAxB;AAAyCQ,YAAAA,QAAzC;AAAmD3B,YAAAA;AAAnD,WAA/B;AAAA,iCACI;AAAM,YAAA,UAAU,MAAhB;AAAiB,YAAA,YAAY,EAAC,IAA9B;AAAA,uBACKN,OAAO,CAACwB,GAAR,CAAYyB,IAAI,IAETA,IAAI,CAACjC,IAAL,KAAc,SAAd,gBAA4B,QAAC,OAAD;AAA0B,cAAA,KAAK,EAAEiC,IAAI,CAAC7C;AAAtC,eAAc6C,IAAI,CAAC7C,KAAnB;AAAA;AAAA;AAAA;AAAA,oBAA5B,GACA6C,IAAI,CAACjC,IAAL,KAAc,QAAd,gBAA4B,QAAC,QAAD;AAA2B,cAAA,KAAK,EAAEiC,IAAI,CAAC7C;AAAvC,eAAe6C,IAAI,CAAC7C,KAApB;AAAA;AAAA;AAAA;AAAA,oBAA5B,GACA6C,IAAI,CAACjC,IAAL,KAAc,UAAd,gBAA4B,QAAC,QAAD;AAA2B,cAAA,KAAK,EAAEiC,IAAI,CAAC7C;AAAvC,eAAe6C,IAAI,CAAC7C,KAApB;AAAA;AAAA;AAAA;AAAA,oBAA5B,GACA6C,IAAI,CAACjC,IAAL,KAAc,SAAd,gBAA4B,QAAC,OAAD;AAA2B,cAAA,KAAK,EAAEiC,IAAI,CAAC7C;AAAvC,eAAc6C,IAAI,CAAC7C,KAAnB;AAAA;AAAA;AAAA;AAAA,oBAA5B,GACA6C,IAAI,CAACjC,IAAL,KAAc,MAAd,gBAA4B,QAAC,IAAD;AAAwB,cAAA,KAAK,EAAEiC,IAAI,CAAC7C;AAApC,eAAW6C,IAAI,CAAC7C,KAAhB;AAAA;AAAA;AAAA;AAAA,oBAA5B,GACA6C,IAAI,CAACjC,IAAL,KAAc,WAAd,gBAA4B,QAAC,SAAD;AAA6B,cAAA,KAAK,EAAEiC,IAAI,CAAC7C;AAAzC,eAAgB6C,IAAI,CAAC7C,KAArB;AAAA;AAAA;AAAA;AAAA,oBAA5B,GACA,IARP,CADL,eAYI,QAAC,MAAD;AAEI,cAAA,KAAK,EAAC,WAFV;AAGI,cAAA,OAAO,EAAC,WAHZ,CAII;AAJJ;AAKI,cAAA,OAAO,EAAEiC,YALb;AAOI,cAAA,OAAO,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,sBAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0DH,CAnKD;;GAAM7C,M;UACcL,S,EACAL,U;;;KAFdU,M;AAqKN,eAAeA,MAAf","sourcesContent":["import { Button,Box,  Container,  makeStyles, Paper, Card, CardHeader, CardContent} from '@material-ui/core'\r\nimport { Code, Description, Http, KeyboardArrowRight, SettingsSharp, Storage, Web } from '@material-ui/icons';\r\nimport Service from './Actions/Service';\r\nimport Database from './Actions/Database';\r\nimport Command from './Actions/Command';\r\nimport ARScript from './Actions/ARScript';\r\nimport { useEffect, useState } from 'react';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial'\r\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\r\nimport ActionContext from '../Context/ActionContext';\r\nimport {v4 as uuid} from \"uuid\";\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\nimport Link from './Actions/Link'\r\nimport WebAction from './Actions/WebAction';\r\n\r\nconst cardWidth = 850\r\nconst useStyles = makeStyles(theme =>({\r\n    root:{\r\n        // width : cardWidth,\r\n        marginBottom : theme.spacing(2) \r\n    }\r\n}))\r\nconst ARCard = ({name, StopActions,setStopActions,StartActions, setStartActions}) => {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const [actions, SetActions] = useState([])\r\n    const [open,setOpen] = useState(false)\r\n    const [index, setIndex] = useState(0)\r\n\r\n\r\n    useEffect(() =>{\r\n        //fetch(\"http://localhost:8000/Actions\")\r\n        //.then(res => res.json())\r\n        //.then(data => SetActions(data))\r\n    },[])\r\n\r\n    const testPing = (server) =>{\r\n        fetch(`http://localhost:5000/api/PARPRE?server=${server}`)\r\n            .then(res => res.json())\r\n            .then(result => {console.log(\"error\"); return result})\r\n    }\r\n\r\n    const addAction = (type) =>{\r\n        const newState = [\r\n            ...actions,{\r\n                index : index,\r\n                type : type\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        setIndex(index+1)\r\n    }\r\n    \r\n    const deleteAction=(actionID)=>{\r\n\r\n        const newState = actions.filter(action => action.index !== actionID)\r\n        \r\n        var i ;\r\n\r\n        for(i = 0; i < newState.length; i++){\r\n            newState[i].index = i;\r\n        }\r\n        setIndex(newState.length )\r\n\r\n        newState.map(action => console.log(action))\r\n\r\n\r\n        SetActions(newState)\r\n        console.log(\"index \", index)\r\n\r\n    }\r\n    const duplicateAction=(actionID)=>{\r\n        var actionToDuplicateIndex = actions.findIndex(e=>e.id === actionID)\r\n        const clone = actions[actionToDuplicateIndex]\r\n        const newClone = {...clone,id:uuid()}\r\n        actionToDuplicateIndex=actionToDuplicateIndex+1\r\n        \r\n        actions.splice(actionToDuplicateIndex,0,newClone)\r\n        SetActions(actions)\r\n\r\n    }\r\n    const saveData = (object) =>{\r\n        \r\n        const result = Object.values(StopActions).filter(e => e.index === object.index)\r\n\r\n        if (result.length > 0){\r\n\r\n            const index = StopActions.findIndex(e => e.id === object.index )\r\n\r\n            console.log('Changement',StopActions[index])\r\n\r\n            StopActions.splice(index,1,object)\r\n            //console.log(\"datas : \", StopActions)\r\n\r\n            setStopActions(StopActions)            \r\n        }\r\n        else\r\n        {\r\n            console.log(\"Nouvelle entrée\")\r\n            const newState = [\r\n                ...StopActions, object\r\n            ]\r\n            setStopActions(newState) \r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const generateJson = async () => {\r\n\r\n        const parpre = {name : \"ARES\" ,auteur: \"Samba NDIAYE\", date_de_creation : new Date().toLocaleString(), Arret : StopActions}\r\n\r\n        axios.post(`http://localhost:5000/api/PARPRE/create`, parpre)\r\n            .then(res => console.log(res))\r\n            \r\n        console.log(JSON.stringify(parpre))\r\n    }\r\n    const iconsAction = [\r\n        {icon : <Http />, name: 'Url', action: () => addAction(\"link\")}, \r\n        {icon : <Web />, name: 'Action Web', action: () => addAction(\"webAction\")}, \r\n        {icon : <SettingsSharp />, name: 'Service', action: () => addAction(\"service\")},\r\n        {icon : <Code />, name: 'Commande', action: () => addAction(\"command\")},\r\n        {icon : <Description />, name: 'Script', action: () => addAction(\"script\")},\r\n        {icon : <Storage />, name: 'Base de données', action: () => addAction(\"database\")}\r\n        \r\n    ]\r\n    return ( \r\n        <Container>\r\n            <Card className= {classes.root}>\r\n                <CardHeader \r\n                    title={name}\r\n                    subheader=\"hybride\"\r\n                    action={\r\n                        <SpeedDial\r\n                        ariaLabel=\"SpeedDial\"\r\n                        icon={<SpeedDialIcon />}\r\n                        open={ open }\r\n                        direction = 'left'\r\n                        onOpen={() => setOpen(true)}\r\n                        onMouseLeave={() => setOpen(false)}\r\n                        >\r\n                        {iconsAction.map((action) => (\r\n                            <SpeedDialAction \r\n                                key={action.name}\r\n                                icon = {action.icon}\r\n                                tooltipTitle={action.name}\r\n                                tooltipPlacement = 'top'\r\n                                onClick= {action.action}\r\n                            />\r\n                        ))}\r\n                    </SpeedDial>\r\n                    }\r\n                />\r\n\r\n                <CardContent>\r\n                    <ActionContext.Provider value={{actions, deleteAction, duplicateAction, saveData, testPing}}>\r\n                        <form noValidate autoComplete='on'>\r\n                            {actions.map(item => (\r\n                                (\r\n                                    item.type === \"service\" ?   <Service key={item.index} index={item.index}/> :\r\n                                    item.type === \"script\"  ?   <ARScript key={item.index} index={item.index} /> :\r\n                                    item.type === \"database\"?   <Database key={item.index} index={item.index}/> :\r\n                                    item.type === \"command\" ?   <Command key={item.index}  index={item.index} /> :\r\n                                    item.type === \"link\" ?      <Link key={item.index}  index={item.index} /> :\r\n                                    item.type === \"webAction\" ? <WebAction key={item.index}  index={item.index} /> :\r\n                                    null\r\n                                )\r\n                            ))}\r\n                            <Button\r\n                                \r\n                                color=\"secondary\" \r\n                                variant=\"contained\"\r\n                                //onClick={generateJson}\r\n                                onClick={generateJson}\r\n                                \r\n                                endIcon={<KeyboardArrowRight />}>\r\n                                Generate\r\n                            </Button>\r\n                        </form>\r\n                    </ActionContext.Provider>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n     ); \r\n}\r\n \r\nexport default ARCard;\r\n"]},"metadata":{},"sourceType":"module"}