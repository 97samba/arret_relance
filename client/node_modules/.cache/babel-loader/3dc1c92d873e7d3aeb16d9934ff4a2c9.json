{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Components\\\\Actions\\\\Command.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Chip, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core';\nimport { Code, Comment, Delete, FileCopy, MoreVert, SettingsSharp } from \"@material-ui/icons\";\nimport { useContext, useEffect, useState } from \"react\";\nimport ActionContext from \"../../Context/ActionContext\";\nimport OptionDialog from \"../Creation/OptionDialog\";\nimport OptionMenu from \"../Creation/OptionMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#F6F6FB',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  fields: {\n    //marginRight:theme.spacing(2),\n    width: \"100%\"\n  },\n  smallAvatar: {\n    width: theme.spacing(2.5),\n    height: theme.spacing(2.5)\n  }\n}));\n\nconst Command = ({\n  index,\n  type,\n  initialSTate\n}) => {\n  _s();\n\n  //css\n  const classes = useStyles();\n  const [action, setAction] = useState('STOP'); //létat du composant\n\n  const [state, setState] = useState({}); //l'état du server\n\n  const [pingState, setPingState] = useState(\"ko\");\n  const [status, setStatus] = useState(type);\n  const [OS, SetOS] = useState(\"\");\n  useEffect(() => {\n    setState(initialSTate);\n    setStatus(initialSTate.action);\n  }, []); //context pour sauvegarder l'état dans le parent\n\n  const {\n    deleteAction,\n    duplicateAction,\n    saveData,\n    test,\n    AddServer\n  } = useContext(ActionContext);\n\n  const saveInformations = () => {\n    if (state.service === undefined || state.server === undefined) {\n      return;\n    }\n\n    saveData({\n      index: index,\n      type: \"service\",\n      server: state.server,\n      service: state.service,\n      action: status\n    });\n  }; //test si le service existe\n\n\n  const testService = async service => {\n    if (state.server === null || pingState === \"ko\") {\n      return;\n    }\n\n    console.log(\"Testing service : \", service, \"server \", state.server);\n    fetch(`http://localhost:5000/api/PARPRE/service?name=${service}&server=${state.server}`).then(res => res.json()).then(result => console.log(result)); //.then(() => saveInformations())\n  }; //Fait un ping\n\n\n  const testPing = async server => {\n    await fetch(`http://localhost:5000/api/PARPRE?server=${server}`).then(res => res.json()).then(result => {\n      setPingState(result);\n      console.log(result.state); //saveInformations()\n\n      if (result.state === \"ok\") {}\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          container: true,\n          alignContent: \"center\",\n          direction: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Code, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            value: state.server,\n            id: `server- ${index}`,\n            color: \"primary\",\n            label: \"Serveur\",\n            onChange: e => setState({ ...state,\n              server: e.target.value\n            }),\n            onBlur: e => {\n              saveInformations();\n              testPing(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            value: state.login,\n            id: `login- ${index}`,\n            color: \"primary\",\n            label: \"Login\",\n            onChange: e => setState({ ...state,\n              login: e.target.value\n            }),\n            onBlur: e => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 4,\n          xl: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: state.command,\n            className: classes.fields,\n            id: `command- ${index}`,\n            color: \"primary\",\n            label: \"Commande\",\n            onChange: e => setState({ ...state,\n              command: e.target.value\n            }),\n            onBlur: e => saveInformations()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.fields,\n            value: state.result,\n            id: `result- ${index}`,\n            color: \"primary\",\n            label: \"R\\xE9sultat\",\n            onChange: e => setState({ ...state,\n              result: e.target.value\n            }),\n            onBlur: e => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(OptionMenu, {\n                index: index,\n                deleteAction: deleteAction,\n                duplicateAction: duplicateAction\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                my: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: classes.smallAvatar,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Command, \"886yIIDS2/xcTwKRlmOBdhSBM5I=\", false, function () {\n  return [useStyles];\n});\n\n_c = Command;\nexport default Command;\n\nvar _c;\n\n$RefreshReg$(_c, \"Command\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Components/Actions/Command.js"],"names":["Avatar","Box","Chip","FormControl","Grid","IconButton","InputLabel","Menu","MenuItem","Paper","Select","TextField","Typography","makeStyles","Code","Comment","Delete","FileCopy","MoreVert","SettingsSharp","useContext","useEffect","useState","ActionContext","OptionDialog","OptionMenu","useStyles","theme","root","background","padding","spacing","marginBottom","fields","width","smallAvatar","height","Command","index","type","initialSTate","classes","action","setAction","state","setState","pingState","setPingState","status","setStatus","OS","SetOS","deleteAction","duplicateAction","saveData","test","AddServer","saveInformations","service","undefined","server","testService","console","log","fetch","then","res","json","result","testPing","e","target","value","login","command"],"mappings":"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","sourcesContent":["import { Avatar, Box, Chip, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Code, Comment, Delete, FileCopy, MoreVert, SettingsSharp } from \"@material-ui/icons\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport ActionContext from \"../../Context/ActionContext\"\r\nimport OptionDialog from \"../Creation/OptionDialog\"\r\nimport OptionMenu from \"../Creation/OptionMenu\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: '#F6F6FB',\r\n        padding: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n\r\n    },\r\n    fields: {\r\n        //marginRight:theme.spacing(2),\r\n        width: \"100%\"\r\n    },\r\n    smallAvatar: {\r\n        width: theme.spacing(2.5),\r\n        height: theme.spacing(2.5)\r\n    }\r\n}))\r\nconst Command = ({ index, type, initialSTate }) => {\r\n    //css\r\n    const classes = useStyles()\r\n\r\n    const [action, setAction] = useState('STOP')\r\n    //létat du composant\r\n    const [state, setState] = useState({})\r\n    //l'état du server\r\n    const [pingState, setPingState] = useState(\"ko\")\r\n    const [status, setStatus] = useState(type)\r\n    const [OS, SetOS] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        setState(initialSTate)\r\n        setStatus(initialSTate.action)\r\n\r\n    }, []\r\n    )\r\n\r\n\r\n    //context pour sauvegarder l'état dans le parent\r\n    const { deleteAction, duplicateAction, saveData, test, AddServer } = useContext(ActionContext)\r\n\r\n\r\n    const saveInformations = () => {\r\n        if (state.service === undefined || state.server === undefined) { return }\r\n        saveData(\r\n            {\r\n                index: index, type: \"service\", server: state.server, service: state.service, action: status\r\n            }\r\n        )\r\n    }\r\n    //test si le service existe\r\n    const testService = async (service) => {\r\n\r\n        if (state.server === null || pingState === \"ko\") { return }\r\n\r\n        console.log(\"Testing service : \", service, \"server \", state.server)\r\n        fetch(`http://localhost:5000/api/PARPRE/service?name=${service}&server=${state.server}`)\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n        //.then(() => saveInformations())\r\n    }\r\n    //Fait un ping\r\n    const testPing = async (server) => {\r\n\r\n\r\n        await fetch(`http://localhost:5000/api/PARPRE?server=${server}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setPingState(result)\r\n                console.log(result.state)\r\n                //saveInformations()\r\n\r\n                if (result.state === \"ok\") {\r\n\r\n                }\r\n\r\n            }\r\n            )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paper\r\n                elevation={0}\r\n                className={classes.root}>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item md={1} xl={1} container alignContent=\"center\" direction=\"column\" >\r\n                        <Box display=\"flex\" justifyContent=\"center\">\r\n                            <Code color=\"primary\" />\r\n                        </Box>\r\n\r\n\r\n                    </Grid>\r\n                    <Grid item md={2} xl={2}>\r\n                        <TextField\r\n                            className={classes.fields}\r\n                            value={state.server}\r\n                            id={`server- ${index}`}\r\n                            color='primary'\r\n                            label='Serveur'\r\n                            onChange={(e) => setState({ ...state, server: e.target.value })}\r\n                            onBlur={(e) => {\r\n                                saveInformations()\r\n\r\n                                testPing(e.target.value)\r\n\r\n                            }\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={2} xl={2}>\r\n                        <TextField\r\n                                className={classes.fields}\r\n                                value={state.login}\r\n                                id={`login- ${index}`}\r\n                                color='primary'\r\n                                label='Login'\r\n                                onChange={(e) => setState({ ...state, login: e.target.value })}\r\n                                onBlur={(e) => {\r\n                                }\r\n                                }\r\n                            />\r\n                    </Grid>\r\n                    <Grid item md={4} xl={4}>\r\n                        <TextField\r\n                            value={state.command}\r\n                            className={classes.fields}\r\n                            id={`command- ${index}`}\r\n                            color='primary'\r\n                            label='Commande'\r\n                            onChange={(e) => setState({ ...state, command:e.target.value })}\r\n                            onBlur={(e) => saveInformations()}\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={2} xl={2}>\r\n                        <TextField\r\n                                className={classes.fields}\r\n                                value={state.result}\r\n                                id={`result- ${index}`}\r\n                                color='primary'\r\n                                label='Résultat'\r\n                                onChange={(e) => setState({ ...state, result: e.target.value })}\r\n                                onBlur={(e) => {\r\n                                }\r\n                                }\r\n                            />\r\n                    </Grid>\r\n                    <Grid item md={1} xl={1}  >\r\n                        <Grid container spacing={3} alignItems=\"center\" >\r\n                            <Grid item md={6} >\r\n                                <OptionMenu index={index} deleteAction={deleteAction} duplicateAction={duplicateAction}  />\r\n                                \r\n                               \r\n                            </Grid>\r\n\r\n                            <Grid item md={6}>\r\n                                <Box my=\"auto\" >\r\n                                    <Avatar className={classes.smallAvatar} >\r\n\r\n                                        <Typography>\r\n                                            {index + 1}\r\n                                        </Typography>\r\n                                    </Avatar>\r\n\r\n                                </Box>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Command;"]},"metadata":{},"sourceType":"module"}