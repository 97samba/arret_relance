{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Components\\\\Actions\\\\Command.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Chip, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core';\nimport { Code, Comment, Delete, FileCopy, MoreVert, SettingsSharp } from \"@material-ui/icons\";\nimport { useContext, useEffect, useState } from \"react\";\nimport ActionContext from \"../../Context/ActionContext\";\nimport OptionDialog from \"../Creation/OptionDialog\";\nimport OptionMenu from \"../Creation/OptionMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#F6F6FB',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  fields: {\n    //marginRight:theme.spacing(2),\n    width: \"100%\"\n  },\n  smallAvatar: {\n    width: theme.spacing(2.5),\n    height: theme.spacing(2.5)\n  }\n}));\n\nconst Command = ({\n  index,\n  initialSTate\n}) => {\n  _s();\n\n  //css\n  const classes = useStyles();\n  const [state, setState] = useState({\n    initialSTate\n  }); //l'état du server\n\n  const [pingState, setPingState] = useState(\"ko\");\n  const [OS, SetOS] = useState(\"\");\n  useEffect(() => {\n    setState(initialSTate);\n  }, []); //context pour sauvegarder l'état dans le parent\n\n  const {\n    deleteAction,\n    duplicateAction,\n    saveData\n  } = useContext(ActionContext);\n\n  const saveInformations = () => {\n    if (state.server === undefined || state.name === undefined) {\n      return;\n    }\n\n    saveData({\n      index: index,\n      type: \"command\",\n      server: state.server,\n      name: state.name,\n      login: state.login,\n      result: state.result\n    });\n  }; //test si le service existe\n\n\n  const testService = async service => {\n    if (state.server === null || pingState === \"ko\") {\n      return;\n    }\n\n    console.log(\"Testing service : \", service, \"server \", state.server);\n    fetch(`http://localhost:5000/api/PARPRE/service?name=${service}&server=${state.server}`).then(res => res.json()).then(result => console.log(result));\n  }; //Fait un ping\n\n\n  const testPing = async server => {\n    await fetch(`http://localhost:5000/api/PARPRE?server=${server}`).then(res => res.json()).then(result => {\n      setPingState(result);\n      console.log(result.state); //saveInformations()\n\n      if (result.state === \"ok\") {}\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Command, \"AFt47DOMpEhvhrv0AOIZr+BZ5KY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Command;\nexport default Command;\n\nvar _c;\n\n$RefreshReg$(_c, \"Command\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Components/Actions/Command.js"],"names":["Avatar","Box","Chip","FormControl","Grid","IconButton","InputLabel","Menu","MenuItem","Paper","Select","TextField","Typography","makeStyles","Code","Comment","Delete","FileCopy","MoreVert","SettingsSharp","useContext","useEffect","useState","ActionContext","OptionDialog","OptionMenu","useStyles","theme","root","background","padding","spacing","marginBottom","fields","width","smallAvatar","height","Command","index","initialSTate","classes","state","setState","pingState","setPingState","OS","SetOS","deleteAction","duplicateAction","saveData","saveInformations","server","undefined","name","type","login","result","testService","service","console","log","fetch","then","res","json","testPing"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,WAA5B,EAAyCC,IAAzC,EAA+CC,UAA/C,EAA2DC,UAA3D,EAAuEC,IAAvE,EAA6EC,QAA7E,EAAuFC,KAAvF,EAA8FC,MAA9F,EAAsGC,SAAtG,EAAiHC,UAAjH,QAAmI,mBAAnI;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoDC,aAApD,QAAyE,oBAAzE;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAAEc,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,SADV;AAEFC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFP;AAGFC,IAAAA,YAAY,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd;AAHZ,GAD+B;AAOrCE,EAAAA,MAAM,EAAE;AACJ;AACAC,IAAAA,KAAK,EAAE;AAFH,GAP6B;AAWrCC,EAAAA,WAAW,EAAE;AACTD,IAAAA,KAAK,EAAEP,KAAK,CAACI,OAAN,CAAc,GAAd,CADE;AAETK,IAAAA,MAAM,EAAET,KAAK,CAACI,OAAN,CAAc,GAAd;AAFC;AAXwB,CAAZ,CAAD,CAA5B;;AAiBA,MAAMM,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA6B;AAAA;;AACzC;AACA,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AAEA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC;AAACiB,IAAAA;AAAD,GAAD,CAAlC,CAJyC,CAKzC;;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACuB,EAAD,EAAKC,KAAL,IAAcxB,QAAQ,CAAC,EAAD,CAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,QAAQ,CAACH,YAAD,CAAR;AAEH,GAHQ,EAGN,EAHM,CAAT,CATyC,CAgBzC;;AACA,QAAM;AAAEQ,IAAAA,YAAF;AAAgBC,IAAAA,eAAhB;AAAiCC,IAAAA;AAAjC,MAA6C7B,UAAU,CAACG,aAAD,CAA7D;;AAEA,QAAM2B,gBAAgB,GAAG,MAAM;AAE3B,QAAIT,KAAK,CAACU,MAAN,KAAiBC,SAAjB,IAA8BX,KAAK,CAACY,IAAN,KAAeD,SAAjD,EAA4D;AAAE;AAAQ;;AAEtEH,IAAAA,QAAQ,CACJ;AACIX,MAAAA,KAAK,EAAEA,KADX;AAEIgB,MAAAA,IAAI,EAAE,SAFV;AAGIH,MAAAA,MAAM,EAAEV,KAAK,CAACU,MAHlB;AAIIE,MAAAA,IAAI,EAAEZ,KAAK,CAACY,IAJhB;AAKIE,MAAAA,KAAK,EAAGd,KAAK,CAACc,KALlB;AAMIC,MAAAA,MAAM,EAAGf,KAAK,CAACe;AANnB,KADI,CAAR;AAUH,GAdD,CAnByC,CAkCzC;;;AACA,QAAMC,WAAW,GAAG,MAAOC,OAAP,IAAmB;AAEnC,QAAIjB,KAAK,CAACU,MAAN,KAAiB,IAAjB,IAAyBR,SAAS,KAAK,IAA3C,EAAiD;AAAE;AAAQ;;AAE3DgB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,OAAlC,EAA2C,SAA3C,EAAsDjB,KAAK,CAACU,MAA5D;AACAU,IAAAA,KAAK,CAAE,iDAAgDH,OAAQ,WAAUjB,KAAK,CAACU,MAAO,EAAjF,CAAL,CACKW,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUN,MAAM,IAAIG,OAAO,CAACC,GAAR,CAAYJ,MAAZ,CAFpB;AAGH,GARD,CAnCyC,CA4CzC;;;AACA,QAAMS,QAAQ,GAAG,MAAOd,MAAP,IAAkB;AAG/B,UAAMU,KAAK,CAAE,2CAA0CV,MAAO,EAAnD,CAAL,CACDW,IADC,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADX,EAEDF,IAFC,CAEIN,MAAM,IAAI;AACZZ,MAAAA,YAAY,CAACY,MAAD,CAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACf,KAAnB,EAFY,CAGZ;;AAEA,UAAIe,MAAM,CAACf,KAAP,KAAiB,IAArB,EAA2B,CAE1B;AAEJ,KAXC,CAAN;AAaH,GAhBD;;AAoBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtED;;GAAMJ,O;UAEcX,S;;;KAFdW,O;AAwEN,eAAeA,OAAf","sourcesContent":["import { Avatar, Box, Chip, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Code, Comment, Delete, FileCopy, MoreVert, SettingsSharp } from \"@material-ui/icons\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport ActionContext from \"../../Context/ActionContext\"\r\nimport OptionDialog from \"../Creation/OptionDialog\"\r\nimport OptionMenu from \"../Creation/OptionMenu\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: '#F6F6FB',\r\n        padding: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n\r\n    },\r\n    fields: {\r\n        //marginRight:theme.spacing(2),\r\n        width: \"100%\"\r\n    },\r\n    smallAvatar: {\r\n        width: theme.spacing(2.5),\r\n        height: theme.spacing(2.5)\r\n    }\r\n}))\r\n\r\nconst Command = ({ index, initialSTate }) => {\r\n    //css\r\n    const classes = useStyles()\r\n\r\n    const [state, setState] = useState({initialSTate})\r\n    //l'état du server\r\n    const [pingState, setPingState] = useState(\"ko\")\r\n    const [OS, SetOS] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        setState(initialSTate)\r\n\r\n    }, []\r\n    )\r\n\r\n\r\n    //context pour sauvegarder l'état dans le parent\r\n    const { deleteAction, duplicateAction, saveData} = useContext(ActionContext)\r\n\r\n    const saveInformations = () => {\r\n        \r\n        if (state.server === undefined || state.name === undefined) { return }\r\n\r\n        saveData(\r\n            {\r\n                index: index, \r\n                type: \"command\", \r\n                server: state.server, \r\n                name: state.name, \r\n                login : state.login,\r\n                result : state.result\r\n            }\r\n        )\r\n    }\r\n    //test si le service existe\r\n    const testService = async (service) => {\r\n\r\n        if (state.server === null || pingState === \"ko\") { return }\r\n\r\n        console.log(\"Testing service : \", service, \"server \", state.server)\r\n        fetch(`http://localhost:5000/api/PARPRE/service?name=${service}&server=${state.server}`)\r\n            .then(res => res.json())\r\n            .then(result => console.log(result))\r\n    }\r\n    //Fait un ping\r\n    const testPing = async (server) => {\r\n\r\n\r\n        await fetch(`http://localhost:5000/api/PARPRE?server=${server}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setPingState(result)\r\n                console.log(result.state)\r\n                //saveInformations()\r\n\r\n                if (result.state === \"ok\") {\r\n\r\n                }\r\n\r\n            }\r\n            )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            test\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Command;"]},"metadata":{},"sourceType":"module"}