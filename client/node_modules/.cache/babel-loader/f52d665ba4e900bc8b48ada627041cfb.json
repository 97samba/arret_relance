{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Pages\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport { FormControl, FormControlLabel, FormGroup, FormLabel, Grid, makeStyles, Radio, RadioGroup, Switch, TextField, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport ARCard from \"../Components/ARCard\";\nimport RightNav from \"../Components/Creation/RightNav\";\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidthRight = 260;\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      width: `calc(100% - ${drawerWidthRight}px)`\n    }\n  };\n});\n\nconst Create = () => {\n  _s();\n\n  const [titleOpen, setTitleOpen] = useState(false); //titre de la parpre ou de la POS\n\n  const [title, setTitle] = useState(\"APPXXXX_SSA\"); //les actions d'arrêt\n\n  const [StopActions, setStopActions] = useState([]); //les Actions de relance\n\n  const [StartActions, setStartActions] = useState([]); //creation automatique de la verification\n\n  const [autoCreate, setAutoCreate] = useState(false); //Si on fait la relance automatiquement\n\n  const [autoRelance, setAutoRelance] = useState(false); //Soit PARPRE ou POS\n\n  const [documentType, setDocumentType] = useState(\"PARPRE\"); //Le mode d'utilisation: creation ou modification\n\n  const [pageMode, setPageMode] = useState(\"Création\");\n  const history = useHistory(); //La page de création et la page de modifiation sont les mêmes, la difference est assurée par pageMode\n\n  useEffect(() => {\n    document.title = \"Création de PARPRE / POS\";\n\n    if (history.location.state !== undefined) {\n      document.title = `Modification de ${history.location.state.name}`;\n      console.log(\"History \", history.location);\n      setPageMode(\"Modification\");\n      setDocumentType(history.location.state.type);\n      setStopActions(history.location.state.Arret);\n      setStartActions(history.location.state.Relance);\n      setTitle(history.location.state.name);\n    }\n\n    console.log(\"page mode : \", pageMode);\n  }, []);\n  const [servers, setServers] = useState([]);\n\n  const saveServer = () => {\n    if (StopActions.length < 2) {\n      console.log(\"cant save server \");\n      return;\n    }\n\n    console.log(\"length \", StopActions.length);\n    var Allservers = servers.map(server => {\n      return server.prod;\n    });\n    console.log(\"servers : \", Allservers);\n    var serversInStopActions = new Set(); //on recupere les servers dans les etaes d'arret\n\n    StopActions.map(action => {\n      serversInStopActions.add(action.server);\n    })[serversInStopActions].map(server => {\n      if (!Allservers.includes(server)) {\n        setServers([...servers, {\n          id: servers.length + 1,\n          prod: server,\n          hprod: \"definir\",\n          dev: \"definir\"\n        }]);\n      } else {\n        console.log(\"il y est deja\");\n      }\n    });\n    Allservers.map(server => {\n      if (!serversInStopActions.includes(server)) {\n        console.log(\"on doit enlever \", server);\n      }\n    });\n    console.log(\"all servers : \", Allservers);\n    console.log(\"set servers : \", serversInStopActions);\n  };\n\n  const classes = useStyles();\n\n  const saveStart = object => {\n    setStartActions(object);\n    let Allservers;\n    StartActions.map(action => Allservers.push(action.server));\n    console.log(\"all servers : \", Allservers);\n  };\n\n  const saveStop = object => {\n    setStopActions(object);\n\n    if (object[0].server !== undefined) {\n      console.log(\"Saving servers\");\n      saveServer();\n    }\n  };\n\n  const generateJson = () => {\n    console.log(\"name \", title);\n    const parpre = {\n      name: title,\n      auteur: \"Samba NDIAYE\",\n      date_de_creation: new Date().toLocaleString(),\n      type: documentType,\n      Arret: StopActions,\n      Relance: StartActions\n    };\n    axios.post(`http://localhost:5000/api/PARPRE/create`, parpre).then(res => console.log(res));\n    console.log(JSON.stringify(parpre));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 6,\n        children: titleOpen ? /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"Changer le titre\",\n          onBlur: () => setTitleOpen(false),\n          margin: \"dense\",\n          onChange: e => setTitle(e.target.value),\n          autoFocus: true,\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            onClick: () => setTitleOpen(true),\n            children: [\"Nom : \", title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              onChange: () => setAutoRelance(!autoRelance)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 40\n            }, this),\n            checked: autoRelance,\n            label: \"Relance-Auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: documentType,\n          onChange: e => setDocumentType(e.target.value),\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"POS\",\n              label: \"POS\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 80\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"PARPRE\",\n              label: \"PARPRE\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 86\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ARCard, {\n      name: \"Arr\\xEAt\",\n      type: \"stop\",\n      actions: StopActions,\n      SetActions: saveStop,\n      autoRelance: autoCreate,\n      AddServer: saveServer,\n      generateJson: generateJson\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ARCard, {\n      name: \"Relance\",\n      type: \"start\",\n      actions: StartActions,\n      SetActions: saveStart,\n      AddServer: saveServer\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(RightNav, {\n      ServerRow: servers,\n      saveRows: setServers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"5sN5wj/j+JQVyJjwXOLK5J+AifM=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Pages/Create.js"],"names":["FormControl","FormControlLabel","FormGroup","FormLabel","Grid","makeStyles","Radio","RadioGroup","Switch","TextField","Typography","axios","useEffect","useState","ARCard","RightNav","useHistory","drawerWidthRight","useStyles","theme","root","width","Create","titleOpen","setTitleOpen","title","setTitle","StopActions","setStopActions","StartActions","setStartActions","autoCreate","setAutoCreate","autoRelance","setAutoRelance","documentType","setDocumentType","pageMode","setPageMode","history","document","location","state","undefined","name","console","log","type","Arret","Relance","servers","setServers","saveServer","length","Allservers","map","server","prod","serversInStopActions","Set","action","add","includes","id","hprod","dev","classes","saveStart","object","push","saveStop","generateJson","parpre","auteur","date_de_creation","Date","toLocaleString","post","then","res","JSON","stringify","e","target","value"],"mappings":"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","sourcesContent":["import { FormControl, FormControlLabel, FormGroup, FormLabel, Grid, makeStyles, Radio, RadioGroup, Switch, TextField, Typography } from \"@material-ui/core\"\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ARCard from \"../Components/ARCard\"\r\nimport RightNav from \"../Components/Creation/RightNav\";\r\nimport {useHistory} from 'react-router'\r\n\r\nconst drawerWidthRight = 260\r\n\r\nconst useStyles = makeStyles((theme) =>{\r\n    return{\r\n        root:{\r\n            width:`calc(100% - ${drawerWidthRight}px)`   \r\n        }\r\n\r\n}})\r\n\r\n\r\nconst Create = () => {\r\n\r\n    const [titleOpen, setTitleOpen] = useState(false)\r\n    //titre de la parpre ou de la POS\r\n    const [title, setTitle] = useState(\"APPXXXX_SSA\")\r\n    //les actions d'arrêt\r\n    const [StopActions, setStopActions] = useState([])\r\n    //les Actions de relance\r\n    const [StartActions, setStartActions] = useState([])\r\n    //creation automatique de la verification\r\n    const [autoCreate, setAutoCreate] = useState(false)\r\n    //Si on fait la relance automatiquement\r\n    const [autoRelance, setAutoRelance] = useState(false)\r\n    //Soit PARPRE ou POS\r\n    const [documentType, setDocumentType] = useState(\"PARPRE\")\r\n    //Le mode d'utilisation: creation ou modification\r\n    const [pageMode, setPageMode] = useState(\"Création\")\r\n\r\n    const history = useHistory()\r\n\r\n    //La page de création et la page de modifiation sont les mêmes, la difference est assurée par pageMode\r\n    useEffect(()=>{\r\n\r\n        document.title=\"Création de PARPRE / POS\"\r\n        \r\n        if(history.location.state !== undefined){\r\n            document.title=`Modification de ${history.location.state.name}`\r\n\r\n            console.log(\"History \", history.location)\r\n            setPageMode(\"Modification\")\r\n            setDocumentType(history.location.state.type)\r\n            setStopActions(history.location.state.Arret)\r\n            setStartActions(history.location.state.Relance)\r\n            setTitle(history.location.state.name)\r\n        }\r\n        console.log(\"page mode : \",pageMode)\r\n    },[])\r\n\r\n    const [servers, setServers] = useState([])\r\n\r\n    const saveServer = () =>{\r\n        if(StopActions.length < 2){console.log(\"cant save server \");return}\r\n        console.log(\"length \", StopActions.length)\r\n        var Allservers = servers.map(server => {return server.prod})\r\n        console.log(\"servers : \", Allservers)\r\n        \r\n        var serversInStopActions = new Set()\r\n\r\n        //on recupere les servers dans les etaes d'arret\r\n        StopActions.map(action => {serversInStopActions.add(action.server)})\r\n\r\n        [serversInStopActions].map(server => {\r\n\r\n            if(!Allservers.includes(server)){\r\n\r\n                setServers([...servers, { id : (servers.length + 1),prod : server,hprod:\"definir\",dev:\"definir\"}])\r\n\r\n            }\r\n            else\r\n            {console.log(\"il y est deja\")}    \r\n\r\n        })\r\n\r\n        Allservers.map(server => {\r\n            if(!serversInStopActions.includes(server)){\r\n                console.log(\"on doit enlever \",server)\r\n            }\r\n        })        \r\n        \r\n        console.log(\"all servers : \",Allservers)\r\n        console.log(\"set servers : \",serversInStopActions)\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    const saveStart = (object) =>{\r\n        setStartActions(object)\r\n        let Allservers \r\n        StartActions.map(action => (Allservers.push(action.server)))\r\n        console.log(\"all servers : \",Allservers)\r\n\r\n    }\r\n\r\n    const saveStop = (object) =>{\r\n        setStopActions(object)\r\n\r\n        if(object[0].server !== undefined){\r\n            console.log(\"Saving servers\")\r\n            saveServer()\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const generateJson =  () => {\r\n\r\n        console.log(\"name \",title)\r\n\r\n        const parpre = {\r\n            name : title ,\r\n            auteur: \"Samba NDIAYE\", \r\n            date_de_creation : new Date().toLocaleString(),\r\n            type:documentType, \r\n            Arret : StopActions, \r\n            Relance:StartActions\r\n        }\r\n\r\n        axios.post(`http://localhost:5000/api/PARPRE/create`, parpre)\r\n            .then(res => console.log(res))\r\n            \r\n        console.log(JSON.stringify(parpre))\r\n    }\r\n\r\n    return ( \r\n        \r\n\r\n        <div className={classes.root}>   \r\n            <Grid container spacing={2}>     \r\n                <Grid item md={6}>\r\n                { \r\n                    titleOpen ? \r\n                    (\r\n                        <TextField \r\n                        placeholder=\"Changer le titre\"\r\n                        onBlur={() => setTitleOpen(false)}\r\n                        margin=\"dense\"\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        autoFocus\r\n                        value={title}\r\n                        >\r\n                            \r\n                        </TextField>\r\n                    ) \r\n                    : \r\n                    (\r\n                        <div>\r\n                            <Typography \r\n                            variant='h6'\r\n                            gutterBottom\r\n                            onClick={() => setTitleOpen(true)}\r\n                            >\r\n                                Nom : {title}\r\n\r\n                            </Typography>\r\n                        </div>\r\n                    )\r\n                }    \r\n                </Grid>   \r\n\r\n                {/**\r\n                 <Grid item md={2}>\r\n                  <FormGroup>\r\n                        <FormControlLabel\r\n                            control = {<Switch onChange={()=> setAutoCreate(!autoCreate)}/>}\r\n                            checked={autoCreate}\r\n                            label = \"Verification-Auto\"\r\n                        >\r\n                        \r\n\r\n                        </FormControlLabel>\r\n                        \r\n                    </FormGroup>\r\n                    </Grid> \r\n                 */}\r\n               \r\n                \r\n\r\n                <Grid item md={3}>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control = {<Switch onChange={()=> setAutoRelance(!autoRelance)}/>}\r\n                            checked={autoRelance}\r\n                            label = \"Relance-Auto\"\r\n                        >\r\n                        </FormControlLabel>\r\n                        \r\n                    </FormGroup>\r\n                    \r\n                </Grid>  \r\n                <Grid item md={3}>\r\n                    \r\n                    <RadioGroup value={documentType} onChange={(e) => setDocumentType(e.target.value)}>\r\n                        <FormGroup row >\r\n                            <FormControlLabel value=\"POS\" label=\"POS\" control={<Radio color=\"primary\" />} />\r\n                            <FormControlLabel value=\"PARPRE\" label=\"PARPRE\" control={<Radio color=\"primary\" />} />\r\n                        </FormGroup>\r\n                    </RadioGroup>                       \r\n                   \r\n                </Grid>  \r\n                \r\n            </Grid>\r\n            \r\n                <ARCard \r\n                    name=\"Arrêt\" \r\n                    type=\"stop\" \r\n                    actions={StopActions} \r\n                    SetActions={saveStop} \r\n                    autoRelance = {autoCreate}\r\n                    AddServer={saveServer}\r\n                    generateJson={generateJson}\r\n                    key={1}\r\n                      \r\n                />\r\n                <ARCard \r\n                    name=\"Relance\" \r\n                    type=\"start\"\r\n                    actions = {StartActions} \r\n                    SetActions = {saveStart} \r\n                    AddServer={saveServer} \r\n                    key={2}\r\n\r\n                />\r\n                <RightNav ServerRow={servers} saveRows={setServers} />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;"]},"metadata":{},"sourceType":"module"}