{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projetSFR\\\\AR\\\\client\\\\src\\\\Pages\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport { FormControl, FormControlLabel, FormGroup, FormLabel, Grid, makeStyles, Radio, RadioGroup, Switch, TextField, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport ARCard from \"../Components/ARCard\";\nimport RightNav from \"../Components/Creation/RightNav\";\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidthRight = 260;\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      width: `calc(100% - ${drawerWidthRight}px)`\n    }\n  };\n});\n\nconst Create = () => {\n  _s();\n\n  const [titleOpen, setTitleOpen] = useState(false); //titre de la parpre ou de la POS\n\n  const [title, setTitle] = useState(\"APPXXXX_SSA\"); //les actions d'arrêt\n\n  const [StopActions, setStopActions] = useState([]); //les Actions de relance\n\n  const [StartActions, setStartActions] = useState([]); //creation automatique de la verification\n\n  const [autoCreate, setAutoCreate] = useState(false); //Si on fait la relance automatiquement\n\n  const [autoRelance, setAutoRelance] = useState(false); //Soit PARPRE ou POS\n\n  const [documentType, setDocumentType] = useState(\"PARPRE\"); //Le mode d'utilisation: creation ou modification\n\n  const [pageMode, setPageMode] = useState(\"Création\");\n  const history = useHistory(); //La page de création et la page de modifiation sont les mêmes, la difference est assurée par pageMode\n\n  useEffect(() => {\n    document.title = \"Création de PARPRE / POS\";\n\n    if (history.location.state !== undefined) {\n      document.title = `Modification de ${history.location.state.name}`;\n      console.log(\"History \", history.location);\n      setPageMode(\"Modification\");\n      setDocumentType(history.location.state.type);\n      setStopActions(history.location.state.Arret);\n      setStartActions(history.location.state.Relance);\n      setTitle(history.location.state.name);\n    }\n\n    console.log(\"page mode : \", pageMode);\n  }, []);\n  const [servers, setServers] = useState([{\n    name: 'sw11203',\n    hprod: 'sw11213',\n    dev: \"sw11003\"\n  }]);\n\n  const saveServer = server => {\n    //console.log(\"Saving server \", server)\n    setServers([...servers, {\n      name: server\n    }]);\n  };\n\n  const classes = useStyles();\n\n  const saveStart = object => {\n    setStartActions(object);\n    let Allservers;\n    StartActions.map(action => Allservers.push(action.server));\n    console.log(\"all servers : \", Allservers);\n  };\n\n  const saveStop = object => {\n    //let newServers = []\n    //object.map(action=> newServers=[...newServers,{name : action.server}])\n    //console.log(\"all servers \",newServers)\n    var Allservers = [];\n    StopActions.map(action => {\n      console.log(action.server);\n\n      if (!Allservers.includes(action.server)) {\n        Allservers.push(action.server);\n        setServers([...servers, {\n          name: action.server,\n          hprod: \"definir\",\n          dev: \"definir\"\n        }]);\n      } else {\n        console.log(\"il y est deja\");\n      }\n    });\n    console.log(\"all servers : \", Allservers);\n    setStopActions(object); //setServers(newServers)\n  };\n\n  const generateJson = () => {\n    console.log(\"name \", title);\n    const parpre = {\n      name: title,\n      auteur: \"Samba NDIAYE\",\n      date_de_creation: new Date().toLocaleString(),\n      type: documentType,\n      Arret: StopActions,\n      Relance: StartActions\n    };\n    axios.post(`http://localhost:5000/api/PARPRE/create`, parpre).then(res => console.log(res));\n    console.log(JSON.stringify(parpre));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 6,\n        children: titleOpen ? /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"Changer le titre\",\n          onBlur: () => setTitleOpen(false),\n          margin: \"dense\",\n          onChange: e => setTitle(e.target.value),\n          autoFocus: true,\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            onClick: () => setTitleOpen(true),\n            children: [\"Nom : \", title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              onChange: () => setAutoRelance(!autoRelance)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 40\n            }, this),\n            checked: autoRelance,\n            label: \"Relance-Auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: documentType,\n          onChange: e => setDocumentType(e.target.value),\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"POS\",\n              label: \"POS\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 80\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"PARPRE\",\n              label: \"PARPRE\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 86\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ARCard, {\n      name: \"Arr\\xEAt\",\n      type: \"stop\",\n      actions: StopActions,\n      SetActions: saveStop,\n      autoRelance: autoCreate,\n      AddServer: saveServer,\n      generateJson: generateJson\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ARCard, {\n      name: \"Relance\",\n      type: \"start\",\n      actions: StartActions,\n      SetActions: saveStart,\n      AddServer: saveServer\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(RightNav, {\n      ServerRow: servers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"LW9JaG0lP8ffUt6LAffLrldQUy4=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projetSFR/AR/client/src/Pages/Create.js"],"names":["FormControl","FormControlLabel","FormGroup","FormLabel","Grid","makeStyles","Radio","RadioGroup","Switch","TextField","Typography","axios","useEffect","useState","ARCard","RightNav","useHistory","drawerWidthRight","useStyles","theme","root","width","Create","titleOpen","setTitleOpen","title","setTitle","StopActions","setStopActions","StartActions","setStartActions","autoCreate","setAutoCreate","autoRelance","setAutoRelance","documentType","setDocumentType","pageMode","setPageMode","history","document","location","state","undefined","name","console","log","type","Arret","Relance","servers","setServers","hprod","dev","saveServer","server","classes","saveStart","object","Allservers","map","action","push","saveStop","includes","generateJson","parpre","auteur","date_de_creation","Date","toLocaleString","post","then","res","JSON","stringify","e","target","value"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,SAAxC,EAAmDC,SAAnD,EAA8DC,IAA9D,EAAoEC,UAApE,EAAgFC,KAAhF,EAAuFC,UAAvF,EAAmGC,MAAnG,EAA2GC,SAA3G,EAAsHC,UAAtH,QAAwI,mBAAxI;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAAQC,UAAR,QAAyB,cAAzB;;AAEA,MAAMC,gBAAgB,GAAG,GAAzB;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAAEc,KAAD,IAAU;AACnC,SAAM;AACFC,IAAAA,IAAI,EAAC;AACDC,MAAAA,KAAK,EAAE,eAAcJ,gBAAiB;AADrC;AADH,GAAN;AAKF,CAN0B,CAA5B;;AASA,MAAMK,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C,CAFiB,CAGjB;;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,aAAD,CAAlC,CAJiB,CAKjB;;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C,CANiB,CAOjB;;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD,CARiB,CASjB;;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C,CAViB,CAWjB;;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,KAAD,CAA9C,CAZiB,CAajB;;AACA,QAAM,CAACsB,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,QAAD,CAAhD,CAdiB,CAejB;;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,UAAD,CAAxC;AAEA,QAAM0B,OAAO,GAAGvB,UAAU,EAA1B,CAlBiB,CAoBjB;;AACAJ,EAAAA,SAAS,CAAC,MAAI;AAEV4B,IAAAA,QAAQ,CAACf,KAAT,GAAe,0BAAf;;AAEA,QAAGc,OAAO,CAACE,QAAR,CAAiBC,KAAjB,KAA2BC,SAA9B,EAAwC;AACpCH,MAAAA,QAAQ,CAACf,KAAT,GAAgB,mBAAkBc,OAAO,CAACE,QAAR,CAAiBC,KAAjB,CAAuBE,IAAK,EAA9D;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,OAAO,CAACE,QAAhC;AACAH,MAAAA,WAAW,CAAC,cAAD,CAAX;AACAF,MAAAA,eAAe,CAACG,OAAO,CAACE,QAAR,CAAiBC,KAAjB,CAAuBK,IAAxB,CAAf;AACAnB,MAAAA,cAAc,CAACW,OAAO,CAACE,QAAR,CAAiBC,KAAjB,CAAuBM,KAAxB,CAAd;AACAlB,MAAAA,eAAe,CAACS,OAAO,CAACE,QAAR,CAAiBC,KAAjB,CAAuBO,OAAxB,CAAf;AACAvB,MAAAA,QAAQ,CAACa,OAAO,CAACE,QAAR,CAAiBC,KAAjB,CAAuBE,IAAxB,CAAR;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BT,QAA3B;AACH,GAfQ,EAeP,EAfO,CAAT;AAiBA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBtC,QAAQ,CAAC,CACnC;AAAE+B,IAAAA,IAAI,EAAE,SAAR;AAAmBQ,IAAAA,KAAK,EAAE,SAA1B;AAAqCC,IAAAA,GAAG,EAAE;AAA1C,GADmC,CAAD,CAAtC;;AAKA,QAAMC,UAAU,GAAIC,MAAD,IAAW;AAC3B;AACCJ,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAY;AAACN,MAAAA,IAAI,EAACW;AAAN,KAAZ,CAAD,CAAV;AACH,GAHD;;AAKA,QAAMC,OAAO,GAAGtC,SAAS,EAAzB;;AAEA,QAAMuC,SAAS,GAAIC,MAAD,IAAW;AACzB5B,IAAAA,eAAe,CAAC4B,MAAD,CAAf;AACA,QAAIC,UAAJ;AACA9B,IAAAA,YAAY,CAAC+B,GAAb,CAAiBC,MAAM,IAAKF,UAAU,CAACG,IAAX,CAAgBD,MAAM,CAACN,MAAvB,CAA5B;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6Ba,UAA7B;AAEH,GAND;;AAQA,QAAMI,QAAQ,GAAIL,MAAD,IAAW;AAExB;AAEA;AAEA;AACA,QAAIC,UAAU,GAAG,EAAjB;AACAhC,IAAAA,WAAW,CAACiC,GAAZ,CAAgBC,MAAM,IAAI;AACtBhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,MAAM,CAACN,MAAnB;;AACA,UAAG,CAACI,UAAU,CAACK,QAAX,CAAoBH,MAAM,CAACN,MAA3B,CAAJ,EAAuC;AACnCI,QAAAA,UAAU,CAACG,IAAX,CAAgBD,MAAM,CAACN,MAAvB;AACAJ,QAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAa;AAACN,UAAAA,IAAI,EAAGiB,MAAM,CAACN,MAAf;AAAsBH,UAAAA,KAAK,EAAC,SAA5B;AAAsCC,UAAAA,GAAG,EAAC;AAA1C,SAAb,CAAD,CAAV;AACH,OAHD,MAGK;AAACR,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAA6B;AAGtC,KARD;AASAD,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6Ba,UAA7B;AACA/B,IAAAA,cAAc,CAAC8B,MAAD,CAAd,CAlBwB,CAoBxB;AAEH,GAtBD;;AAwBA,QAAMO,YAAY,GAAI,MAAM;AAExBpB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBrB,KAApB;AAEA,UAAMyC,MAAM,GAAG;AACXtB,MAAAA,IAAI,EAAGnB,KADI;AAEX0C,MAAAA,MAAM,EAAE,cAFG;AAGXC,MAAAA,gBAAgB,EAAG,IAAIC,IAAJ,GAAWC,cAAX,EAHR;AAIXvB,MAAAA,IAAI,EAACZ,YAJM;AAKXa,MAAAA,KAAK,EAAGrB,WALG;AAMXsB,MAAAA,OAAO,EAACpB;AANG,KAAf;AASAlB,IAAAA,KAAK,CAAC4D,IAAN,CAAY,yCAAZ,EAAsDL,MAAtD,EACKM,IADL,CACUC,GAAG,IAAI5B,OAAO,CAACC,GAAR,CAAY2B,GAAZ,CADjB;AAGA5B,IAAAA,OAAO,CAACC,GAAR,CAAY4B,IAAI,CAACC,SAAL,CAAeT,MAAf,CAAZ;AACH,GAjBD;;AAmBA,sBAGI;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACpC,IAAxB;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,kBAEIG,SAAS,gBAEL,QAAC,SAAD;AACA,UAAA,WAAW,EAAC,kBADZ;AAEA,UAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD,CAF1B;AAGA,UAAA,MAAM,EAAC,OAHP;AAIA,UAAA,QAAQ,EAAGoD,CAAD,IAAOlD,QAAQ,CAACkD,CAAC,CAACC,MAAF,CAASC,KAAV,CAJzB;AAKA,UAAA,SAAS,MALT;AAMA,UAAA,KAAK,EAAErD;AANP;AAAA;AAAA;AAAA;AAAA,gBAFK,gBAeL;AAAA,iCACI,QAAC,UAAD;AACA,YAAA,OAAO,EAAC,IADR;AAEA,YAAA,YAAY,MAFZ;AAGA,YAAA,OAAO,EAAE,MAAMD,YAAY,CAAC,IAAD,CAH3B;AAAA,iCAKWC,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAjBR;AAAA;AAAA;AAAA;AAAA,cADJ,eAkDI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACI,QAAC,SAAD;AAAA,iCACI,QAAC,gBAAD;AACI,YAAA,OAAO,eAAI,QAAC,MAAD;AAAQ,cAAA,QAAQ,EAAE,MAAKS,cAAc,CAAC,CAACD,WAAF;AAArC;AAAA;AAAA;AAAA;AAAA,oBADf;AAEI,YAAA,OAAO,EAAEA,WAFb;AAGI,YAAA,KAAK,EAAG;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlDJ,eA8DI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BAEI,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEE,YAAnB;AAAiC,UAAA,QAAQ,EAAGyC,CAAD,IAAOxC,eAAe,CAACwC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjE;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,GAAG,MAAd;AAAA,oCACI,QAAC,gBAAD;AAAkB,cAAA,KAAK,EAAC,KAAxB;AAA8B,cAAA,KAAK,EAAC,KAApC;AAA0C,cAAA,OAAO,eAAE,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAnD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,gBAAD;AAAkB,cAAA,KAAK,EAAC,QAAxB;AAAiC,cAAA,KAAK,EAAC,QAAvC;AAAgD,cAAA,OAAO,eAAE,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAzD;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cA9DJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA4EQ,QAAC,MAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,OAAO,EAAEnD,WAHb;AAII,MAAA,UAAU,EAAEoC,QAJhB;AAKI,MAAA,WAAW,EAAIhC,UALnB;AAMI,MAAA,SAAS,EAAEuB,UANf;AAOI,MAAA,YAAY,EAAEW;AAPlB,OAQS,CART;AAAA;AAAA;AAAA;AAAA,YA5ER,eAuFQ,QAAC,MAAD;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,OAAO,EAAIpC,YAHf;AAII,MAAA,UAAU,EAAI4B,SAJlB;AAKI,MAAA,SAAS,EAAEH;AALf,OAMS,CANT;AAAA;AAAA;AAAA;AAAA,YAvFR,eAgGQ,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEJ;AAArB;AAAA;AAAA;AAAA;AAAA,YAhGR;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAsGH,CA3MD;;GAAM5B,M;UAkBcN,U,EA8BAE,S;;;KAhDdI,M;AA6MN,eAAeA,MAAf","sourcesContent":["import { FormControl, FormControlLabel, FormGroup, FormLabel, Grid, makeStyles, Radio, RadioGroup, Switch, TextField, Typography } from \"@material-ui/core\"\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ARCard from \"../Components/ARCard\"\r\nimport RightNav from \"../Components/Creation/RightNav\";\r\nimport {useHistory} from 'react-router'\r\n\r\nconst drawerWidthRight = 260\r\n\r\nconst useStyles = makeStyles((theme) =>{\r\n    return{\r\n        root:{\r\n            width:`calc(100% - ${drawerWidthRight}px)`   \r\n        }\r\n\r\n}})\r\n\r\n\r\nconst Create = () => {\r\n\r\n    const [titleOpen, setTitleOpen] = useState(false)\r\n    //titre de la parpre ou de la POS\r\n    const [title, setTitle] = useState(\"APPXXXX_SSA\")\r\n    //les actions d'arrêt\r\n    const [StopActions, setStopActions] = useState([])\r\n    //les Actions de relance\r\n    const [StartActions, setStartActions] = useState([])\r\n    //creation automatique de la verification\r\n    const [autoCreate, setAutoCreate] = useState(false)\r\n    //Si on fait la relance automatiquement\r\n    const [autoRelance, setAutoRelance] = useState(false)\r\n    //Soit PARPRE ou POS\r\n    const [documentType, setDocumentType] = useState(\"PARPRE\")\r\n    //Le mode d'utilisation: creation ou modification\r\n    const [pageMode, setPageMode] = useState(\"Création\")\r\n\r\n    const history = useHistory()\r\n\r\n    //La page de création et la page de modifiation sont les mêmes, la difference est assurée par pageMode\r\n    useEffect(()=>{\r\n\r\n        document.title=\"Création de PARPRE / POS\"\r\n        \r\n        if(history.location.state !== undefined){\r\n            document.title=`Modification de ${history.location.state.name}`\r\n\r\n            console.log(\"History \", history.location)\r\n            setPageMode(\"Modification\")\r\n            setDocumentType(history.location.state.type)\r\n            setStopActions(history.location.state.Arret)\r\n            setStartActions(history.location.state.Relance)\r\n            setTitle(history.location.state.name)\r\n        }\r\n        console.log(\"page mode : \",pageMode)\r\n    },[])\r\n\r\n    const [servers, setServers] = useState([\r\n        { name: 'sw11203', hprod: 'sw11213', dev: \"sw11003\" },\r\n        \r\n    ])\r\n\r\n    const saveServer = (server) =>{\r\n       //console.log(\"Saving server \", server)\r\n        setServers([...servers,{name:server}])\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    const saveStart = (object) =>{\r\n        setStartActions(object)\r\n        let Allservers \r\n        StartActions.map(action => (Allservers.push(action.server)))\r\n        console.log(\"all servers : \",Allservers)\r\n\r\n    }\r\n\r\n    const saveStop = (object) =>{\r\n        \r\n        //let newServers = []\r\n\r\n        //object.map(action=> newServers=[...newServers,{name : action.server}])\r\n\r\n        //console.log(\"all servers \",newServers)\r\n        var Allservers = []\r\n        StopActions.map(action => {\r\n            console.log(action.server)\r\n            if(!Allservers.includes(action.server)){\r\n                Allservers.push(action.server)\r\n                setServers([...servers, {name : action.server,hprod:\"definir\",dev:\"definir\"}])\r\n            }else{console.log(\"il y est deja\")}\r\n            \r\n            \r\n        })\r\n        console.log(\"all servers : \",Allservers)\r\n        setStopActions(object)\r\n\r\n        //setServers(newServers)\r\n\r\n    }\r\n\r\n    const generateJson =  () => {\r\n\r\n        console.log(\"name \",title)\r\n\r\n        const parpre = {\r\n            name : title ,\r\n            auteur: \"Samba NDIAYE\", \r\n            date_de_creation : new Date().toLocaleString(),\r\n            type:documentType, \r\n            Arret : StopActions, \r\n            Relance:StartActions\r\n        }\r\n\r\n        axios.post(`http://localhost:5000/api/PARPRE/create`, parpre)\r\n            .then(res => console.log(res))\r\n            \r\n        console.log(JSON.stringify(parpre))\r\n    }\r\n\r\n    return ( \r\n        \r\n\r\n        <div className={classes.root}>   \r\n            <Grid container spacing={2}>     \r\n                <Grid item md={6}>\r\n                { \r\n                    titleOpen ? \r\n                    (\r\n                        <TextField \r\n                        placeholder=\"Changer le titre\"\r\n                        onBlur={() => setTitleOpen(false)}\r\n                        margin=\"dense\"\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        autoFocus\r\n                        value={title}\r\n                        >\r\n                            \r\n                        </TextField>\r\n                    ) \r\n                    : \r\n                    (\r\n                        <div>\r\n                            <Typography \r\n                            variant='h6'\r\n                            gutterBottom\r\n                            onClick={() => setTitleOpen(true)}\r\n                            >\r\n                                Nom : {title}\r\n\r\n                            </Typography>\r\n                        </div>\r\n                    )\r\n                }    \r\n                </Grid>   \r\n\r\n                {/**\r\n                 <Grid item md={2}>\r\n                  <FormGroup>\r\n                        <FormControlLabel\r\n                            control = {<Switch onChange={()=> setAutoCreate(!autoCreate)}/>}\r\n                            checked={autoCreate}\r\n                            label = \"Verification-Auto\"\r\n                        >\r\n                        \r\n\r\n                        </FormControlLabel>\r\n                        \r\n                    </FormGroup>\r\n                    </Grid> \r\n                 */}\r\n               \r\n                \r\n\r\n                <Grid item md={3}>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control = {<Switch onChange={()=> setAutoRelance(!autoRelance)}/>}\r\n                            checked={autoRelance}\r\n                            label = \"Relance-Auto\"\r\n                        >\r\n                        </FormControlLabel>\r\n                        \r\n                    </FormGroup>\r\n                    \r\n                </Grid>  \r\n                <Grid item md={3}>\r\n                    \r\n                    <RadioGroup value={documentType} onChange={(e) => setDocumentType(e.target.value)}>\r\n                        <FormGroup row >\r\n                            <FormControlLabel value=\"POS\" label=\"POS\" control={<Radio color=\"primary\" />} />\r\n                            <FormControlLabel value=\"PARPRE\" label=\"PARPRE\" control={<Radio color=\"primary\" />} />\r\n                        </FormGroup>\r\n                    </RadioGroup>                       \r\n                   \r\n                </Grid>  \r\n                \r\n            </Grid>\r\n            \r\n                <ARCard \r\n                    name=\"Arrêt\" \r\n                    type=\"stop\" \r\n                    actions={StopActions} \r\n                    SetActions={saveStop} \r\n                    autoRelance = {autoCreate}\r\n                    AddServer={saveServer}\r\n                    generateJson={generateJson}\r\n                    key={1}\r\n                      \r\n                />\r\n                <ARCard \r\n                    name=\"Relance\" \r\n                    type=\"start\"\r\n                    actions = {StartActions} \r\n                    SetActions = {saveStart} \r\n                    AddServer={saveServer} \r\n                    key={2}\r\n\r\n                />\r\n                <RightNav ServerRow={servers}/>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;"]},"metadata":{},"sourceType":"module"}