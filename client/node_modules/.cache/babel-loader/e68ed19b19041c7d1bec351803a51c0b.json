{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\client\\\\src\\\\Components\\\\Actions\\\\Process.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core';\nimport { Delete, FileCopy, MoreVert, Code, Autorenew } from \"@material-ui/icons\";\nimport { useContext, useState } from \"react\";\nimport ActionContext from \"../../Context/ActionContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#F6F6FB',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  fields: {\n    width: \"100%\"\n  },\n  smallAvatar: {\n    width: theme.spacing(2.5),\n    height: theme.spacing(2.5)\n  }\n}));\n\nconst Process = ({\n  index,\n  type\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchor] = useState(null);\n  const {\n    deleteAction\n  } = useContext(ActionContext);\n  const [state, setState] = useState({});\n  const [status, setStatus] = useState(type);\n  const [OS, SetOS] = useState(\"\");\n\n  const handleClick = event => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchor(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          xl: 1,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Autorenew, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: state.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 2,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => setState({ ...state,\n              server: e.target.value\n            }),\n            className: classes.fields,\n            id: \"server\",\n            color: \"primary\",\n            label: \"Serveur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 2,\n          md: 2,\n          xl: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.fields,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: status,\n              onChange: e => setStatus(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"stop\",\n                children: \"Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"start\",\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"status\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 6,\n          md: 6,\n          xl: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"false\",\n            className: classes.fields,\n            id: \"CMD\",\n            color: \"primary\",\n            label: \"Command\",\n            onChange: e => setState({ ...state,\n              command: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          id: \"menu\",\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: Boolean(anchorEl),\n          onClose: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => deleteAction(index),\n            children: [/*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 72\n            }, this), \"Supprimer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleClick,\n            children: [/*#__PURE__*/_jsxDEV(FileCopy, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 58\n            }, this), \" Dupliquer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          sm: 1,\n          md: 1,\n          xl: 1,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleClick,\n                children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                my: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: classes.smallAvatar,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Process, \"v+cfzgUmLXyrQSF/m6+4x1LWNRU=\", false, function () {\n  return [useStyles];\n});\n\n_c = Process;\nexport default Process;\n\nvar _c;\n\n$RefreshReg$(_c, \"Process\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/client/src/Components/Actions/Process.js"],"names":["Avatar","Box","FormControl","Grid","IconButton","InputLabel","Menu","MenuItem","Paper","Select","TextField","Typography","makeStyles","Delete","FileCopy","MoreVert","Code","Autorenew","useContext","useState","ActionContext","useStyles","theme","root","background","padding","spacing","marginBottom","fields","width","smallAvatar","height","Process","index","type","classes","anchorEl","setAnchor","deleteAction","state","setState","status","setStatus","OS","SetOS","handleClick","event","currentTarget","handleClose","e","server","target","value","command","Boolean"],"mappings":"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","sourcesContent":["import { Avatar, Box, FormControl, Grid, IconButton, InputLabel, Menu, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\"\r\nimport {makeStyles} from '@material-ui/core'\r\nimport { Delete, FileCopy, MoreVert, Code, Autorenew } from \"@material-ui/icons\"\r\nimport { useContext, useState } from \"react\"\r\nimport ActionContext from \"../../Context/ActionContext\"\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        background:'#F6F6FB',\r\n        padding: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n\r\n    },\r\n    fields:{\r\n        width:\"100%\"\r\n\r\n    },\r\n    smallAvatar: {\r\n      width: theme.spacing(2.5),\r\n      height: theme.spacing(2.5)\r\n    }\r\n}))\r\nconst Process = ({index,type}) => {\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchor] = useState(null)\r\n    const { deleteAction} = useContext(ActionContext)\r\n    const [state, setState] = useState({})\r\n    const [status, setStatus] = useState(type)\r\n    const [OS, SetOS] = useState(\"\")\r\n\r\n\r\n    const handleClick = (event) =>{\r\n        setAnchor(event.currentTarget)\r\n    }\r\n    const handleClose= () => {\r\n        setAnchor(null)\r\n    }\r\n    return ( \r\n        <div>\r\n            <Paper \r\n            elevation={0}\r\n            className= {classes.root}>\r\n                <Grid \r\n                    container\r\n                    alignItems=\"center\"\r\n                    spacing={2}\r\n                >\r\n        \r\n                    <Grid item md={1} xl={1}  >\r\n                        <Box  display=\"flex\" justifyContent=\"center\">\r\n                            <Autorenew color=\"primary\" />\r\n                            <Typography>{state.type}</Typography>\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2} md={2} xl={2}>\r\n                        <TextField\r\n                        onChange={(e) => setState({...state, server:e.target.value})}\r\n                        className={classes.fields} \r\n                        id='server'\r\n                        color='primary'\r\n                        label= 'Serveur' />\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2} md={2} xl={2}>\r\n                    <FormControl className={classes.fields}>\r\n                        <InputLabel>Action</InputLabel>\r\n                        <Select value={status} onChange={(e) => setStatus(e.target.value)} >\r\n                            <MenuItem value=\"stop\">Stop</MenuItem>\r\n                            <MenuItem value=\"start\">Start</MenuItem>\r\n                            <MenuItem value=\"status\" >Status</MenuItem>                            \r\n                        </Select>\r\n                    </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={6} md={6} xl={6}>\r\n                        <TextField \r\n                        autoComplete=\"false\"\r\n                        className={classes.fields} \r\n                        id='CMD'\r\n                        color='primary'\r\n                        label= 'Command'\r\n                        onChange={(e) => setState({...state, command:e.target.value})}\r\n                        />\r\n                    </Grid>\r\n                    \r\n\r\n\r\n                    <Menu\r\n                        id=\"menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => deleteAction(index)} ><Delete />Supprimer</MenuItem>\r\n                        <MenuItem onClick={handleClick} ><FileCopy /> Dupliquer</MenuItem>\r\n                    </Menu>\r\n                   \r\n                    <Grid item xs={1} sm={1} md={1} xl={1}>\r\n                        <Grid container spacing={3} alignItems=\"center\" >\r\n                            <Grid item md={6} >\r\n                                <IconButton onClick={handleClick}>\r\n                                    <MoreVert />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        \r\n                            <Grid item md={6}>\r\n                                <Box my=\"auto\" >\r\n                                    <Avatar className={classes.smallAvatar} >\r\n                                    \r\n                                    <Typography>\r\n                                        {index + 1}\r\n                                    </Typography> \r\n                                    \r\n                                    \r\n                                    </Avatar>\r\n\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Process;"]},"metadata":{},"sourceType":"module"}