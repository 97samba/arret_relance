{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\projet SFR\\\\AR\\\\src\\\\Components\\\\ARCard.js\",\n    _s = $RefreshSig$();\n\nimport { Card, CardContent, CardHeader, Container, makeStyles, Typography } from '@material-ui/core';\nimport { Code, Description, SettingsSharp, Storage } from '@material-ui/icons';\nimport Service from './Actions/Service';\nimport Database from './Actions/Database';\nimport Command from './Actions/Command';\nimport ARScript from './Actions/ARScript';\nimport { useEffect, useState } from 'react';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\nimport ActionContext from '../Context/ActionContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardWidth = 950;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: cardWidth,\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst ARCard = ({\n  name\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [actions, SetActions] = useState([]);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/Actions\"); //.then(res => res.json())\n    //.then(data => SetActions(data))\n  }, []);\n\n  const AddScript = () => {\n    console.log(\"script\");\n    const newState = [...actions, {\n      id: actions.length + 1,\n      type: 'script'\n    }];\n    SetActions(newState);\n  };\n\n  const AddDB = () => {\n    console.log(\"db\");\n    const newState = [...actions, {\n      id: actions.length + 1,\n      type: 'database'\n    }];\n    SetActions(newState);\n    console.log(actions);\n  };\n\n  const AddCommand = () => {\n    console.log(\"cmd\");\n    const newState = [...actions, {\n      id: actions.length + 1,\n      type: 'command'\n    }];\n    SetActions(newState);\n    console.log(actions);\n  };\n\n  const AddService = () => {\n    const newState = [...actions, {\n      id: actions.length + 1,\n      type: 'service'\n    }];\n    SetActions(newState);\n    {\n      /* \r\n         fetch('http://localhost:8000/Actions',{\r\n         method: 'POST',\r\n         headers:{\"Content-type\": \"application/json\"},\r\n         body: JSON.stringify(action)\r\n      })\r\n      */\n    }\n  };\n\n  const iconsAction = [{\n    icon: /*#__PURE__*/_jsxDEV(SettingsSharp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this),\n    name: 'Service',\n    action: AddService\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Code, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this),\n    name: 'Commande',\n    action: AddCommand\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this),\n    name: 'Script',\n    action: AddScript\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(Storage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this),\n    name: 'Base de donnÃ©es',\n    action: AddDB\n  }];\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: name,\n        subheader: \"sequence\",\n        action: /*#__PURE__*/_jsxDEV(SpeedDial, {\n          ariaLabel: \"SpeedDial\",\n          icon: /*#__PURE__*/_jsxDEV(SpeedDialIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 27\n          }, this),\n          open: open,\n          direction: \"left\",\n          onOpen: handleOpen,\n          onMouseLeave: handleClose,\n          children: iconsAction.map(action => /*#__PURE__*/_jsxDEV(SpeedDialAction, {\n            icon: action.icon,\n            tooltipTitle: action.name,\n            tooltipPlacement: \"top\",\n            onClick: action.action\n          }, action.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(ActionContext.Provider, {\n          value: {\n            actions,\n            SetActions\n          },\n          children: actions.map(item => item.type === \"service\" ? /*#__PURE__*/_jsxDEV(Service, {}, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 61\n          }, this) : item.type === \"script\" ? /*#__PURE__*/_jsxDEV(ARScript, {\n            actionID: item.id\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 62\n          }, this) : item.type === \"database\" ? /*#__PURE__*/_jsxDEV(Database, {\n            actionID: item.id\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 60\n          }, this) : item.type === \"command\" ? /*#__PURE__*/_jsxDEV(Command, {\n            actionID: item.id\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 61\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ARCard, \"JnzzXQVxG32J02xz3JZlJWBpdos=\", false, function () {\n  return [useStyles];\n});\n\n_c = ARCard;\nexport default ARCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ARCard\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/projet SFR/AR/src/Components/ARCard.js"],"names":["Card","CardContent","CardHeader","Container","makeStyles","Typography","Code","Description","SettingsSharp","Storage","Service","Database","Command","ARScript","useEffect","useState","SpeedDial","SpeedDialAction","SpeedDialIcon","ActionContext","cardWidth","useStyles","theme","root","width","marginBottom","spacing","ARCard","name","classes","actions","SetActions","open","setOpen","fetch","AddScript","console","log","newState","id","length","type","AddDB","AddCommand","AddService","iconsAction","icon","action","handleClose","handleOpen","map","item"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,EAAyCC,SAAzC,EAAqDC,UAArD,EAAiEC,UAAjE,QAAkF,mBAAlF;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,aAA5B,EAA2CC,OAA3C,QAA0D,oBAA1D;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,kBAA/C;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;AAEA,MAAMC,SAAS,GAAG,GAAlB;AACA,MAAMC,SAAS,GAAGjB,UAAU,CAACkB,KAAK,KAAI;AAClCC,EAAAA,IAAI,EAAC;AACDC,IAAAA,KAAK,EAAGJ,SADP;AAEDK,IAAAA,YAAY,EAAGH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFd;AAD6B,CAAJ,CAAN,CAA5B;;AAMA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACvB,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,IAAD,EAAMC,OAAN,IAAiBlB,QAAQ,CAAC,KAAD,CAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXoB,IAAAA,KAAK,CAAC,+BAAD,CAAL,CADW,CAEX;AACA;AACH,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMC,SAAS,GAAG,MAAK;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAMC,QAAQ,GAAG,CACb,GAAGR,OADU,EACF;AACPS,MAAAA,EAAE,EAAET,OAAO,CAACU,MAAR,GAAiB,CADd;AAGPC,MAAAA,IAAI,EAAC;AAHE,KADE,CAAjB;AAOAV,IAAAA,UAAU,CAACO,QAAD,CAAV;AACH,GAVD;;AAWA,QAAMI,KAAK,GAAG,MAAK;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,UAAMC,QAAQ,GAAG,CACb,GAAGR,OADU,EACF;AAEPS,MAAAA,EAAE,EAAET,OAAO,CAACU,MAAR,GAAiB,CAFd;AAGPC,MAAAA,IAAI,EAAC;AAHE,KADE,CAAjB;AAOAV,IAAAA,UAAU,CAACO,QAAD,CAAV;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACH,GAXD;;AAYA,QAAMa,UAAU,GAAG,MAAK;AACpBP,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,UAAMC,QAAQ,GAAG,CACb,GAAGR,OADU,EACF;AACPS,MAAAA,EAAE,EAAET,OAAO,CAACU,MAAR,GAAiB,CADd;AAEPC,MAAAA,IAAI,EAAC;AAFE,KADE,CAAjB;AAOAV,IAAAA,UAAU,CAACO,QAAD,CAAV;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AAEH,GAZD;;AAaA,QAAMc,UAAU,GAAG,MAAK;AAEpB,UAAMN,QAAQ,GAAG,CACb,GAAGR,OADU,EACF;AACPS,MAAAA,EAAE,EAAET,OAAO,CAACU,MAAR,GAAiB,CADd;AAGPC,MAAAA,IAAI,EAAC;AAHE,KADE,CAAjB;AAOAV,IAAAA,UAAU,CAACO,QAAD,CAAV;AACA;AAAC;AACT;AACA;AACA;AACA;AACA;AACA;AAAO;AACF,GAjBD;;AAkBA,QAAMO,WAAW,GAAG,CAChB;AAACC,IAAAA,IAAI,eAAG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAA2BlB,IAAAA,IAAI,EAAE,SAAjC;AAA4CmB,IAAAA,MAAM,EAAEH;AAApD,GADgB,EAEhB;AAACE,IAAAA,IAAI,eAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAkBlB,IAAAA,IAAI,EAAE,UAAxB;AAAoCmB,IAAAA,MAAM,EAAEJ;AAA5C,GAFgB,EAGhB;AAACG,IAAAA,IAAI,eAAG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAyBlB,IAAAA,IAAI,EAAE,QAA/B;AAAyCmB,IAAAA,MAAM,EAAEZ;AAAjD,GAHgB,EAIhB;AAACW,IAAAA,IAAI,eAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AAAqBlB,IAAAA,IAAI,EAAE,iBAA3B;AAA8CmB,IAAAA,MAAM,EAAEL;AAAtD,GAJgB,CAApB;;AAMA,QAAMM,WAAW,GAAC,MAAK;AACnBf,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMgB,UAAU,GAAC,MAAK;AAClBhB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAGJ,OAAO,CAACN,IAA1B;AAAA,8BACI,QAAC,UAAD;AACA,QAAA,KAAK,EAAIK,IADT;AAEA,QAAA,SAAS,EAAG,UAFZ;AAGA,QAAA,MAAM,eACF,QAAC,SAAD;AACA,UAAA,SAAS,EAAC,WADV;AAEA,UAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAFN;AAGA,UAAA,IAAI,EAAGI,IAHP;AAIA,UAAA,SAAS,EAAG,MAJZ;AAKA,UAAA,MAAM,EAAEiB,UALR;AAMA,UAAA,YAAY,EAAED,WANd;AAAA,oBAQCH,WAAW,CAACK,GAAZ,CAAiBH,MAAD,iBACb,QAAC,eAAD;AAEI,YAAA,IAAI,EAAIA,MAAM,CAACD,IAFnB;AAGI,YAAA,YAAY,EAAEC,MAAM,CAACnB,IAHzB;AAII,YAAA,gBAAgB,EAAG,KAJvB;AAKI,YAAA,OAAO,EAAGmB,MAAM,CAACA;AALrB,aACSA,MAAM,CAACnB,IADhB;AAAA;AAAA;AAAA;AAAA,kBADH;AARD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADJ,eA2BI,QAAC,WAAD;AAAA,+BACI,QAAC,aAAD,CAAe,QAAf;AAAwB,UAAA,KAAK,EAAE;AAACE,YAAAA,OAAD;AAAUC,YAAAA;AAAV,WAA/B;AAAA,oBACKD,OAAO,CAACoB,GAAR,CAAYC,IAAI,IAETA,IAAI,CAACV,IAAL,KAAc,SAAd,gBAA4B,QAAC,OAAD,MAAcU,IAAI,CAACZ,EAAnB;AAAA;AAAA;AAAA;AAAA,kBAA5B,GACAY,IAAI,CAACV,IAAL,KAAc,QAAd,gBAA6B,QAAC,QAAD;AAAwB,YAAA,QAAQ,EAAEU,IAAI,CAACZ;AAAvC,aAAeY,IAAI,CAACZ,EAApB;AAAA;AAAA;AAAA;AAAA,kBAA7B,GACAY,IAAI,CAACV,IAAL,KAAc,UAAd,gBAA2B,QAAC,QAAD;AAAwB,YAAA,QAAQ,EAAEU,IAAI,CAACZ;AAAvC,aAAeY,IAAI,CAACZ,EAApB;AAAA;AAAA;AAAA;AAAA,kBAA3B,GACAY,IAAI,CAACV,IAAL,KAAc,SAAd,gBAA4B,QAAC,OAAD;AAAuB,YAAA,QAAQ,EAAEU,IAAI,CAACZ;AAAtC,aAAcY,IAAI,CAACZ,EAAnB;AAAA;AAAA;AAAA;AAAA,kBAA5B,GACA,IANP;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH,CA5HD;;GAAMZ,M;UACcN,S;;;KADdM,M;AA8HN,eAAeA,MAAf","sourcesContent":["import { Card, CardContent, CardHeader,  Container,  makeStyles, Typography} from '@material-ui/core'\r\nimport { Code, Description, SettingsSharp, Storage } from '@material-ui/icons';\r\nimport Service from './Actions/Service';\r\nimport Database from './Actions/Database';\r\nimport Command from './Actions/Command';\r\nimport ARScript from './Actions/ARScript';\r\nimport { useEffect, useState } from 'react';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial'\r\nimport { SpeedDialAction, SpeedDialIcon } from '@material-ui/lab';\r\nimport ActionContext from '../Context/ActionContext';\r\n\r\nconst cardWidth = 950\r\nconst useStyles = makeStyles(theme =>({\r\n    root:{\r\n        width : cardWidth,\r\n        marginBottom : theme.spacing(2) \r\n    }\r\n}))\r\nconst ARCard = ({name}) => {\r\n    const classes = useStyles();\r\n    const [actions, SetActions] = useState([])\r\n    const [open,setOpen] = useState(false)\r\n\r\n    useEffect(() =>{\r\n        fetch(\"http://localhost:8000/Actions\")\r\n        //.then(res => res.json())\r\n        //.then(data => SetActions(data))\r\n    },[])\r\n\r\n    const AddScript = () =>{\r\n        console.log(\"script\")\r\n        const newState = [\r\n            ...actions,{\r\n                id: actions.length + 1,\r\n\r\n                type:'script'\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n    }\r\n    const AddDB = () =>{\r\n        console.log(\"db\")\r\n        const newState = [\r\n            ...actions,{\r\n                \r\n                id: actions.length + 1,\r\n                type:'database'\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        console.log(actions)\r\n    }\r\n    const AddCommand = () =>{\r\n        console.log(\"cmd\")\r\n        const newState = [\r\n            ...actions,{\r\n                id: actions.length + 1,\r\n                type:'command'\r\n                \r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        console.log(actions)\r\n\r\n    }\r\n    const AddService = () =>{\r\n        \r\n        const newState = [\r\n            ...actions,{\r\n                id: actions.length + 1,\r\n\r\n                type:'service'\r\n            }\r\n        ]\r\n        SetActions(newState)\r\n        {/* \r\n            fetch('http://localhost:8000/Actions',{\r\n            method: 'POST',\r\n            headers:{\"Content-type\": \"application/json\"},\r\n            body: JSON.stringify(action)\r\n        })\r\n    */}\r\n    }\r\n    const iconsAction = [\r\n        {icon : <SettingsSharp />, name: 'Service', action: AddService},\r\n        {icon : <Code />, name: 'Commande', action: AddCommand},\r\n        {icon : <Description />, name: 'Script', action: AddScript},\r\n        {icon : <Storage />, name: 'Base de donnÃ©es', action: AddDB}\r\n    ]\r\n    const handleClose=() =>{\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleOpen=() =>{\r\n        setOpen(true)\r\n    }\r\n\r\n    return ( \r\n        <Container>\r\n            <Card className= {classes.root}>\r\n                <CardHeader \r\n                title = {name}\r\n                subheader = 'sequence'\r\n                action = {\r\n                    <SpeedDial\r\n                    ariaLabel=\"SpeedDial\"\r\n                    icon={<SpeedDialIcon />}\r\n                    open={ open }\r\n                    direction = 'left'\r\n                    onOpen={handleOpen}\r\n                    onMouseLeave={handleClose}\r\n                >\r\n                    {iconsAction.map((action) => (\r\n                        <SpeedDialAction \r\n                            key={action.name}\r\n                            icon = {action.icon}\r\n                            tooltipTitle={action.name}\r\n                            tooltipPlacement = 'top'\r\n                            onClick= {action.action}\r\n                        />\r\n                    ))}\r\n\r\n                </SpeedDial>\r\n                }\r\n                />\r\n\r\n                <CardContent>\r\n                    <ActionContext.Provider value={{actions, SetActions}}>\r\n                        {actions.map(item => (\r\n                            (\r\n                                item.type === \"service\" ?   <Service key={item.id}/> :\r\n                                item.type === \"script\"  ?    <ARScript key={item.id} actionID={item.id} /> :\r\n                                item.type === \"database\"?  <Database key={item.id} actionID={item.id }/> :\r\n                                item.type === \"command\" ?   <Command key={item.id} actionID={item.id} /> :\r\n                                null\r\n                            )\r\n                        ))}\r\n                    </ActionContext.Provider>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n     ); \r\n}\r\n \r\nexport default ARCard;"]},"metadata":{},"sourceType":"module"}